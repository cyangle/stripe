#  Stripe API
#
# The Stripe REST API. Please see https://stripe.com/docs/api for more details.
#
# The version of the OpenAPI document: 2020-08-27
# Contact: dev-platform@stripe.com
# Generated by: https://openapi-generator.tech
#

require "json"
require "time"
require "log"

module Stripe
  @[JSON::Serializable::Options(emit_nulls: true)]
  class SourceTypeSepaCreditTransfer
    include JSON::Serializable
    include JSON::Serializable::Unmapped

    # Optional properties
    @[JSON::Field(key: "bank_name", type: String?, presence: true, ignore_serialize: bank_name.nil? && !bank_name_present?)]
    property bank_name : String?

    @[JSON::Field(ignore: true)]
    property? bank_name_present : Bool = false

    @[JSON::Field(key: "bic", type: String?, presence: true, ignore_serialize: bic.nil? && !bic_present?)]
    property bic : String?

    @[JSON::Field(ignore: true)]
    property? bic_present : Bool = false

    @[JSON::Field(key: "iban", type: String?, presence: true, ignore_serialize: iban.nil? && !iban_present?)]
    property iban : String?

    @[JSON::Field(ignore: true)]
    property? iban_present : Bool = false

    @[JSON::Field(key: "refund_account_holder_address_city", type: String?, presence: true, ignore_serialize: refund_account_holder_address_city.nil? && !refund_account_holder_address_city_present?)]
    property refund_account_holder_address_city : String?

    @[JSON::Field(ignore: true)]
    property? refund_account_holder_address_city_present : Bool = false

    @[JSON::Field(key: "refund_account_holder_address_country", type: String?, presence: true, ignore_serialize: refund_account_holder_address_country.nil? && !refund_account_holder_address_country_present?)]
    property refund_account_holder_address_country : String?

    @[JSON::Field(ignore: true)]
    property? refund_account_holder_address_country_present : Bool = false

    @[JSON::Field(key: "refund_account_holder_address_line1", type: String?, presence: true, ignore_serialize: refund_account_holder_address_line1.nil? && !refund_account_holder_address_line1_present?)]
    property refund_account_holder_address_line1 : String?

    @[JSON::Field(ignore: true)]
    property? refund_account_holder_address_line1_present : Bool = false

    @[JSON::Field(key: "refund_account_holder_address_line2", type: String?, presence: true, ignore_serialize: refund_account_holder_address_line2.nil? && !refund_account_holder_address_line2_present?)]
    property refund_account_holder_address_line2 : String?

    @[JSON::Field(ignore: true)]
    property? refund_account_holder_address_line2_present : Bool = false

    @[JSON::Field(key: "refund_account_holder_address_postal_code", type: String?, presence: true, ignore_serialize: refund_account_holder_address_postal_code.nil? && !refund_account_holder_address_postal_code_present?)]
    property refund_account_holder_address_postal_code : String?

    @[JSON::Field(ignore: true)]
    property? refund_account_holder_address_postal_code_present : Bool = false

    @[JSON::Field(key: "refund_account_holder_address_state", type: String?, presence: true, ignore_serialize: refund_account_holder_address_state.nil? && !refund_account_holder_address_state_present?)]
    property refund_account_holder_address_state : String?

    @[JSON::Field(ignore: true)]
    property? refund_account_holder_address_state_present : Bool = false

    @[JSON::Field(key: "refund_account_holder_name", type: String?, presence: true, ignore_serialize: refund_account_holder_name.nil? && !refund_account_holder_name_present?)]
    property refund_account_holder_name : String?

    @[JSON::Field(ignore: true)]
    property? refund_account_holder_name_present : Bool = false

    @[JSON::Field(key: "refund_iban", type: String?, presence: true, ignore_serialize: refund_iban.nil? && !refund_iban_present?)]
    property refund_iban : String?

    @[JSON::Field(ignore: true)]
    property? refund_iban_present : Bool = false

    # Initializes the object
    # @param [Hash] attributes Model attributes in the form of hash
    def initialize(*, @bank_name : String? = nil, @bic : String? = nil, @iban : String? = nil, @refund_account_holder_address_city : String? = nil, @refund_account_holder_address_country : String? = nil, @refund_account_holder_address_line1 : String? = nil, @refund_account_holder_address_line2 : String? = nil, @refund_account_holder_address_postal_code : String? = nil, @refund_account_holder_address_state : String? = nil, @refund_account_holder_name : String? = nil, @refund_iban : String? = nil)
    end

    # Show invalid properties with the reasons. Usually used together with valid?
    # @return Array for valid properties with the reasons
    def list_invalid_properties
      invalid_properties = Array(String).new

      invalid_properties
    end

    # Check to see if the all the properties in the model are valid
    # @return true if the model is valid
    def valid?
      true
    end

    # Checks equality by comparing each attribute.
    # @param [Object] Object to be compared
    def ==(o)
      return true if self.same?(o)
      self.class == o.class &&
        bank_name == o.bank_name &&
        bic == o.bic &&
        iban == o.iban &&
        refund_account_holder_address_city == o.refund_account_holder_address_city &&
        refund_account_holder_address_country == o.refund_account_holder_address_country &&
        refund_account_holder_address_line1 == o.refund_account_holder_address_line1 &&
        refund_account_holder_address_line2 == o.refund_account_holder_address_line2 &&
        refund_account_holder_address_postal_code == o.refund_account_holder_address_postal_code &&
        refund_account_holder_address_state == o.refund_account_holder_address_state &&
        refund_account_holder_name == o.refund_account_holder_name &&
        refund_iban == o.refund_iban
    end

    # @see the `==` method
    # @param [Object] Object to be compared
    def eql?(o)
      self == o
    end

    # Calculates hash code according to all attributes.
    # @return [UInt64] Hash code
    def_hash(@bank_name, @bic, @iban, @refund_account_holder_address_city, @refund_account_holder_address_country, @refund_account_holder_address_line1, @refund_account_holder_address_line2, @refund_account_holder_address_postal_code, @refund_account_holder_address_state, @refund_account_holder_name, @refund_iban)
  end
end
