#  Stripe API
#
# The Stripe REST API. Please see https://stripe.com/docs/api for more details.
#
# The version of the OpenAPI document: 2024-06-20
# Contact: dev-platform@stripe.com
# Generated by: https://openapi-generator.tech
#

require "../../core"

require "./invoice_account_tax_ids_inner"
require "./invoice_setting_custom_field"
require "./invoice_setting_subscription_schedule_phase_setting_issuer"
require "./payment_links_resource_invoice_settings_rendering_options"

module Stripe
  #
  class PaymentPagesCheckoutSessionInvoiceSettings
    include JSON::Serializable
    include JSON::Serializable::Unmapped
    include OpenApi::Validatable
    include OpenApi::Json

    # Required Properties

    # The account tax IDs associated with the invoice.
    @[JSON::Field(key: "account_tax_ids", type: Array(Stripe::InvoiceAccountTaxIdsInner)?, default: nil, required: true, nullable: true, emit_null: true)]
    getter account_tax_ids : Array(Stripe::InvoiceAccountTaxIdsInner)? = nil

    # Custom fields displayed on the invoice.
    @[JSON::Field(key: "custom_fields", type: Array(Stripe::InvoiceSettingCustomField)?, default: nil, required: true, nullable: true, emit_null: true)]
    getter custom_fields : Array(Stripe::InvoiceSettingCustomField)? = nil

    # An arbitrary string attached to the object. Often useful for displaying to users.
    @[JSON::Field(key: "description", type: String?, default: nil, required: true, nullable: true, emit_null: true)]
    getter description : String? = nil
    MAX_LENGTH_FOR_DESCRIPTION = 5000

    # Footer displayed on the invoice.
    @[JSON::Field(key: "footer", type: String?, default: nil, required: true, nullable: true, emit_null: true)]
    getter footer : String? = nil
    MAX_LENGTH_FOR_FOOTER = 5000

    @[JSON::Field(key: "issuer", type: Stripe::InvoiceSettingSubscriptionSchedulePhaseSettingIssuer?, default: nil, required: true, nullable: true, emit_null: true)]
    getter issuer : Stripe::InvoiceSettingSubscriptionSchedulePhaseSettingIssuer? = nil

    @[JSON::Field(key: "metadata", type: Hash(String, String)?, default: nil, required: true, nullable: true, emit_null: true)]
    getter metadata : Hash(String, String)? = nil

    @[JSON::Field(key: "rendering_options", type: Stripe::PaymentLinksResourceInvoiceSettingsRenderingOptions?, default: nil, required: true, nullable: true, emit_null: true)]
    getter rendering_options : Stripe::PaymentLinksResourceInvoiceSettingsRenderingOptions? = nil

    # End of Required Properties

    # Initializes the object
    # @param [Hash] attributes Model attributes in the form of hash
    def initialize(
      *,
      # Required properties
      @account_tax_ids : Array(Stripe::InvoiceAccountTaxIdsInner)? = nil,
      @custom_fields : Array(Stripe::InvoiceSettingCustomField)? = nil,
      @description : String? = nil,
      @footer : String? = nil,
      @issuer : Stripe::InvoiceSettingSubscriptionSchedulePhaseSettingIssuer? = nil,
      @metadata : Hash(String, String)? = nil,
      @rendering_options : Stripe::PaymentLinksResourceInvoiceSettingsRenderingOptions? = nil
    )
    end

    # Show invalid properties with the reasons. Usually used together with valid?
    # @return Array for valid properties with the reasons
    def list_invalid_properties : Array(String)
      invalid_properties = Array(String).new

      unless (_account_tax_ids = @account_tax_ids).nil?
        invalid_properties.concat(OpenApi::ContainerValidator.list_invalid_properties_for(key: "account_tax_ids", container: _account_tax_ids)) if _account_tax_ids.is_a?(Array)
      end
      unless (_custom_fields = @custom_fields).nil?
        invalid_properties.concat(OpenApi::ContainerValidator.list_invalid_properties_for(key: "custom_fields", container: _custom_fields)) if _custom_fields.is_a?(Array)
      end
      unless (_description = @description).nil?
        if max_length_error = OpenApi::PrimitiveValidator.max_length_error("description", _description.to_s.size, MAX_LENGTH_FOR_DESCRIPTION)
          invalid_properties.push(max_length_error)
        end
      end
      unless (_footer = @footer).nil?
        if max_length_error = OpenApi::PrimitiveValidator.max_length_error("footer", _footer.to_s.size, MAX_LENGTH_FOR_FOOTER)
          invalid_properties.push(max_length_error)
        end
      end
      unless (_issuer = @issuer).nil?
        invalid_properties.concat(_issuer.list_invalid_properties_for("issuer")) if _issuer.is_a?(OpenApi::Validatable)
      end

      unless (_rendering_options = @rendering_options).nil?
        invalid_properties.concat(_rendering_options.list_invalid_properties_for("rendering_options")) if _rendering_options.is_a?(OpenApi::Validatable)
      end
      invalid_properties
    end

    # Check to see if the all the properties in the model are valid
    # @return true if the model is valid
    def valid? : Bool
      unless (_account_tax_ids = @account_tax_ids).nil?
        return false if _account_tax_ids.is_a?(Array) && !OpenApi::ContainerValidator.valid?(container: _account_tax_ids)
      end

      unless (_custom_fields = @custom_fields).nil?
        return false if _custom_fields.is_a?(Array) && !OpenApi::ContainerValidator.valid?(container: _custom_fields)
      end

      unless (_description = @description).nil?
        return false if _description.to_s.size > MAX_LENGTH_FOR_DESCRIPTION
      end

      unless (_footer = @footer).nil?
        return false if _footer.to_s.size > MAX_LENGTH_FOR_FOOTER
      end

      unless (_issuer = @issuer).nil?
        return false if _issuer.is_a?(OpenApi::Validatable) && !_issuer.valid?
      end

      unless (_rendering_options = @rendering_options).nil?
        return false if _rendering_options.is_a?(OpenApi::Validatable) && !_rendering_options.valid?
      end

      true
    end

    # Custom attribute writer method checking allowed values (enum).
    # @param [Object] account_tax_ids Object to be assigned
    def account_tax_ids=(new_value : Array(Stripe::InvoiceAccountTaxIdsInner)?)
      unless new_value.nil?
        OpenApi::ContainerValidator.validate(container: new_value) if new_value.is_a?(Array)
      end

      @account_tax_ids = new_value
    end

    # Custom attribute writer method checking allowed values (enum).
    # @param [Object] custom_fields Object to be assigned
    def custom_fields=(new_value : Array(Stripe::InvoiceSettingCustomField)?)
      unless new_value.nil?
        OpenApi::ContainerValidator.validate(container: new_value) if new_value.is_a?(Array)
      end

      @custom_fields = new_value
    end

    # Custom attribute writer method checking allowed values (enum).
    # @param [Object] description Object to be assigned
    def description=(new_value : String?)
      unless new_value.nil?
        OpenApi::PrimitiveValidator.validate_max_length("description", new_value.to_s.size, MAX_LENGTH_FOR_DESCRIPTION)
      end

      @description = new_value
    end

    # Custom attribute writer method checking allowed values (enum).
    # @param [Object] footer Object to be assigned
    def footer=(new_value : String?)
      unless new_value.nil?
        OpenApi::PrimitiveValidator.validate_max_length("footer", new_value.to_s.size, MAX_LENGTH_FOR_FOOTER)
      end

      @footer = new_value
    end

    # Custom attribute writer method checking allowed values (enum).
    # @param [Object] issuer Object to be assigned
    def issuer=(new_value : Stripe::InvoiceSettingSubscriptionSchedulePhaseSettingIssuer?)
      unless new_value.nil?
        new_value.validate if new_value.is_a?(OpenApi::Validatable)
      end

      @issuer = new_value
    end

    # Custom attribute writer method checking allowed values (enum).
    # @param [Object] metadata Object to be assigned
    def metadata=(new_value : Hash(String, String)?)
      @metadata = new_value
    end

    # Custom attribute writer method checking allowed values (enum).
    # @param [Object] rendering_options Object to be assigned
    def rendering_options=(new_value : Stripe::PaymentLinksResourceInvoiceSettingsRenderingOptions?)
      unless new_value.nil?
        new_value.validate if new_value.is_a?(OpenApi::Validatable)
      end

      @rendering_options = new_value
    end

    # Generates #hash and #== methods from all fields
    # #== @return [Bool]
    # #hash calculates hash code according to all attributes.
    # #hash @return [UInt64] Hash code
    def_equals_and_hash(@account_tax_ids, @custom_fields, @description, @footer, @issuer, @metadata, @rendering_options)
  end
end
