#  Stripe API
#
# The Stripe REST API. Please see https://stripe.com/docs/api for more details.
#
# The version of the OpenAPI document: 2020-08-27
# Contact: dev-platform@stripe.com
# Generated by: https://openapi-generator.tech
#

require "json"
require "time"
require "log"

module Stripe
  # Details about the payment method at the time of the transaction.
  @[JSON::Serializable::Options(emit_nulls: true)]
  class ChargePaymentMethodDetails
    include JSON::Serializable
    include JSON::Serializable::Unmapped

    # Required properties
    # The type of transaction-specific details of the payment method used in the payment, one of `ach_credit_transfer`, `ach_debit`, `acss_debit`, `alipay`, `au_becs_debit`, `bancontact`, `card`, `card_present`, `eps`, `giropay`, `ideal`, `klarna`, `multibanco`, `p24`, `sepa_debit`, `sofort`, `stripe_account`, or `wechat`. An additional hash is included on `payment_method_details` with a name matching this value. It contains information specific to the payment method.
    @[JSON::Field(key: "type", type: String?)]
    getter _type : String?

    # Optional properties
    @[JSON::Field(key: "ach_credit_transfer", type: PaymentMethodDetailsAchCreditTransfer?, presence: true, ignore_serialize: ach_credit_transfer.nil? && !ach_credit_transfer_present?)]
    property ach_credit_transfer : PaymentMethodDetailsAchCreditTransfer?

    @[JSON::Field(ignore: true)]
    property? ach_credit_transfer_present : Bool = false

    @[JSON::Field(key: "ach_debit", type: PaymentMethodDetailsAchDebit?, presence: true, ignore_serialize: ach_debit.nil? && !ach_debit_present?)]
    property ach_debit : PaymentMethodDetailsAchDebit?

    @[JSON::Field(ignore: true)]
    property? ach_debit_present : Bool = false

    @[JSON::Field(key: "acss_debit", type: PaymentMethodDetailsAcssDebit?, presence: true, ignore_serialize: acss_debit.nil? && !acss_debit_present?)]
    property acss_debit : PaymentMethodDetailsAcssDebit?

    @[JSON::Field(ignore: true)]
    property? acss_debit_present : Bool = false

    #
    @[JSON::Field(key: "affirm", type: JSON::Any, presence: true, ignore_serialize: affirm.nil? && !affirm_present?)]
    property affirm : JSON::Any

    @[JSON::Field(ignore: true)]
    property? affirm_present : Bool = false

    @[JSON::Field(key: "afterpay_clearpay", type: PaymentMethodDetailsAfterpayClearpay?, presence: true, ignore_serialize: afterpay_clearpay.nil? && !afterpay_clearpay_present?)]
    property afterpay_clearpay : PaymentMethodDetailsAfterpayClearpay?

    @[JSON::Field(ignore: true)]
    property? afterpay_clearpay_present : Bool = false

    @[JSON::Field(key: "alipay", type: PaymentFlowsPrivatePaymentMethodsAlipayDetails?, presence: true, ignore_serialize: alipay.nil? && !alipay_present?)]
    property alipay : PaymentFlowsPrivatePaymentMethodsAlipayDetails?

    @[JSON::Field(ignore: true)]
    property? alipay_present : Bool = false

    @[JSON::Field(key: "au_becs_debit", type: PaymentMethodDetailsAuBecsDebit?, presence: true, ignore_serialize: au_becs_debit.nil? && !au_becs_debit_present?)]
    property au_becs_debit : PaymentMethodDetailsAuBecsDebit?

    @[JSON::Field(ignore: true)]
    property? au_becs_debit_present : Bool = false

    @[JSON::Field(key: "bacs_debit", type: PaymentMethodDetailsBacsDebit?, presence: true, ignore_serialize: bacs_debit.nil? && !bacs_debit_present?)]
    property bacs_debit : PaymentMethodDetailsBacsDebit?

    @[JSON::Field(ignore: true)]
    property? bacs_debit_present : Bool = false

    @[JSON::Field(key: "bancontact", type: PaymentMethodDetailsBancontact?, presence: true, ignore_serialize: bancontact.nil? && !bancontact_present?)]
    property bancontact : PaymentMethodDetailsBancontact?

    @[JSON::Field(ignore: true)]
    property? bancontact_present : Bool = false

    @[JSON::Field(key: "boleto", type: PaymentMethodDetailsBoleto?, presence: true, ignore_serialize: boleto.nil? && !boleto_present?)]
    property boleto : PaymentMethodDetailsBoleto?

    @[JSON::Field(ignore: true)]
    property? boleto_present : Bool = false

    @[JSON::Field(key: "card", type: PaymentMethodDetailsCard?, presence: true, ignore_serialize: card.nil? && !card_present?)]
    property card : PaymentMethodDetailsCard?

    @[JSON::Field(ignore: true)]
    property? card_present : Bool = false

    @[JSON::Field(key: "card_present", type: PaymentMethodDetailsCardPresent?, presence: true, ignore_serialize: card_present.nil? && !card_present_present?)]
    property card_present2 : PaymentMethodDetailsCardPresent?

    @[JSON::Field(ignore: true)]
    property? card_present2_present : Bool = false

    #
    @[JSON::Field(key: "customer_balance", type: JSON::Any, presence: true, ignore_serialize: customer_balance.nil? && !customer_balance_present?)]
    property customer_balance : JSON::Any

    @[JSON::Field(ignore: true)]
    property? customer_balance_present : Bool = false

    @[JSON::Field(key: "eps", type: PaymentMethodDetailsEps?, presence: true, ignore_serialize: eps.nil? && !eps_present?)]
    property eps : PaymentMethodDetailsEps?

    @[JSON::Field(ignore: true)]
    property? eps_present : Bool = false

    @[JSON::Field(key: "fpx", type: PaymentMethodDetailsFpx?, presence: true, ignore_serialize: fpx.nil? && !fpx_present?)]
    property fpx : PaymentMethodDetailsFpx?

    @[JSON::Field(ignore: true)]
    property? fpx_present : Bool = false

    @[JSON::Field(key: "giropay", type: PaymentMethodDetailsGiropay?, presence: true, ignore_serialize: giropay.nil? && !giropay_present?)]
    property giropay : PaymentMethodDetailsGiropay?

    @[JSON::Field(ignore: true)]
    property? giropay_present : Bool = false

    @[JSON::Field(key: "grabpay", type: PaymentMethodDetailsGrabpay?, presence: true, ignore_serialize: grabpay.nil? && !grabpay_present?)]
    property grabpay : PaymentMethodDetailsGrabpay?

    @[JSON::Field(ignore: true)]
    property? grabpay_present : Bool = false

    @[JSON::Field(key: "ideal", type: PaymentMethodDetailsIdeal?, presence: true, ignore_serialize: ideal.nil? && !ideal_present?)]
    property ideal : PaymentMethodDetailsIdeal?

    @[JSON::Field(ignore: true)]
    property? ideal_present : Bool = false

    @[JSON::Field(key: "interac_present", type: PaymentMethodDetailsInteracPresent?, presence: true, ignore_serialize: interac_present.nil? && !interac_present_present?)]
    property interac_present : PaymentMethodDetailsInteracPresent?

    @[JSON::Field(ignore: true)]
    property? interac_present_present : Bool = false

    @[JSON::Field(key: "klarna", type: PaymentMethodDetailsKlarna?, presence: true, ignore_serialize: klarna.nil? && !klarna_present?)]
    property klarna : PaymentMethodDetailsKlarna?

    @[JSON::Field(ignore: true)]
    property? klarna_present : Bool = false

    @[JSON::Field(key: "konbini", type: PaymentMethodDetailsKonbini?, presence: true, ignore_serialize: konbini.nil? && !konbini_present?)]
    property konbini : PaymentMethodDetailsKonbini?

    @[JSON::Field(ignore: true)]
    property? konbini_present : Bool = false

    #
    @[JSON::Field(key: "link", type: JSON::Any, presence: true, ignore_serialize: link.nil? && !link_present?)]
    property link : JSON::Any

    @[JSON::Field(ignore: true)]
    property? link_present : Bool = false

    @[JSON::Field(key: "multibanco", type: PaymentMethodDetailsMultibanco?, presence: true, ignore_serialize: multibanco.nil? && !multibanco_present?)]
    property multibanco : PaymentMethodDetailsMultibanco?

    @[JSON::Field(ignore: true)]
    property? multibanco_present : Bool = false

    @[JSON::Field(key: "oxxo", type: PaymentMethodDetailsOxxo?, presence: true, ignore_serialize: oxxo.nil? && !oxxo_present?)]
    property oxxo : PaymentMethodDetailsOxxo?

    @[JSON::Field(ignore: true)]
    property? oxxo_present : Bool = false

    @[JSON::Field(key: "p24", type: PaymentMethodDetailsP24?, presence: true, ignore_serialize: p24.nil? && !p24_present?)]
    property p24 : PaymentMethodDetailsP24?

    @[JSON::Field(ignore: true)]
    property? p24_present : Bool = false

    @[JSON::Field(key: "paynow", type: PaymentMethodDetailsPaynow?, presence: true, ignore_serialize: paynow.nil? && !paynow_present?)]
    property paynow : PaymentMethodDetailsPaynow?

    @[JSON::Field(ignore: true)]
    property? paynow_present : Bool = false

    @[JSON::Field(key: "sepa_credit_transfer", type: PaymentMethodDetailsSepaCreditTransfer?, presence: true, ignore_serialize: sepa_credit_transfer.nil? && !sepa_credit_transfer_present?)]
    property sepa_credit_transfer : PaymentMethodDetailsSepaCreditTransfer?

    @[JSON::Field(ignore: true)]
    property? sepa_credit_transfer_present : Bool = false

    @[JSON::Field(key: "sepa_debit", type: PaymentMethodDetailsSepaDebit?, presence: true, ignore_serialize: sepa_debit.nil? && !sepa_debit_present?)]
    property sepa_debit : PaymentMethodDetailsSepaDebit?

    @[JSON::Field(ignore: true)]
    property? sepa_debit_present : Bool = false

    @[JSON::Field(key: "sofort", type: PaymentMethodDetailsSofort?, presence: true, ignore_serialize: sofort.nil? && !sofort_present?)]
    property sofort : PaymentMethodDetailsSofort?

    @[JSON::Field(ignore: true)]
    property? sofort_present : Bool = false

    #
    @[JSON::Field(key: "stripe_account", type: JSON::Any, presence: true, ignore_serialize: stripe_account.nil? && !stripe_account_present?)]
    property stripe_account : JSON::Any

    @[JSON::Field(ignore: true)]
    property? stripe_account_present : Bool = false

    @[JSON::Field(key: "us_bank_account", type: PaymentMethodDetailsUsBankAccount?, presence: true, ignore_serialize: us_bank_account.nil? && !us_bank_account_present?)]
    property us_bank_account : PaymentMethodDetailsUsBankAccount?

    @[JSON::Field(ignore: true)]
    property? us_bank_account_present : Bool = false

    #
    @[JSON::Field(key: "wechat", type: JSON::Any, presence: true, ignore_serialize: wechat.nil? && !wechat_present?)]
    property wechat : JSON::Any

    @[JSON::Field(ignore: true)]
    property? wechat_present : Bool = false

    @[JSON::Field(key: "wechat_pay", type: PaymentMethodDetailsWechatPay?, presence: true, ignore_serialize: wechat_pay.nil? && !wechat_pay_present?)]
    property wechat_pay : PaymentMethodDetailsWechatPay?

    @[JSON::Field(ignore: true)]
    property? wechat_pay_present : Bool = false

    # List of class defined in anyOf (OpenAPI v3)
    def self.openapi_any_of
      [
        Stripe::PaymentMethodDetails,
      ]
    end

    # Initializes the object
    # @param [Hash] attributes Model attributes in the form of hash
    def initialize(*, @_type : String, @ach_credit_transfer : PaymentMethodDetailsAchCreditTransfer? = nil, @ach_debit : PaymentMethodDetailsAchDebit? = nil, @acss_debit : PaymentMethodDetailsAcssDebit? = nil, @affirm : JSON::Any = nil, @afterpay_clearpay : PaymentMethodDetailsAfterpayClearpay? = nil, @alipay : PaymentFlowsPrivatePaymentMethodsAlipayDetails? = nil, @au_becs_debit : PaymentMethodDetailsAuBecsDebit? = nil, @bacs_debit : PaymentMethodDetailsBacsDebit? = nil, @bancontact : PaymentMethodDetailsBancontact? = nil, @boleto : PaymentMethodDetailsBoleto? = nil, @card : PaymentMethodDetailsCard? = nil, @card_present2 : PaymentMethodDetailsCardPresent? = nil, @customer_balance : JSON::Any = nil, @eps : PaymentMethodDetailsEps? = nil, @fpx : PaymentMethodDetailsFpx? = nil, @giropay : PaymentMethodDetailsGiropay? = nil, @grabpay : PaymentMethodDetailsGrabpay? = nil, @ideal : PaymentMethodDetailsIdeal? = nil, @interac_present : PaymentMethodDetailsInteracPresent? = nil, @klarna : PaymentMethodDetailsKlarna? = nil, @konbini : PaymentMethodDetailsKonbini? = nil, @link : JSON::Any = nil, @multibanco : PaymentMethodDetailsMultibanco? = nil, @oxxo : PaymentMethodDetailsOxxo? = nil, @p24 : PaymentMethodDetailsP24? = nil, @paynow : PaymentMethodDetailsPaynow? = nil, @sepa_credit_transfer : PaymentMethodDetailsSepaCreditTransfer? = nil, @sepa_debit : PaymentMethodDetailsSepaDebit? = nil, @sofort : PaymentMethodDetailsSofort? = nil, @stripe_account : JSON::Any = nil, @us_bank_account : PaymentMethodDetailsUsBankAccount? = nil, @wechat : JSON::Any = nil, @wechat_pay : PaymentMethodDetailsWechatPay? = nil)
    end

    # Show invalid properties with the reasons. Usually used together with valid?
    # @return Array for valid properties with the reasons
    def list_invalid_properties
      invalid_properties = Array(String).new

      if @_type.to_s.size > 5000
        invalid_properties.push("invalid value for \"_type\", the character length must be smaller than or equal to 5000.")
      end

      invalid_properties
    end

    # Check to see if the all the properties in the model are valid
    # @return true if the model is valid
    def valid?
      return false if @_type.to_s.size > 5000
      _any_of_found = false
      json_string : String = self.to_json
      _any_of_found = self.class.openapi_any_of.any? do |_class|
        _any_of = begin
          _class.from_json(json_string)
        rescue
          nil
        end

        !_any_of.nil? && _any_of.not_nil!.valid?
      end

      if !_any_of_found
        return false
      end

      true
    end

    # Custom attribute writer method with validation
    # @param [Object] _type Value to be assigned
    def _type=(_type)
      if _type.to_s.size > 5000
        raise ArgumentError.new("invalid value for \"_type\", the character length must be smaller than or equal to 5000.")
      end

      @_type = _type
    end

    # Checks equality by comparing each attribute.
    # @param [Object] Object to be compared
    def ==(o)
      return true if self.same?(o)
      self.class == o.class &&
        ach_credit_transfer == o.ach_credit_transfer &&
        ach_debit == o.ach_debit &&
        acss_debit == o.acss_debit &&
        affirm == o.affirm &&
        afterpay_clearpay == o.afterpay_clearpay &&
        alipay == o.alipay &&
        au_becs_debit == o.au_becs_debit &&
        bacs_debit == o.bacs_debit &&
        bancontact == o.bancontact &&
        boleto == o.boleto &&
        card == o.card &&
        card_present2 == o.card_present2 &&
        customer_balance == o.customer_balance &&
        eps == o.eps &&
        fpx == o.fpx &&
        giropay == o.giropay &&
        grabpay == o.grabpay &&
        ideal == o.ideal &&
        interac_present == o.interac_present &&
        klarna == o.klarna &&
        konbini == o.konbini &&
        link == o.link &&
        multibanco == o.multibanco &&
        oxxo == o.oxxo &&
        p24 == o.p24 &&
        paynow == o.paynow &&
        sepa_credit_transfer == o.sepa_credit_transfer &&
        sepa_debit == o.sepa_debit &&
        sofort == o.sofort &&
        stripe_account == o.stripe_account &&
        _type == o._type &&
        us_bank_account == o.us_bank_account &&
        wechat == o.wechat &&
        wechat_pay == o.wechat_pay
    end

    # @see the `==` method
    # @param [Object] Object to be compared
    def eql?(o)
      self == o
    end

    # Calculates hash code according to all attributes.
    # @return [UInt64] Hash code
    def_hash(@ach_credit_transfer, @ach_debit, @acss_debit, @affirm, @afterpay_clearpay, @alipay, @au_becs_debit, @bacs_debit, @bancontact, @boleto, @card, @card_present2, @customer_balance, @eps, @fpx, @giropay, @grabpay, @ideal, @interac_present, @klarna, @konbini, @link, @multibanco, @oxxo, @p24, @paynow, @sepa_credit_transfer, @sepa_debit, @sofort, @stripe_account, @_type, @us_bank_account, @wechat, @wechat_pay)
  end
end
