#  Stripe API
#
# The Stripe REST API. Please see https://stripe.com/docs/api for more details.
#
# The version of the OpenAPI document: 2024-06-20
# Contact: dev-platform@stripe.com
# Generated by: https://openapi-generator.tech
#

require "../../core"

require "./level3_line_items"

module Stripe
  #
  class Level3
    include JSON::Serializable
    include JSON::Serializable::Unmapped
    include OpenApi::Validatable
    include OpenApi::Json

    # Required Properties

    @[JSON::Field(key: "line_items", type: Array(Stripe::Level3LineItems)?, default: nil, required: true, nullable: false, emit_null: false)]
    getter line_items : Array(Stripe::Level3LineItems)? = nil

    @[JSON::Field(key: "merchant_reference", type: String?, default: nil, required: true, nullable: false, emit_null: false)]
    getter merchant_reference : String? = nil
    MAX_LENGTH_FOR_MERCHANT_REFERENCE = 5000

    # End of Required Properties

    # Optional Properties

    @[JSON::Field(key: "customer_reference", type: String?, default: nil, required: false, nullable: false, emit_null: false)]
    getter customer_reference : String? = nil
    MAX_LENGTH_FOR_CUSTOMER_REFERENCE = 5000

    @[JSON::Field(key: "shipping_address_zip", type: String?, default: nil, required: false, nullable: false, emit_null: false)]
    getter shipping_address_zip : String? = nil
    MAX_LENGTH_FOR_SHIPPING_ADDRESS_ZIP = 5000

    @[JSON::Field(key: "shipping_amount", type: Int64?, default: nil, required: false, nullable: false, emit_null: false)]
    getter shipping_amount : Int64? = nil

    @[JSON::Field(key: "shipping_from_zip", type: String?, default: nil, required: false, nullable: false, emit_null: false)]
    getter shipping_from_zip : String? = nil
    MAX_LENGTH_FOR_SHIPPING_FROM_ZIP = 5000

    # Initializes the object
    # @param [Hash] attributes Model attributes in the form of hash
    def initialize(
      *,
      # Required properties
      @line_items : Array(Stripe::Level3LineItems)? = nil,
      @merchant_reference : String? = nil,
      # Optional properties
      @customer_reference : String? = nil,
      @shipping_address_zip : String? = nil,
      @shipping_amount : Int64? = nil,
      @shipping_from_zip : String? = nil
    )
    end

    # Show invalid properties with the reasons. Usually used together with valid?
    # @return Array for valid properties with the reasons
    def list_invalid_properties : Array(String)
      invalid_properties = Array(String).new

      invalid_properties.push("\"line_items\" is required and cannot be null") if @line_items.nil?

      unless (_line_items = @line_items).nil?
        invalid_properties.concat(OpenApi::ContainerValidator.list_invalid_properties_for(key: "line_items", container: _line_items)) if _line_items.is_a?(Array)
      end
      invalid_properties.push("\"merchant_reference\" is required and cannot be null") if @merchant_reference.nil?

      unless (_merchant_reference = @merchant_reference).nil?
        if max_length_error = OpenApi::PrimitiveValidator.max_length_error("merchant_reference", _merchant_reference.to_s.size, MAX_LENGTH_FOR_MERCHANT_REFERENCE)
          invalid_properties.push(max_length_error)
        end
      end
      unless (_customer_reference = @customer_reference).nil?
        if max_length_error = OpenApi::PrimitiveValidator.max_length_error("customer_reference", _customer_reference.to_s.size, MAX_LENGTH_FOR_CUSTOMER_REFERENCE)
          invalid_properties.push(max_length_error)
        end
      end
      unless (_shipping_address_zip = @shipping_address_zip).nil?
        if max_length_error = OpenApi::PrimitiveValidator.max_length_error("shipping_address_zip", _shipping_address_zip.to_s.size, MAX_LENGTH_FOR_SHIPPING_ADDRESS_ZIP)
          invalid_properties.push(max_length_error)
        end
      end

      unless (_shipping_from_zip = @shipping_from_zip).nil?
        if max_length_error = OpenApi::PrimitiveValidator.max_length_error("shipping_from_zip", _shipping_from_zip.to_s.size, MAX_LENGTH_FOR_SHIPPING_FROM_ZIP)
          invalid_properties.push(max_length_error)
        end
      end
      invalid_properties
    end

    # Check to see if the all the properties in the model are valid
    # @return true if the model is valid
    def valid? : Bool
      return false if @line_items.nil?
      unless (_line_items = @line_items).nil?
        return false if _line_items.is_a?(Array) && !OpenApi::ContainerValidator.valid?(container: _line_items)
      end

      return false if @merchant_reference.nil?
      unless (_merchant_reference = @merchant_reference).nil?
        return false if _merchant_reference.to_s.size > MAX_LENGTH_FOR_MERCHANT_REFERENCE
      end

      unless (_customer_reference = @customer_reference).nil?
        return false if _customer_reference.to_s.size > MAX_LENGTH_FOR_CUSTOMER_REFERENCE
      end

      unless (_shipping_address_zip = @shipping_address_zip).nil?
        return false if _shipping_address_zip.to_s.size > MAX_LENGTH_FOR_SHIPPING_ADDRESS_ZIP
      end

      unless (_shipping_from_zip = @shipping_from_zip).nil?
        return false if _shipping_from_zip.to_s.size > MAX_LENGTH_FOR_SHIPPING_FROM_ZIP
      end

      true
    end

    # Custom attribute writer method checking allowed values (enum).
    # @param [Object] line_items Object to be assigned
    def line_items=(new_value : Array(Stripe::Level3LineItems)?)
      raise ArgumentError.new("\"line_items\" is required and cannot be null") if new_value.nil?
      unless new_value.nil?
        OpenApi::ContainerValidator.validate(container: new_value) if new_value.is_a?(Array)
      end

      @line_items = new_value
    end

    # Custom attribute writer method checking allowed values (enum).
    # @param [Object] merchant_reference Object to be assigned
    def merchant_reference=(new_value : String?)
      raise ArgumentError.new("\"merchant_reference\" is required and cannot be null") if new_value.nil?
      unless new_value.nil?
        OpenApi::PrimitiveValidator.validate_max_length("merchant_reference", new_value.to_s.size, MAX_LENGTH_FOR_MERCHANT_REFERENCE)
      end

      @merchant_reference = new_value
    end

    # Custom attribute writer method checking allowed values (enum).
    # @param [Object] customer_reference Object to be assigned
    def customer_reference=(new_value : String?)
      unless new_value.nil?
        OpenApi::PrimitiveValidator.validate_max_length("customer_reference", new_value.to_s.size, MAX_LENGTH_FOR_CUSTOMER_REFERENCE)
      end

      @customer_reference = new_value
    end

    # Custom attribute writer method checking allowed values (enum).
    # @param [Object] shipping_address_zip Object to be assigned
    def shipping_address_zip=(new_value : String?)
      unless new_value.nil?
        OpenApi::PrimitiveValidator.validate_max_length("shipping_address_zip", new_value.to_s.size, MAX_LENGTH_FOR_SHIPPING_ADDRESS_ZIP)
      end

      @shipping_address_zip = new_value
    end

    # Custom attribute writer method checking allowed values (enum).
    # @param [Object] shipping_amount Object to be assigned
    def shipping_amount=(new_value : Int64?)
      @shipping_amount = new_value
    end

    # Custom attribute writer method checking allowed values (enum).
    # @param [Object] shipping_from_zip Object to be assigned
    def shipping_from_zip=(new_value : String?)
      unless new_value.nil?
        OpenApi::PrimitiveValidator.validate_max_length("shipping_from_zip", new_value.to_s.size, MAX_LENGTH_FOR_SHIPPING_FROM_ZIP)
      end

      @shipping_from_zip = new_value
    end

    # Generates #hash and #== methods from all fields
    # #== @return [Bool]
    # #hash calculates hash code according to all attributes.
    # #hash @return [UInt64] Hash code
    def_equals_and_hash(@line_items, @merchant_reference, @customer_reference, @shipping_address_zip, @shipping_amount, @shipping_from_zip)
  end
end
