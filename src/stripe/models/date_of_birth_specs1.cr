#  Stripe API
#
# The Stripe REST API. Please see https://stripe.com/docs/api for more details.
#
# The version of the OpenAPI document: 2020-08-27
# Contact: dev-platform@stripe.com
# Generated by: https://openapi-generator.tech
#

require "json"
require "time"
require "log"

module Stripe
  # The date of birth of this cardholder.
  @[JSON::Serializable::Options(emit_nulls: true)]
  class DateOfBirthSpecs1
    include JSON::Serializable
    include JSON::Serializable::Unmapped

    # Required properties
    # The day of birth, between 1 and 31.
    @[JSON::Field(key: "day", type: Int64)]
    property day : Int64

    # The month of birth, between 1 and 12.
    @[JSON::Field(key: "month", type: Int64)]
    property month : Int64

    # The four-digit year of birth.
    @[JSON::Field(key: "year", type: Int64)]
    property year : Int64

    # Initializes the object
    # @param [Hash] attributes Model attributes in the form of hash
    def initialize(*, @day : Int64, @month : Int64, @year : Int64)
    end

    # Show invalid properties with the reasons. Usually used together with valid?
    # @return Array for valid properties with the reasons
    def list_invalid_properties
      invalid_properties = Array(String).new

      invalid_properties
    end

    # Check to see if the all the properties in the model are valid
    # @return true if the model is valid
    def valid?
      true
    end

    # Checks equality by comparing each attribute.
    # @param [Object] Object to be compared
    def ==(o)
      return true if self.same?(o)
      self.class == o.class &&
        day == o.day &&
        month == o.month &&
        year == o.year
    end

    # @see the `==` method
    # @param [Object] Object to be compared
    def eql?(o)
      self == o
    end

    # Calculates hash code according to all attributes.
    # @return [UInt64] Hash code
    def_hash(@day, @month, @year)
  end
end
