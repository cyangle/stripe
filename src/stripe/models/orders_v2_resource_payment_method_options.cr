#  Stripe API
#
# The Stripe REST API. Please see https://stripe.com/docs/api for more details.
#
# The version of the OpenAPI document: 2020-08-27
# Contact: dev-platform@stripe.com
# Generated by: https://openapi-generator.tech
#

require "json"
require "time"
require "log"

module Stripe
  # 
  @[JSON::Serializable::Options(emit_nulls: true)]
  class OrdersV2ResourcePaymentMethodOptions
    include JSON::Serializable
    include JSON::Serializable::Unmapped


    # Optional properties

    @[JSON::Field(key: "acss_debit", type: PaymentIntentPaymentMethodOptionsAcssDebit?, presence: true, ignore_serialize: acss_debit.nil? && !acss_debit_present?)]
    property acss_debit : PaymentIntentPaymentMethodOptionsAcssDebit?

    @[JSON::Field(ignore: true)]
    property? acss_debit_present : Bool = false

    @[JSON::Field(key: "afterpay_clearpay", type: OrdersPaymentMethodOptionsAfterpayClearpay?, presence: true, ignore_serialize: afterpay_clearpay.nil? && !afterpay_clearpay_present?)]
    property afterpay_clearpay : OrdersPaymentMethodOptionsAfterpayClearpay?

    @[JSON::Field(ignore: true)]
    property? afterpay_clearpay_present : Bool = false

    @[JSON::Field(key: "alipay", type: PaymentMethodOptionsAlipay?, presence: true, ignore_serialize: alipay.nil? && !alipay_present?)]
    property alipay : PaymentMethodOptionsAlipay?

    @[JSON::Field(ignore: true)]
    property? alipay_present : Bool = false

    @[JSON::Field(key: "bancontact", type: PaymentMethodOptionsBancontact?, presence: true, ignore_serialize: bancontact.nil? && !bancontact_present?)]
    property bancontact : PaymentMethodOptionsBancontact?

    @[JSON::Field(ignore: true)]
    property? bancontact_present : Bool = false

    @[JSON::Field(key: "card", type: OrdersV2ResourceCardPaymentMethodOptions?, presence: true, ignore_serialize: card.nil? && !card_present?)]
    property card : OrdersV2ResourceCardPaymentMethodOptions?

    @[JSON::Field(ignore: true)]
    property? card_present : Bool = false

    @[JSON::Field(key: "customer_balance", type: PaymentMethodOptionsCustomerBalance?, presence: true, ignore_serialize: customer_balance.nil? && !customer_balance_present?)]
    property customer_balance : PaymentMethodOptionsCustomerBalance?

    @[JSON::Field(ignore: true)]
    property? customer_balance_present : Bool = false

    @[JSON::Field(key: "ideal", type: PaymentMethodOptionsIdeal?, presence: true, ignore_serialize: ideal.nil? && !ideal_present?)]
    property ideal : PaymentMethodOptionsIdeal?

    @[JSON::Field(ignore: true)]
    property? ideal_present : Bool = false

    @[JSON::Field(key: "klarna", type: PaymentMethodOptionsKlarna?, presence: true, ignore_serialize: klarna.nil? && !klarna_present?)]
    property klarna : PaymentMethodOptionsKlarna?

    @[JSON::Field(ignore: true)]
    property? klarna_present : Bool = false

    @[JSON::Field(key: "link", type: PaymentIntentPaymentMethodOptionsLink?, presence: true, ignore_serialize: link.nil? && !link_present?)]
    property link : PaymentIntentPaymentMethodOptionsLink?

    @[JSON::Field(ignore: true)]
    property? link_present : Bool = false

    @[JSON::Field(key: "oxxo", type: PaymentMethodOptionsOxxo?, presence: true, ignore_serialize: oxxo.nil? && !oxxo_present?)]
    property oxxo : PaymentMethodOptionsOxxo?

    @[JSON::Field(ignore: true)]
    property? oxxo_present : Bool = false

    @[JSON::Field(key: "p24", type: PaymentMethodOptionsP24?, presence: true, ignore_serialize: p24.nil? && !p24_present?)]
    property p24 : PaymentMethodOptionsP24?

    @[JSON::Field(ignore: true)]
    property? p24_present : Bool = false

    @[JSON::Field(key: "paypal", type: PaymentMethodOptionsPaypal?, presence: true, ignore_serialize: paypal.nil? && !paypal_present?)]
    property paypal : PaymentMethodOptionsPaypal?

    @[JSON::Field(ignore: true)]
    property? paypal_present : Bool = false

    @[JSON::Field(key: "sepa_debit", type: PaymentIntentPaymentMethodOptionsSepaDebit?, presence: true, ignore_serialize: sepa_debit.nil? && !sepa_debit_present?)]
    property sepa_debit : PaymentIntentPaymentMethodOptionsSepaDebit?

    @[JSON::Field(ignore: true)]
    property? sepa_debit_present : Bool = false

    @[JSON::Field(key: "sofort", type: PaymentMethodOptionsSofort?, presence: true, ignore_serialize: sofort.nil? && !sofort_present?)]
    property sofort : PaymentMethodOptionsSofort?

    @[JSON::Field(ignore: true)]
    property? sofort_present : Bool = false

    @[JSON::Field(key: "wechat_pay", type: PaymentMethodOptionsWechatPay?, presence: true, ignore_serialize: wechat_pay.nil? && !wechat_pay_present?)]
    property wechat_pay : PaymentMethodOptionsWechatPay?

    @[JSON::Field(ignore: true)]
    property? wechat_pay_present : Bool = false

    # Initializes the object
    # @param [Hash] attributes Model attributes in the form of hash
    def initialize(
      *, 
      # Optional properties
      @acss_debit : PaymentIntentPaymentMethodOptionsAcssDebit? = nil, 
      @afterpay_clearpay : OrdersPaymentMethodOptionsAfterpayClearpay? = nil, 
      @alipay : PaymentMethodOptionsAlipay? = nil, 
      @bancontact : PaymentMethodOptionsBancontact? = nil, 
      @card : OrdersV2ResourceCardPaymentMethodOptions? = nil, 
      @customer_balance : PaymentMethodOptionsCustomerBalance? = nil, 
      @ideal : PaymentMethodOptionsIdeal? = nil, 
      @klarna : PaymentMethodOptionsKlarna? = nil, 
      @link : PaymentIntentPaymentMethodOptionsLink? = nil, 
      @oxxo : PaymentMethodOptionsOxxo? = nil, 
      @p24 : PaymentMethodOptionsP24? = nil, 
      @paypal : PaymentMethodOptionsPaypal? = nil, 
      @sepa_debit : PaymentIntentPaymentMethodOptionsSepaDebit? = nil, 
      @sofort : PaymentMethodOptionsSofort? = nil, 
      @wechat_pay : PaymentMethodOptionsWechatPay? = nil
    )
    end

    # Show invalid properties with the reasons. Usually used together with valid?
    # @return Array for valid properties with the reasons
    def list_invalid_properties
      invalid_properties = Array(String).new

      invalid_properties
    end

    # Check to see if the all the properties in the model are valid
    # @return true if the model is valid
    def valid?

      true
    end

    # @see the `==` method
    # @param [Object] Object to be compared
    def eql?(o)
      self == o
    end

    # Generates #hash and #== methods from all fields
    # #== @return [Bool]
    # #hash calculates hash code according to all attributes.
    # #hash @return [UInt64] Hash code
    def_equals_and_hash(@acss_debit, @afterpay_clearpay, @alipay, @bancontact, @card, @customer_balance, @ideal, @klarna, @link, @oxxo, @p24, @paypal, @sepa_debit, @sofort, @wechat_pay)
  end
end
