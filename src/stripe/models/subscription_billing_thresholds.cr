#  Stripe API
#
# The Stripe REST API. Please see https://stripe.com/docs/api for more details.
#
# The version of the OpenAPI document: 2022-08-01
# Contact: dev-platform@stripe.com
# Generated by: https://openapi-generator.tech
#

require "json"
require "time"
require "log"

module Stripe
  #
  class SubscriptionBillingThresholds
    include JSON::Serializable
    include JSON::Serializable::Unmapped
    include OpenApi::Json

    # Optional properties

    # Monetary threshold that triggers the subscription to create an invoice
    @[JSON::Field(key: "amount_gte", type: Int64?, default: nil, required: false, nullable: true, emit_null: true, presence: true, ignore_serialize: amount_gte.nil? && !amount_gte_present?)]
    getter amount_gte : Int64? = nil

    @[JSON::Field(ignore: true)]
    property? amount_gte_present : Bool = false

    # Indicates if the `billing_cycle_anchor` should be reset when a threshold is reached. If true, `billing_cycle_anchor` will be updated to the date/time the threshold was last reached; otherwise, the value will remain unchanged. This value may not be `true` if the subscription contains items with plans that have `aggregate_usage=last_ever`.
    @[JSON::Field(key: "reset_billing_cycle_anchor", type: Bool?, default: nil, required: false, nullable: true, emit_null: true, presence: true, ignore_serialize: reset_billing_cycle_anchor.nil? && !reset_billing_cycle_anchor_present?)]
    getter reset_billing_cycle_anchor : Bool? = nil

    @[JSON::Field(ignore: true)]
    property? reset_billing_cycle_anchor_present : Bool = false

    # Initializes the object
    # @param [Hash] attributes Model attributes in the form of hash
    def initialize(
      *,
      # Optional properties
      @amount_gte : Int64? = nil,
      @reset_billing_cycle_anchor : Bool? = nil
    )
    end

    # Show invalid properties with the reasons. Usually used together with valid?
    # @return Array for valid properties with the reasons
    def list_invalid_properties
      invalid_properties = Array(String).new

      invalid_properties
    end

    # Check to see if the all the properties in the model are valid
    # @return true if the model is valid
    def valid?
      true
    end

    # Custom attribute writer method checking allowed values (enum).
    # @param [Object] amount_gte Object to be assigned
    def amount_gte=(amount_gte : Int64?)
      if amount_gte.nil?
        return @amount_gte = nil
      end
      @amount_gte = amount_gte
    end

    # Custom attribute writer method checking allowed values (enum).
    # @param [Object] reset_billing_cycle_anchor Object to be assigned
    def reset_billing_cycle_anchor=(reset_billing_cycle_anchor : Bool?)
      if reset_billing_cycle_anchor.nil?
        return @reset_billing_cycle_anchor = nil
      end
      @reset_billing_cycle_anchor = reset_billing_cycle_anchor
    end

    # @see the `==` method
    # @param [Object] Object to be compared
    def eql?(o)
      self == o
    end

    # Generates #hash and #== methods from all fields
    # #== @return [Bool]
    # #hash calculates hash code according to all attributes.
    # #hash @return [UInt64] Hash code
    def_equals_and_hash(@amount_gte, @amount_gte_present, @reset_billing_cycle_anchor, @reset_billing_cycle_anchor_present)
  end
end
