#  Stripe API
#
# The Stripe REST API. Please see https://stripe.com/docs/api for more details.
#
# The version of the OpenAPI document: 2020-08-27
# Contact: dev-platform@stripe.com
# Generated by: https://openapi-generator.tech
#

require "json"
require "time"
require "log"

module Stripe
  @[JSON::Serializable::Options(emit_nulls: true)]
  class PostSourcesSourceRequest
    include JSON::Serializable
    include JSON::Serializable::Unmapped


    # Optional properties

    # Amount associated with the source.
    @[JSON::Field(key: "amount", type: Int64?, presence: true, ignore_serialize: amount.nil? && !amount_present?)]
    property amount : Int64?

    @[JSON::Field(ignore: true)]
    property? amount_present : Bool = false

    # Specifies which fields in the response should be expanded.
    @[JSON::Field(key: "expand", type: Array(String)?, presence: true, ignore_serialize: expand.nil? && !expand_present?)]
    property expand : Array(String)?

    @[JSON::Field(ignore: true)]
    property? expand_present : Bool = false

    @[JSON::Field(key: "mandate", type: MandateParams?, presence: true, ignore_serialize: mandate.nil? && !mandate_present?)]
    property mandate : MandateParams?

    @[JSON::Field(ignore: true)]
    property? mandate_present : Bool = false

    @[JSON::Field(key: "metadata", type: PostAccountRequestMetadata?, presence: true, ignore_serialize: metadata.nil? && !metadata_present?)]
    property metadata : PostAccountRequestMetadata?

    @[JSON::Field(ignore: true)]
    property? metadata_present : Bool = false

    @[JSON::Field(key: "owner", type: Owner1?, presence: true, ignore_serialize: owner.nil? && !owner_present?)]
    property owner : Owner1?

    @[JSON::Field(ignore: true)]
    property? owner_present : Bool = false

    @[JSON::Field(key: "source_order", type: OrderParams?, presence: true, ignore_serialize: source_order.nil? && !source_order_present?)]
    property source_order : OrderParams?

    @[JSON::Field(ignore: true)]
    property? source_order_present : Bool = false

    # Initializes the object
    # @param [Hash] attributes Model attributes in the form of hash
    def initialize(
      *, 
      # Optional properties
      @amount : Int64? = nil, 
      @expand : Array(String)? = nil, 
      @mandate : MandateParams? = nil, 
      @metadata : PostAccountRequestMetadata? = nil, 
      @owner : Owner1? = nil, 
      @source_order : OrderParams? = nil
    )
    end

    # Show invalid properties with the reasons. Usually used together with valid?
    # @return Array for valid properties with the reasons
    def list_invalid_properties
      invalid_properties = Array(String).new

      invalid_properties
    end

    # Check to see if the all the properties in the model are valid
    # @return true if the model is valid
    def valid?

      true
    end

    # @see the `==` method
    # @param [Object] Object to be compared
    def eql?(o)
      self == o
    end

    # Generates #hash and #== methods from all fields
    # #== @return [Bool]
    # #hash calculates hash code according to all attributes.
    # #hash @return [UInt64] Hash code
    def_equals_and_hash(@amount, @expand, @mandate, @metadata, @owner, @source_order)
  end
end
