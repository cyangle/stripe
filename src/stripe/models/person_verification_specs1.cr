#  Stripe API
#
# The Stripe REST API. Please see https://stripe.com/docs/api for more details.
#
# The version of the OpenAPI document: 2022-08-01
# Contact: dev-platform@stripe.com
# Generated by: https://openapi-generator.tech
#

require "json"
require "time"
require "log"

module Stripe
  # The person's verification status.
  class PersonVerificationSpecs1
    include JSON::Serializable
    include JSON::Serializable::Unmapped
    include OpenApi::Json

    # Optional properties

    @[JSON::Field(key: "additional_document", type: Stripe::PersonVerificationDocumentSpecs?, default: nil, required: false, nullable: false, emit_null: false)]
    getter additional_document : Stripe::PersonVerificationDocumentSpecs? = nil

    @[JSON::Field(key: "document", type: Stripe::PersonVerificationDocumentSpecs?, default: nil, required: false, nullable: false, emit_null: false)]
    getter document : Stripe::PersonVerificationDocumentSpecs? = nil

    # Initializes the object
    # @param [Hash] attributes Model attributes in the form of hash
    def initialize(
      *,
      # Optional properties
      @additional_document : Stripe::PersonVerificationDocumentSpecs? = nil,
      @document : Stripe::PersonVerificationDocumentSpecs? = nil
    )
    end

    # Show invalid properties with the reasons. Usually used together with valid?
    # @return Array for valid properties with the reasons
    def list_invalid_properties
      invalid_properties = Array(String).new
      # This is a model additional_document : Stripe::PersonVerificationDocumentSpecs?
      # This is a model document : Stripe::PersonVerificationDocumentSpecs?

      invalid_properties
    end

    # Check to see if the all the properties in the model are valid
    # @return true if the model is valid
    def valid?
      true
    end

    # Custom attribute writer method checking allowed values (enum).
    # @param [Object] additional_document Object to be assigned
    def additional_document=(additional_document : Stripe::PersonVerificationDocumentSpecs?)
      if additional_document.nil?
        return @additional_document = nil
      end
      @additional_document = additional_document
    end

    # Custom attribute writer method checking allowed values (enum).
    # @param [Object] document Object to be assigned
    def document=(document : Stripe::PersonVerificationDocumentSpecs?)
      if document.nil?
        return @document = nil
      end
      @document = document
    end

    # @see the `==` method
    # @param [Object] Object to be compared
    def eql?(o)
      self == o
    end

    # Generates #hash and #== methods from all fields
    # #== @return [Bool]
    # #hash calculates hash code according to all attributes.
    # #hash @return [UInt64] Hash code
    def_equals_and_hash(@additional_document, @document)
  end
end
