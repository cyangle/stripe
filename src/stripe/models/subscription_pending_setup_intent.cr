#  Stripe API
#
# The Stripe REST API. Please see https://stripe.com/docs/api for more details.
#
# The version of the OpenAPI document: 2024-06-20
# Contact: dev-platform@stripe.com
# Generated by: https://openapi-generator.tech
#

require "../../core"

require "./api_errors"
require "./payment_flows_automatic_payment_methods_setup_intent"
require "./payment_method_config_biz_payment_method_configuration_details"
require "./setup_intent"
require "./setup_intent_application"
require "./setup_intent_customer"
require "./setup_intent_latest_attempt"
require "./setup_intent_mandate"
require "./setup_intent_next_action"
require "./setup_intent_on_behalf_of"
require "./setup_intent_payment_method"
require "./setup_intent_payment_method_options"
require "./setup_intent_single_use_mandate"

module Stripe
  # You can use this [SetupIntent](https://stripe.com/docs/api/setup_intents) to collect user authentication when creating a subscription without immediate payment or updating a subscription's payment method, allowing you to optimize for off-session payments. Learn more in the [SCA Migration Guide](https://stripe.com/docs/billing/migration/strong-customer-authentication#scenario-2).
  class SubscriptionPendingSetupIntent
    include JSON::Serializable
    include JSON::Serializable::Unmapped
    include OpenApi::Validatable
    include OpenApi::Json

    # Required Properties

    @[JSON::Field(key: "application", type: Stripe::SetupIntentApplication?, default: nil, required: true, nullable: true, emit_null: true)]
    property application : Stripe::SetupIntentApplication? = nil

    @[JSON::Field(key: "automatic_payment_methods", type: Stripe::PaymentFlowsAutomaticPaymentMethodsSetupIntent?, default: nil, required: true, nullable: false, emit_null: false)]
    property automatic_payment_methods : Stripe::PaymentFlowsAutomaticPaymentMethodsSetupIntent? = nil

    # Reason for cancellation of this SetupIntent, one of `abandoned`, `requested_by_customer`, or `duplicate`.
    @[JSON::Field(key: "cancellation_reason", type: String?, default: nil, required: true, nullable: true, emit_null: true)]
    property cancellation_reason : String? = nil
    ERROR_MESSAGE_FOR_CANCELLATION_REASON = "invalid value for \"cancellation_reason\", must be one of [abandoned, duplicate, requested_by_customer]."
    VALID_VALUES_FOR_CANCELLATION_REASON  = String.static_array("abandoned", "duplicate", "requested_by_customer")

    # The client secret of this SetupIntent. Used for client-side retrieval using a publishable key.  The client secret can be used to complete payment setup from your frontend. It should not be stored, logged, or exposed to anyone other than the customer. Make sure that you have TLS enabled on any page that includes the client secret.
    @[JSON::Field(key: "client_secret", type: String?, default: nil, required: true, nullable: true, emit_null: true)]
    property client_secret : String? = nil
    MAX_LENGTH_FOR_CLIENT_SECRET = 5000

    # Time at which the object was created. Measured in seconds since the Unix epoch.
    @[JSON::Field(key: "created", type: Int64?, default: nil, required: true, nullable: false, emit_null: false)]
    property created : Int64? = nil

    @[JSON::Field(key: "customer", type: Stripe::SetupIntentCustomer?, default: nil, required: true, nullable: true, emit_null: true)]
    property customer : Stripe::SetupIntentCustomer? = nil

    # An arbitrary string attached to the object. Often useful for displaying to users.
    @[JSON::Field(key: "description", type: String?, default: nil, required: true, nullable: true, emit_null: true)]
    property description : String? = nil
    MAX_LENGTH_FOR_DESCRIPTION = 5000

    # Indicates the directions of money movement for which this payment method is intended to be used.  Include `inbound` if you intend to use the payment method as the origin to pull funds from. Include `outbound` if you intend to use the payment method as the destination to send funds to. You can include both if you intend to use the payment method for both purposes.
    @[JSON::Field(key: "flow_directions", type: Array(String)?, default: nil, required: true, nullable: true, emit_null: true)]
    property flow_directions : Array(String)? = nil
    ERROR_MESSAGE_FOR_FLOW_DIRECTIONS = "invalid value for \"flow_directions\", must be one of [inbound, outbound]."
    VALID_VALUES_FOR_FLOW_DIRECTIONS  = String.static_array("inbound", "outbound")

    # Unique identifier for the object.
    @[JSON::Field(key: "id", type: String?, default: nil, required: true, nullable: false, emit_null: false)]
    property id : String? = nil
    MAX_LENGTH_FOR_ID = 5000

    @[JSON::Field(key: "last_setup_error", type: Stripe::ApiErrors?, default: nil, required: true, nullable: false, emit_null: false)]
    property last_setup_error : Stripe::ApiErrors? = nil

    @[JSON::Field(key: "latest_attempt", type: Stripe::SetupIntentLatestAttempt?, default: nil, required: true, nullable: true, emit_null: true)]
    property latest_attempt : Stripe::SetupIntentLatestAttempt? = nil

    # Has the value `true` if the object exists in live mode or the value `false` if the object exists in test mode.
    @[JSON::Field(key: "livemode", type: Bool?, default: nil, required: true, nullable: false, emit_null: false)]
    property livemode : Bool? = nil

    @[JSON::Field(key: "mandate", type: Stripe::SetupIntentMandate?, default: nil, required: true, nullable: true, emit_null: true)]
    property mandate : Stripe::SetupIntentMandate? = nil

    @[JSON::Field(key: "metadata", type: Hash(String, String)?, default: nil, required: true, nullable: true, emit_null: true)]
    property metadata : Hash(String, String)? = nil

    @[JSON::Field(key: "next_action", type: Stripe::SetupIntentNextAction?, default: nil, required: true, nullable: false, emit_null: false)]
    property next_action : Stripe::SetupIntentNextAction? = nil

    # String representing the object's type. Objects of the same type share the same value.
    @[JSON::Field(key: "object", type: String?, default: nil, required: true, nullable: false, emit_null: false)]
    property object : String? = nil
    ERROR_MESSAGE_FOR_OBJECT = "invalid value for \"object\", must be one of [setup_intent]."
    VALID_VALUES_FOR_OBJECT  = String.static_array("setup_intent")

    @[JSON::Field(key: "on_behalf_of", type: Stripe::SetupIntentOnBehalfOf?, default: nil, required: true, nullable: true, emit_null: true)]
    property on_behalf_of : Stripe::SetupIntentOnBehalfOf? = nil

    @[JSON::Field(key: "payment_method", type: Stripe::SetupIntentPaymentMethod?, default: nil, required: true, nullable: true, emit_null: true)]
    property payment_method : Stripe::SetupIntentPaymentMethod? = nil

    @[JSON::Field(key: "payment_method_configuration_details", type: Stripe::PaymentMethodConfigBizPaymentMethodConfigurationDetails?, default: nil, required: true, nullable: false, emit_null: false)]
    property payment_method_configuration_details : Stripe::PaymentMethodConfigBizPaymentMethodConfigurationDetails? = nil

    @[JSON::Field(key: "payment_method_options", type: Stripe::SetupIntentPaymentMethodOptions?, default: nil, required: true, nullable: false, emit_null: false)]
    property payment_method_options : Stripe::SetupIntentPaymentMethodOptions? = nil

    # The list of payment method types (e.g. card) that this SetupIntent is allowed to set up.
    @[JSON::Field(key: "payment_method_types", type: Array(String)?, default: nil, required: true, nullable: false, emit_null: false)]
    property payment_method_types : Array(String)? = nil

    @[JSON::Field(key: "single_use_mandate", type: Stripe::SetupIntentSingleUseMandate?, default: nil, required: true, nullable: true, emit_null: true)]
    property single_use_mandate : Stripe::SetupIntentSingleUseMandate? = nil

    # [Status](https://stripe.com/docs/payments/intents#intent-statuses) of this SetupIntent, one of `requires_payment_method`, `requires_confirmation`, `requires_action`, `processing`, `canceled`, or `succeeded`.
    @[JSON::Field(key: "status", type: String?, default: nil, required: true, nullable: false, emit_null: false)]
    property status : String? = nil
    ERROR_MESSAGE_FOR_STATUS = "invalid value for \"status\", must be one of [canceled, processing, requires_action, requires_confirmation, requires_payment_method, succeeded]."
    VALID_VALUES_FOR_STATUS  = String.static_array("canceled", "processing", "requires_action", "requires_confirmation", "requires_payment_method", "succeeded")

    # Indicates how the payment method is intended to be used in the future.  Use `on_session` if you intend to only reuse the payment method when the customer is in your checkout flow. Use `off_session` if your customer may or may not be in your checkout flow. If not provided, this value defaults to `off_session`.
    @[JSON::Field(key: "usage", type: String?, default: nil, required: true, nullable: false, emit_null: false)]
    property usage : String? = nil
    MAX_LENGTH_FOR_USAGE = 5000

    # End of Required Properties

    # Optional Properties

    # If present, the SetupIntent's payment method will be attached to the in-context Stripe Account.  It can only be used for this Stripe Accountâ€™s own money movement flows like InboundTransfer and OutboundTransfers. It cannot be set to true when setting up a PaymentMethod for a Customer, and defaults to false when attaching a PaymentMethod to a Customer.
    @[JSON::Field(key: "attach_to_self", type: Bool?, default: nil, required: false, nullable: false, emit_null: false)]
    property attach_to_self : Bool? = nil

    # List of class defined in anyOf (OpenAPI v3)
    def self.openapi_any_of
      [
        Stripe::SetupIntent,
        String,
      ]
    end

    # Initializes the object
    # @param [Hash] attributes Model attributes in the form of hash
    def initialize(
      *,
      # Required properties
      @application : Stripe::SetupIntentApplication? = nil,
      @automatic_payment_methods : Stripe::PaymentFlowsAutomaticPaymentMethodsSetupIntent? = nil,
      @cancellation_reason : String? = nil,
      @client_secret : String? = nil,
      @created : Int64? = nil,
      @customer : Stripe::SetupIntentCustomer? = nil,
      @description : String? = nil,
      @flow_directions : Array(String)? = nil,
      @id : String? = nil,
      @last_setup_error : Stripe::ApiErrors? = nil,
      @latest_attempt : Stripe::SetupIntentLatestAttempt? = nil,
      @livemode : Bool? = nil,
      @mandate : Stripe::SetupIntentMandate? = nil,
      @metadata : Hash(String, String)? = nil,
      @next_action : Stripe::SetupIntentNextAction? = nil,
      @object : String? = nil,
      @on_behalf_of : Stripe::SetupIntentOnBehalfOf? = nil,
      @payment_method : Stripe::SetupIntentPaymentMethod? = nil,
      @payment_method_configuration_details : Stripe::PaymentMethodConfigBizPaymentMethodConfigurationDetails? = nil,
      @payment_method_options : Stripe::SetupIntentPaymentMethodOptions? = nil,
      @payment_method_types : Array(String)? = nil,
      @single_use_mandate : Stripe::SetupIntentSingleUseMandate? = nil,
      @status : String? = nil,
      @usage : String? = nil,
      # Optional properties
      @attach_to_self : Bool? = nil
    )
    end

    # Show invalid properties with the reasons. Usually used together with valid?
    # @return Array for valid properties with the reasons
    def list_invalid_properties : Array(String)
      invalid_properties = Array(String).new
      invalid_properties
    end

    # Check to see if the all the properties in the model are valid
    # @return true if the model is valid
    def valid? : Bool
      _any_of_found = false
      json_string : String = self.to_json
      _any_of_found = self.class.openapi_any_of.any? do |_class|
        _any_of = begin
          _class.from_json(json_string)
        rescue
          nil
        end

        !_any_of.nil? && _any_of.not_nil!.valid?
      end
      return false if !_any_of_found

      true
    end

    # Generates #hash and #== methods from all fields
    # #== @return [Bool]
    # #hash calculates hash code according to all attributes.
    # #hash @return [UInt64] Hash code
    def_equals_and_hash(@application, @automatic_payment_methods, @cancellation_reason, @client_secret, @created, @customer, @description, @flow_directions, @id, @last_setup_error, @latest_attempt, @livemode, @mandate, @metadata, @next_action, @object, @on_behalf_of, @payment_method, @payment_method_configuration_details, @payment_method_options, @payment_method_types, @single_use_mandate, @status, @usage, @attach_to_self)
  end
end
