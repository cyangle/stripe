#  Stripe API
#
# The Stripe REST API. Please see https://stripe.com/docs/api for more details.
#
# The version of the OpenAPI document: 2022-11-15
# Contact: dev-platform@stripe.com
# Generated by: https://openapi-generator.tech
#

require "json"
require "time"
require "log"

module Stripe
  #
  class SetupIntentPaymentMethodOptions
    include JSON::Serializable
    include JSON::Serializable::Unmapped
    include OpenApi::Validatable
    include OpenApi::Json

    # Optional Properties

    @[JSON::Field(key: "acss_debit", type: Stripe::SetupIntentPaymentMethodOptionsAcssDebit1?, default: nil, required: false, nullable: false, emit_null: false)]
    getter acss_debit : Stripe::SetupIntentPaymentMethodOptionsAcssDebit1? = nil

    @[JSON::Field(key: "blik", type: Stripe::SetupIntentPaymentMethodOptionsBlik1?, default: nil, required: false, nullable: false, emit_null: false)]
    getter blik : Stripe::SetupIntentPaymentMethodOptionsBlik1? = nil

    @[JSON::Field(key: "card", type: Stripe::SetupIntentPaymentMethodOptionsCard?, default: nil, required: false, nullable: false, emit_null: false)]
    getter card : Stripe::SetupIntentPaymentMethodOptionsCard? = nil

    @[JSON::Field(key: "link", type: Stripe::SetupIntentPaymentMethodOptionsLink1?, default: nil, required: false, nullable: false, emit_null: false)]
    getter link : Stripe::SetupIntentPaymentMethodOptionsLink1? = nil

    @[JSON::Field(key: "sepa_debit", type: Stripe::SetupIntentPaymentMethodOptionsSepaDebit1?, default: nil, required: false, nullable: false, emit_null: false)]
    getter sepa_debit : Stripe::SetupIntentPaymentMethodOptionsSepaDebit1? = nil

    @[JSON::Field(key: "us_bank_account", type: Stripe::SetupIntentPaymentMethodOptionsUsBankAccount1?, default: nil, required: false, nullable: false, emit_null: false)]
    getter us_bank_account : Stripe::SetupIntentPaymentMethodOptionsUsBankAccount1? = nil

    # Initializes the object
    # @param [Hash] attributes Model attributes in the form of hash
    def initialize(
      *,
      # Optional properties
      @acss_debit : Stripe::SetupIntentPaymentMethodOptionsAcssDebit1? = nil,
      @blik : Stripe::SetupIntentPaymentMethodOptionsBlik1? = nil,
      @card : Stripe::SetupIntentPaymentMethodOptionsCard? = nil,
      @link : Stripe::SetupIntentPaymentMethodOptionsLink1? = nil,
      @sepa_debit : Stripe::SetupIntentPaymentMethodOptionsSepaDebit1? = nil,
      @us_bank_account : Stripe::SetupIntentPaymentMethodOptionsUsBankAccount1? = nil
    )
    end

    # Show invalid properties with the reasons. Usually used together with valid?
    # @return Array for valid properties with the reasons
    def list_invalid_properties : Array(String)
      invalid_properties = Array(String).new

      unless (_acss_debit = @acss_debit).nil?
        invalid_properties.concat(_acss_debit.list_invalid_properties_for("acss_debit")) if _acss_debit.is_a?(OpenApi::Validatable)
      end
      unless (_blik = @blik).nil?
        invalid_properties.concat(_blik.list_invalid_properties_for("blik")) if _blik.is_a?(OpenApi::Validatable)
      end
      unless (_card = @card).nil?
        invalid_properties.concat(_card.list_invalid_properties_for("card")) if _card.is_a?(OpenApi::Validatable)
      end
      unless (_link = @link).nil?
        invalid_properties.concat(_link.list_invalid_properties_for("link")) if _link.is_a?(OpenApi::Validatable)
      end
      unless (_sepa_debit = @sepa_debit).nil?
        invalid_properties.concat(_sepa_debit.list_invalid_properties_for("sepa_debit")) if _sepa_debit.is_a?(OpenApi::Validatable)
      end
      unless (_us_bank_account = @us_bank_account).nil?
        invalid_properties.concat(_us_bank_account.list_invalid_properties_for("us_bank_account")) if _us_bank_account.is_a?(OpenApi::Validatable)
      end
      invalid_properties
    end

    # Check to see if the all the properties in the model are valid
    # @return true if the model is valid
    def valid? : Bool
      unless (_acss_debit = @acss_debit).nil?
        return false if _acss_debit.is_a?(OpenApi::Validatable) && !_acss_debit.valid?
      end

      unless (_blik = @blik).nil?
        return false if _blik.is_a?(OpenApi::Validatable) && !_blik.valid?
      end

      unless (_card = @card).nil?
        return false if _card.is_a?(OpenApi::Validatable) && !_card.valid?
      end

      unless (_link = @link).nil?
        return false if _link.is_a?(OpenApi::Validatable) && !_link.valid?
      end

      unless (_sepa_debit = @sepa_debit).nil?
        return false if _sepa_debit.is_a?(OpenApi::Validatable) && !_sepa_debit.valid?
      end

      unless (_us_bank_account = @us_bank_account).nil?
        return false if _us_bank_account.is_a?(OpenApi::Validatable) && !_us_bank_account.valid?
      end

      true
    end

    # Custom attribute writer method checking allowed values (enum).
    # @param [Object] acss_debit Object to be assigned
    def acss_debit=(new_value : Stripe::SetupIntentPaymentMethodOptionsAcssDebit1?)
      unless new_value.nil?
        new_value.validate if new_value.is_a?(OpenApi::Validatable)
      end

      @acss_debit = new_value
    end

    # Custom attribute writer method checking allowed values (enum).
    # @param [Object] blik Object to be assigned
    def blik=(new_value : Stripe::SetupIntentPaymentMethodOptionsBlik1?)
      unless new_value.nil?
        new_value.validate if new_value.is_a?(OpenApi::Validatable)
      end

      @blik = new_value
    end

    # Custom attribute writer method checking allowed values (enum).
    # @param [Object] card Object to be assigned
    def card=(new_value : Stripe::SetupIntentPaymentMethodOptionsCard?)
      unless new_value.nil?
        new_value.validate if new_value.is_a?(OpenApi::Validatable)
      end

      @card = new_value
    end

    # Custom attribute writer method checking allowed values (enum).
    # @param [Object] link Object to be assigned
    def link=(new_value : Stripe::SetupIntentPaymentMethodOptionsLink1?)
      unless new_value.nil?
        new_value.validate if new_value.is_a?(OpenApi::Validatable)
      end

      @link = new_value
    end

    # Custom attribute writer method checking allowed values (enum).
    # @param [Object] sepa_debit Object to be assigned
    def sepa_debit=(new_value : Stripe::SetupIntentPaymentMethodOptionsSepaDebit1?)
      unless new_value.nil?
        new_value.validate if new_value.is_a?(OpenApi::Validatable)
      end

      @sepa_debit = new_value
    end

    # Custom attribute writer method checking allowed values (enum).
    # @param [Object] us_bank_account Object to be assigned
    def us_bank_account=(new_value : Stripe::SetupIntentPaymentMethodOptionsUsBankAccount1?)
      unless new_value.nil?
        new_value.validate if new_value.is_a?(OpenApi::Validatable)
      end

      @us_bank_account = new_value
    end

    # Generates #hash and #== methods from all fields
    # #== @return [Bool]
    # #hash calculates hash code according to all attributes.
    # #hash @return [UInt64] Hash code
    def_equals_and_hash(@acss_debit, @blik, @card, @link, @sepa_debit, @us_bank_account)
  end
end
