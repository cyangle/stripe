#  Stripe API
#
# The Stripe REST API. Please see https://stripe.com/docs/api for more details.
#
# The version of the OpenAPI document: 2022-08-01
# Contact: dev-platform@stripe.com
# Generated by: https://openapi-generator.tech
#

require "json"
require "time"
require "log"

module Stripe
  #
  class PaymentMethodCardChecks
    include JSON::Serializable
    include JSON::Serializable::Unmapped
    include OpenApi::Validatable
    include OpenApi::Json

    # Optional properties

    # If a address line1 was provided, results of the check, one of `pass`, `fail`, `unavailable`, or `unchecked`.
    @[JSON::Field(key: "address_line1_check", type: String?, default: nil, required: false, nullable: true, emit_null: true, presence: true, ignore_serialize: address_line1_check.nil? && !address_line1_check_present?)]
    getter address_line1_check : String? = nil

    @[JSON::Field(ignore: true)]
    property? address_line1_check_present : Bool = false

    # If a address postal code was provided, results of the check, one of `pass`, `fail`, `unavailable`, or `unchecked`.
    @[JSON::Field(key: "address_postal_code_check", type: String?, default: nil, required: false, nullable: true, emit_null: true, presence: true, ignore_serialize: address_postal_code_check.nil? && !address_postal_code_check_present?)]
    getter address_postal_code_check : String? = nil

    @[JSON::Field(ignore: true)]
    property? address_postal_code_check_present : Bool = false

    # If a CVC was provided, results of the check, one of `pass`, `fail`, `unavailable`, or `unchecked`.
    @[JSON::Field(key: "cvc_check", type: String?, default: nil, required: false, nullable: true, emit_null: true, presence: true, ignore_serialize: cvc_check.nil? && !cvc_check_present?)]
    getter cvc_check : String? = nil

    @[JSON::Field(ignore: true)]
    property? cvc_check_present : Bool = false

    # Initializes the object
    # @param [Hash] attributes Model attributes in the form of hash
    def initialize(
      *,
      # Optional properties
      @address_line1_check : String? = nil,
      @address_postal_code_check : String? = nil,
      @cvc_check : String? = nil
    )
    end

    # Show invalid properties with the reasons. Usually used together with valid?
    # @return Array for valid properties with the reasons
    def list_invalid_properties : Array(String)
      invalid_properties = Array(String).new

      if _address_line1_check = @address_line1_check
        if max_length_error = OpenApi::PrimitiveValidator.max_length_error("address_line1_check", _address_line1_check.to_s.size, 5000)
          invalid_properties.push(max_length_error)
        end
      end
      if _address_postal_code_check = @address_postal_code_check
        if max_length_error = OpenApi::PrimitiveValidator.max_length_error("address_postal_code_check", _address_postal_code_check.to_s.size, 5000)
          invalid_properties.push(max_length_error)
        end
      end
      if _cvc_check = @cvc_check
        if max_length_error = OpenApi::PrimitiveValidator.max_length_error("cvc_check", _cvc_check.to_s.size, 5000)
          invalid_properties.push(max_length_error)
        end
      end
      invalid_properties
    end

    # Check to see if the all the properties in the model are valid
    # @return true if the model is valid
    def valid? : Bool
      if _address_line1_check = @address_line1_check
        return false if _address_line1_check.to_s.size > 5000
      end

      if _address_postal_code_check = @address_postal_code_check
        return false if _address_postal_code_check.to_s.size > 5000
      end

      if _cvc_check = @cvc_check
        return false if _cvc_check.to_s.size > 5000
      end

      true
    end

    # Custom attribute writer method checking allowed values (enum).
    # @param [Object] address_line1_check Object to be assigned
    def address_line1_check=(address_line1_check : String?)
      if address_line1_check.nil?
        return @address_line1_check = nil
      end
      _address_line1_check = address_line1_check.not_nil!
      if max_length_error = OpenApi::PrimitiveValidator.max_length_error("address_line1_check", _address_line1_check.to_s.size, 5000)
        raise ArgumentError.new(max_length_error)
      end

      @address_line1_check = _address_line1_check
    end

    # Custom attribute writer method checking allowed values (enum).
    # @param [Object] address_postal_code_check Object to be assigned
    def address_postal_code_check=(address_postal_code_check : String?)
      if address_postal_code_check.nil?
        return @address_postal_code_check = nil
      end
      _address_postal_code_check = address_postal_code_check.not_nil!
      if max_length_error = OpenApi::PrimitiveValidator.max_length_error("address_postal_code_check", _address_postal_code_check.to_s.size, 5000)
        raise ArgumentError.new(max_length_error)
      end

      @address_postal_code_check = _address_postal_code_check
    end

    # Custom attribute writer method checking allowed values (enum).
    # @param [Object] cvc_check Object to be assigned
    def cvc_check=(cvc_check : String?)
      if cvc_check.nil?
        return @cvc_check = nil
      end
      _cvc_check = cvc_check.not_nil!
      if max_length_error = OpenApi::PrimitiveValidator.max_length_error("cvc_check", _cvc_check.to_s.size, 5000)
        raise ArgumentError.new(max_length_error)
      end

      @cvc_check = _cvc_check
    end

    # Generates #hash and #== methods from all fields
    # #== @return [Bool]
    # #hash calculates hash code according to all attributes.
    # #hash @return [UInt64] Hash code
    def_equals_and_hash(@address_line1_check, @address_line1_check_present, @address_postal_code_check, @address_postal_code_check_present, @cvc_check, @cvc_check_present)
  end
end
