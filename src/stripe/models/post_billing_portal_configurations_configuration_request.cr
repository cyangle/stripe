#  Stripe API
#
# The Stripe REST API. Please see https://stripe.com/docs/api for more details.
#
# The version of the OpenAPI document: 2022-08-01
# Contact: dev-platform@stripe.com
# Generated by: https://openapi-generator.tech
#

require "json"
require "time"
require "log"

module Stripe
  class PostBillingPortalConfigurationsConfigurationRequest
    include JSON::Serializable
    include JSON::Serializable::Unmapped
    include OpenApi::Json

    # Optional properties

    # Whether the configuration is active and can be used to create portal sessions.
    @[JSON::Field(key: "active", type: Bool?, default: nil, required: false, nullable: false, emit_null: false)]
    getter active : Bool? = nil

    @[JSON::Field(key: "business_profile", type: Stripe::BusinessProfileUpdateParam?, default: nil, required: false, nullable: false, emit_null: false)]
    getter business_profile : Stripe::BusinessProfileUpdateParam? = nil

    @[JSON::Field(key: "default_return_url", type: Stripe::PostBillingPortalConfigurationsRequestDefaultReturnUrl?, default: nil, required: false, nullable: false, emit_null: false)]
    getter default_return_url : Stripe::PostBillingPortalConfigurationsRequestDefaultReturnUrl? = nil

    # Specifies which fields in the response should be expanded.
    @[JSON::Field(key: "expand", type: Array(String)?, default: nil, required: false, nullable: false, emit_null: false)]
    getter expand : Array(String)? = nil

    @[JSON::Field(key: "features", type: Stripe::FeaturesUpdatingParam?, default: nil, required: false, nullable: false, emit_null: false)]
    getter features : Stripe::FeaturesUpdatingParam? = nil

    @[JSON::Field(key: "login_page", type: Stripe::LoginPageUpdateParam?, default: nil, required: false, nullable: false, emit_null: false)]
    getter login_page : Stripe::LoginPageUpdateParam? = nil

    @[JSON::Field(key: "metadata", type: Stripe::PostAccountRequestMetadata?, default: nil, required: false, nullable: false, emit_null: false)]
    getter metadata : Stripe::PostAccountRequestMetadata? = nil

    # Initializes the object
    # @param [Hash] attributes Model attributes in the form of hash
    def initialize(
      *,
      # Optional properties
      @active : Bool? = nil,
      @business_profile : Stripe::BusinessProfileUpdateParam? = nil,
      @default_return_url : Stripe::PostBillingPortalConfigurationsRequestDefaultReturnUrl? = nil,
      @expand : Array(String)? = nil,
      @features : Stripe::FeaturesUpdatingParam? = nil,
      @login_page : Stripe::LoginPageUpdateParam? = nil,
      @metadata : Stripe::PostAccountRequestMetadata? = nil
    )
    end

    # Show invalid properties with the reasons. Usually used together with valid?
    # @return Array for valid properties with the reasons
    def list_invalid_properties
      invalid_properties = Array(String).new
      # This is a model business_profile : Stripe::BusinessProfileUpdateParam?
      # This is a model default_return_url : Stripe::PostBillingPortalConfigurationsRequestDefaultReturnUrl?
      # This is a model features : Stripe::FeaturesUpdatingParam?
      # This is a model login_page : Stripe::LoginPageUpdateParam?
      # This is a model metadata : Stripe::PostAccountRequestMetadata?

      invalid_properties
    end

    # Check to see if the all the properties in the model are valid
    # @return true if the model is valid
    def valid?
      true
    end

    # Custom attribute writer method checking allowed values (enum).
    # @param [Object] active Object to be assigned
    def active=(active : Bool?)
      if active.nil?
        return @active = nil
      end
      @active = active
    end

    # Custom attribute writer method checking allowed values (enum).
    # @param [Object] business_profile Object to be assigned
    def business_profile=(business_profile : Stripe::BusinessProfileUpdateParam?)
      if business_profile.nil?
        return @business_profile = nil
      end
      @business_profile = business_profile
    end

    # Custom attribute writer method checking allowed values (enum).
    # @param [Object] default_return_url Object to be assigned
    def default_return_url=(default_return_url : Stripe::PostBillingPortalConfigurationsRequestDefaultReturnUrl?)
      if default_return_url.nil?
        return @default_return_url = nil
      end
      @default_return_url = default_return_url
    end

    # Custom attribute writer method checking allowed values (enum).
    # @param [Object] expand Object to be assigned
    def expand=(expand : Array(String)?)
      if expand.nil?
        return @expand = nil
      end
      @expand = expand
    end

    # Custom attribute writer method checking allowed values (enum).
    # @param [Object] features Object to be assigned
    def features=(features : Stripe::FeaturesUpdatingParam?)
      if features.nil?
        return @features = nil
      end
      @features = features
    end

    # Custom attribute writer method checking allowed values (enum).
    # @param [Object] login_page Object to be assigned
    def login_page=(login_page : Stripe::LoginPageUpdateParam?)
      if login_page.nil?
        return @login_page = nil
      end
      @login_page = login_page
    end

    # Custom attribute writer method checking allowed values (enum).
    # @param [Object] metadata Object to be assigned
    def metadata=(metadata : Stripe::PostAccountRequestMetadata?)
      if metadata.nil?
        return @metadata = nil
      end
      @metadata = metadata
    end

    # @see the `==` method
    # @param [Object] Object to be compared
    def eql?(o)
      self == o
    end

    # Generates #hash and #== methods from all fields
    # #== @return [Bool]
    # #hash calculates hash code according to all attributes.
    # #hash @return [UInt64] Hash code
    def_equals_and_hash(@active, @business_profile, @default_return_url, @expand, @features, @login_page, @metadata)
  end
end
