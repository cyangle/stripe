#  Stripe API
#
# The Stripe REST API. Please see https://stripe.com/docs/api for more details.
#
# The version of the OpenAPI document: 2022-08-01
# Contact: dev-platform@stripe.com
# Generated by: https://openapi-generator.tech
#

require "json"
require "time"
require "log"

module Stripe
  #
  class SetupAttemptPaymentMethodDetailsCard
    include JSON::Serializable
    include JSON::Serializable::Unmapped
    include OpenApi::Validatable
    include OpenApi::Json

    # Optional properties

    @[JSON::Field(key: "three_d_secure", type: Stripe::SetupAttemptPaymentMethodDetailsCardThreeDSecure?, default: nil, required: false, nullable: true, emit_null: true, presence: true, ignore_serialize: three_d_secure.nil? && !three_d_secure_present?)]
    getter three_d_secure : Stripe::SetupAttemptPaymentMethodDetailsCardThreeDSecure? = nil

    @[JSON::Field(ignore: true)]
    property? three_d_secure_present : Bool = false

    # Initializes the object
    # @param [Hash] attributes Model attributes in the form of hash
    def initialize(
      *,
      # Optional properties
      @three_d_secure : Stripe::SetupAttemptPaymentMethodDetailsCardThreeDSecure? = nil
    )
    end

    # Show invalid properties with the reasons. Usually used together with valid?
    # @return Array for valid properties with the reasons
    def list_invalid_properties : Array(String)
      invalid_properties = Array(String).new
      if _three_d_secure = @three_d_secure
        invalid_properties.concat(_three_d_secure.list_invalid_properties_for("three_d_secure")) if _three_d_secure.is_a?(OpenApi::Validatable)
      end

      invalid_properties
    end

    # Check to see if the all the properties in the model are valid
    # @return true if the model is valid
    def valid? : Bool
      if _three_d_secure = @three_d_secure
        return false if _three_d_secure.is_a?(OpenApi::Validatable) && !_three_d_secure.valid?
      end

      true
    end

    # Custom attribute writer method checking allowed values (enum).
    # @param [Object] three_d_secure Object to be assigned
    def three_d_secure=(three_d_secure : Stripe::SetupAttemptPaymentMethodDetailsCardThreeDSecure?)
      if three_d_secure.nil?
        return @three_d_secure = nil
      end
      _three_d_secure = three_d_secure.not_nil!
      _three_d_secure.validate if _three_d_secure.is_a?(OpenApi::Validatable)
      @three_d_secure = _three_d_secure
    end

    # Generates #hash and #== methods from all fields
    # #== @return [Bool]
    # #hash calculates hash code according to all attributes.
    # #hash @return [UInt64] Hash code
    def_equals_and_hash(@three_d_secure, @three_d_secure_present)
  end
end
