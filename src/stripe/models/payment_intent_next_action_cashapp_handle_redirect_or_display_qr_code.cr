#  Stripe API
#
# The Stripe REST API. Please see https://stripe.com/docs/api for more details.
#
# The version of the OpenAPI document: 2024-06-20
# Contact: dev-platform@stripe.com
# Generated by: https://openapi-generator.tech
#

require "../../core"

require "./payment_intent_next_action_cashapp_qr_code"

module Stripe
  #
  class PaymentIntentNextActionCashappHandleRedirectOrDisplayQrCode
    include JSON::Serializable
    include JSON::Serializable::Unmapped
    include OpenApi::Validatable
    include OpenApi::Json

    # Required Properties

    # The URL to the hosted Cash App Pay instructions page, which allows customers to view the QR code, and supports QR code refreshing on expiration.
    @[JSON::Field(key: "hosted_instructions_url", type: String?, default: nil, required: true, nullable: false, emit_null: false)]
    getter hosted_instructions_url : String? = nil
    MAX_LENGTH_FOR_HOSTED_INSTRUCTIONS_URL = 5000

    # The url for mobile redirect based auth
    @[JSON::Field(key: "mobile_auth_url", type: String?, default: nil, required: true, nullable: false, emit_null: false)]
    getter mobile_auth_url : String? = nil
    MAX_LENGTH_FOR_MOBILE_AUTH_URL = 5000

    @[JSON::Field(key: "qr_code", type: Stripe::PaymentIntentNextActionCashappQrCode?, default: nil, required: true, nullable: false, emit_null: false)]
    getter qr_code : Stripe::PaymentIntentNextActionCashappQrCode? = nil

    # End of Required Properties

    # Initializes the object
    # @param [Hash] attributes Model attributes in the form of hash
    def initialize(
      *,
      # Required properties
      @hosted_instructions_url : String? = nil,
      @mobile_auth_url : String? = nil,
      @qr_code : Stripe::PaymentIntentNextActionCashappQrCode? = nil
    )
    end

    # Show invalid properties with the reasons. Usually used together with valid?
    # @return Array for valid properties with the reasons
    def list_invalid_properties : Array(String)
      invalid_properties = Array(String).new

      invalid_properties.push("\"hosted_instructions_url\" is required and cannot be null") if @hosted_instructions_url.nil?

      unless (_hosted_instructions_url = @hosted_instructions_url).nil?
        if max_length_error = OpenApi::PrimitiveValidator.max_length_error("hosted_instructions_url", _hosted_instructions_url.to_s.size, MAX_LENGTH_FOR_HOSTED_INSTRUCTIONS_URL)
          invalid_properties.push(max_length_error)
        end
      end
      invalid_properties.push("\"mobile_auth_url\" is required and cannot be null") if @mobile_auth_url.nil?

      unless (_mobile_auth_url = @mobile_auth_url).nil?
        if max_length_error = OpenApi::PrimitiveValidator.max_length_error("mobile_auth_url", _mobile_auth_url.to_s.size, MAX_LENGTH_FOR_MOBILE_AUTH_URL)
          invalid_properties.push(max_length_error)
        end
      end
      invalid_properties.push("\"qr_code\" is required and cannot be null") if @qr_code.nil?

      unless (_qr_code = @qr_code).nil?
        invalid_properties.concat(_qr_code.list_invalid_properties_for("qr_code")) if _qr_code.is_a?(OpenApi::Validatable)
      end
      invalid_properties
    end

    # Check to see if the all the properties in the model are valid
    # @return true if the model is valid
    def valid? : Bool
      return false if @hosted_instructions_url.nil?
      unless (_hosted_instructions_url = @hosted_instructions_url).nil?
        return false if _hosted_instructions_url.to_s.size > MAX_LENGTH_FOR_HOSTED_INSTRUCTIONS_URL
      end

      return false if @mobile_auth_url.nil?
      unless (_mobile_auth_url = @mobile_auth_url).nil?
        return false if _mobile_auth_url.to_s.size > MAX_LENGTH_FOR_MOBILE_AUTH_URL
      end

      return false if @qr_code.nil?
      unless (_qr_code = @qr_code).nil?
        return false if _qr_code.is_a?(OpenApi::Validatable) && !_qr_code.valid?
      end

      true
    end

    # Custom attribute writer method checking allowed values (enum).
    # @param [Object] hosted_instructions_url Object to be assigned
    def hosted_instructions_url=(new_value : String?)
      raise ArgumentError.new("\"hosted_instructions_url\" is required and cannot be null") if new_value.nil?
      unless new_value.nil?
        OpenApi::PrimitiveValidator.validate_max_length("hosted_instructions_url", new_value.to_s.size, MAX_LENGTH_FOR_HOSTED_INSTRUCTIONS_URL)
      end

      @hosted_instructions_url = new_value
    end

    # Custom attribute writer method checking allowed values (enum).
    # @param [Object] mobile_auth_url Object to be assigned
    def mobile_auth_url=(new_value : String?)
      raise ArgumentError.new("\"mobile_auth_url\" is required and cannot be null") if new_value.nil?
      unless new_value.nil?
        OpenApi::PrimitiveValidator.validate_max_length("mobile_auth_url", new_value.to_s.size, MAX_LENGTH_FOR_MOBILE_AUTH_URL)
      end

      @mobile_auth_url = new_value
    end

    # Custom attribute writer method checking allowed values (enum).
    # @param [Object] qr_code Object to be assigned
    def qr_code=(new_value : Stripe::PaymentIntentNextActionCashappQrCode?)
      raise ArgumentError.new("\"qr_code\" is required and cannot be null") if new_value.nil?
      unless new_value.nil?
        new_value.validate if new_value.is_a?(OpenApi::Validatable)
      end

      @qr_code = new_value
    end

    # Generates #hash and #== methods from all fields
    # #== @return [Bool]
    # #hash calculates hash code according to all attributes.
    # #hash @return [UInt64] Hash code
    def_equals_and_hash(@hosted_instructions_url, @mobile_auth_url, @qr_code)
  end
end
