#  Stripe API
#
# The Stripe REST API. Please see https://stripe.com/docs/api for more details.
#
# The version of the OpenAPI document: 2024-06-20
# Contact: dev-platform@stripe.com
# Generated by: https://openapi-generator.tech
#

require "../../core"

require "./billing_portal_configuration"
require "./billing_portal_configuration_application"
require "./portal_business_profile"
require "./portal_features"
require "./portal_login_page"

module Stripe
  # The configuration used by this session, describing the features available.
  class BillingPortalSessionConfiguration
    include JSON::Serializable
    include JSON::Serializable::Unmapped
    include OpenApi::Validatable
    include OpenApi::Json

    # Required Properties

    # Whether the configuration is active and can be used to create portal sessions.
    @[JSON::Field(key: "active", type: Bool?, default: nil, required: true, nullable: false, emit_null: false)]
    property active : Bool? = nil

    @[JSON::Field(key: "application", type: Stripe::BillingPortalConfigurationApplication?, default: nil, required: true, nullable: true, emit_null: true)]
    property application : Stripe::BillingPortalConfigurationApplication? = nil

    @[JSON::Field(key: "business_profile", type: Stripe::PortalBusinessProfile?, default: nil, required: true, nullable: false, emit_null: false)]
    property business_profile : Stripe::PortalBusinessProfile? = nil

    # Time at which the object was created. Measured in seconds since the Unix epoch.
    @[JSON::Field(key: "created", type: Int64?, default: nil, required: true, nullable: false, emit_null: false)]
    property created : Int64? = nil

    # The default URL to redirect customers to when they click on the portal's link to return to your website. This can be [overriden](https://stripe.com/docs/api/customer_portal/sessions/create#create_portal_session-return_url) when creating the session.
    @[JSON::Field(key: "default_return_url", type: String?, default: nil, required: true, nullable: true, emit_null: true)]
    property default_return_url : String? = nil
    MAX_LENGTH_FOR_DEFAULT_RETURN_URL = 5000

    @[JSON::Field(key: "features", type: Stripe::PortalFeatures?, default: nil, required: true, nullable: false, emit_null: false)]
    property features : Stripe::PortalFeatures? = nil

    # Unique identifier for the object.
    @[JSON::Field(key: "id", type: String?, default: nil, required: true, nullable: false, emit_null: false)]
    property id : String? = nil
    MAX_LENGTH_FOR_ID = 5000

    # Whether the configuration is the default. If `true`, this configuration can be managed in the Dashboard and portal sessions will use this configuration unless it is overriden when creating the session.
    @[JSON::Field(key: "is_default", type: Bool?, default: nil, required: true, nullable: false, emit_null: false)]
    property is_default : Bool? = nil

    # Has the value `true` if the object exists in live mode or the value `false` if the object exists in test mode.
    @[JSON::Field(key: "livemode", type: Bool?, default: nil, required: true, nullable: false, emit_null: false)]
    property livemode : Bool? = nil

    @[JSON::Field(key: "login_page", type: Stripe::PortalLoginPage?, default: nil, required: true, nullable: false, emit_null: false)]
    property login_page : Stripe::PortalLoginPage? = nil

    @[JSON::Field(key: "metadata", type: Hash(String, String)?, default: nil, required: true, nullable: true, emit_null: true)]
    property metadata : Hash(String, String)? = nil

    # String representing the object's type. Objects of the same type share the same value.
    @[JSON::Field(key: "object", type: String?, default: nil, required: true, nullable: false, emit_null: false)]
    property object : String? = nil
    ERROR_MESSAGE_FOR_OBJECT = "invalid value for \"object\", must be one of [billing_portal.configuration]."
    VALID_VALUES_FOR_OBJECT  = String.static_array("billing_portal.configuration")

    # Time at which the object was last updated. Measured in seconds since the Unix epoch.
    @[JSON::Field(key: "updated", type: Int64?, default: nil, required: true, nullable: false, emit_null: false)]
    property updated : Int64? = nil

    # End of Required Properties
    # List of class defined in anyOf (OpenAPI v3)
    def self.openapi_any_of
      [
        Stripe::BillingPortalConfiguration,
        String,
      ]
    end

    # Initializes the object
    # @param [Hash] attributes Model attributes in the form of hash
    def initialize(
      *,
      # Required properties
      @active : Bool? = nil,
      @application : Stripe::BillingPortalConfigurationApplication? = nil,
      @business_profile : Stripe::PortalBusinessProfile? = nil,
      @created : Int64? = nil,
      @default_return_url : String? = nil,
      @features : Stripe::PortalFeatures? = nil,
      @id : String? = nil,
      @is_default : Bool? = nil,
      @livemode : Bool? = nil,
      @login_page : Stripe::PortalLoginPage? = nil,
      @metadata : Hash(String, String)? = nil,
      @object : String? = nil,
      @updated : Int64? = nil
    )
    end

    # Show invalid properties with the reasons. Usually used together with valid?
    # @return Array for valid properties with the reasons
    def list_invalid_properties : Array(String)
      invalid_properties = Array(String).new
      invalid_properties
    end

    # Check to see if the all the properties in the model are valid
    # @return true if the model is valid
    def valid? : Bool
      _any_of_found = false
      json_string : String = self.to_json
      _any_of_found = self.class.openapi_any_of.any? do |_class|
        _any_of = begin
          _class.from_json(json_string)
        rescue
          nil
        end

        !_any_of.nil? && _any_of.not_nil!.valid?
      end
      return false if !_any_of_found

      true
    end

    # Generates #hash and #== methods from all fields
    # #== @return [Bool]
    # #hash calculates hash code according to all attributes.
    # #hash @return [UInt64] Hash code
    def_equals_and_hash(@active, @application, @business_profile, @created, @default_return_url, @features, @id, @is_default, @livemode, @login_page, @metadata, @object, @updated)
  end
end
