#  Stripe API
#
# The Stripe REST API. Please see https://stripe.com/docs/api for more details.
#
# The version of the OpenAPI document: 2022-08-01
# Contact: dev-platform@stripe.com
# Generated by: https://openapi-generator.tech
#

require "json"
require "time"
require "log"

module Stripe
  # Encodes whether a FinancialAccount has access to a particular Feature, with a `status` enum and associated `status_details`. Stripe or the platform can control Features via the requested field.
  class TreasuryFinancialAccountFeatures
    include JSON::Serializable
    include JSON::Serializable::Unmapped
    include OpenApi::Json

    # Required properties

    # String representing the object's type. Objects of the same type share the same value.
    @[JSON::Field(key: "object", type: String?, default: nil, required: true, nullable: false, emit_null: false)]
    getter object : String? = nil

    ENUM_VALIDATOR_FOR_OBJECT = EnumValidator.new("object", "String", ["treasury.financial_account_features"])

    # Optional properties

    @[JSON::Field(key: "card_issuing", type: Stripe::TreasuryFinancialAccountsResourceToggleSettings?, default: nil, required: false, nullable: false, emit_null: false)]
    getter card_issuing : Stripe::TreasuryFinancialAccountsResourceToggleSettings? = nil

    @[JSON::Field(key: "deposit_insurance", type: Stripe::TreasuryFinancialAccountsResourceToggleSettings?, default: nil, required: false, nullable: false, emit_null: false)]
    getter deposit_insurance : Stripe::TreasuryFinancialAccountsResourceToggleSettings? = nil

    @[JSON::Field(key: "financial_addresses", type: Stripe::TreasuryFinancialAccountsResourceFinancialAddressesFeatures?, default: nil, required: false, nullable: false, emit_null: false)]
    getter financial_addresses : Stripe::TreasuryFinancialAccountsResourceFinancialAddressesFeatures? = nil

    @[JSON::Field(key: "inbound_transfers", type: Stripe::TreasuryFinancialAccountsResourceInboundTransfers?, default: nil, required: false, nullable: false, emit_null: false)]
    getter inbound_transfers : Stripe::TreasuryFinancialAccountsResourceInboundTransfers? = nil

    @[JSON::Field(key: "intra_stripe_flows", type: Stripe::TreasuryFinancialAccountsResourceToggleSettings?, default: nil, required: false, nullable: false, emit_null: false)]
    getter intra_stripe_flows : Stripe::TreasuryFinancialAccountsResourceToggleSettings? = nil

    @[JSON::Field(key: "outbound_payments", type: Stripe::TreasuryFinancialAccountsResourceOutboundPayments?, default: nil, required: false, nullable: false, emit_null: false)]
    getter outbound_payments : Stripe::TreasuryFinancialAccountsResourceOutboundPayments? = nil

    @[JSON::Field(key: "outbound_transfers", type: Stripe::TreasuryFinancialAccountsResourceOutboundTransfers?, default: nil, required: false, nullable: false, emit_null: false)]
    getter outbound_transfers : Stripe::TreasuryFinancialAccountsResourceOutboundTransfers? = nil

    # Initializes the object
    # @param [Hash] attributes Model attributes in the form of hash
    def initialize(
      *,
      # Required properties
      @object : String? = nil,
      # Optional properties
      @card_issuing : Stripe::TreasuryFinancialAccountsResourceToggleSettings? = nil,
      @deposit_insurance : Stripe::TreasuryFinancialAccountsResourceToggleSettings? = nil,
      @financial_addresses : Stripe::TreasuryFinancialAccountsResourceFinancialAddressesFeatures? = nil,
      @inbound_transfers : Stripe::TreasuryFinancialAccountsResourceInboundTransfers? = nil,
      @intra_stripe_flows : Stripe::TreasuryFinancialAccountsResourceToggleSettings? = nil,
      @outbound_payments : Stripe::TreasuryFinancialAccountsResourceOutboundPayments? = nil,
      @outbound_transfers : Stripe::TreasuryFinancialAccountsResourceOutboundTransfers? = nil
    )
    end

    # Show invalid properties with the reasons. Usually used together with valid?
    # @return Array for valid properties with the reasons
    def list_invalid_properties
      invalid_properties = Array(String).new

      invalid_properties.push(ENUM_VALIDATOR_FOR_OBJECT.error_message) unless ENUM_VALIDATOR_FOR_OBJECT.valid?(@object, false)
      # This is a model card_issuing : Stripe::TreasuryFinancialAccountsResourceToggleSettings?
      # This is a model deposit_insurance : Stripe::TreasuryFinancialAccountsResourceToggleSettings?
      # This is a model financial_addresses : Stripe::TreasuryFinancialAccountsResourceFinancialAddressesFeatures?
      # This is a model inbound_transfers : Stripe::TreasuryFinancialAccountsResourceInboundTransfers?
      # This is a model intra_stripe_flows : Stripe::TreasuryFinancialAccountsResourceToggleSettings?
      # This is a model outbound_payments : Stripe::TreasuryFinancialAccountsResourceOutboundPayments?
      # This is a model outbound_transfers : Stripe::TreasuryFinancialAccountsResourceOutboundTransfers?

      invalid_properties
    end

    # Check to see if the all the properties in the model are valid
    # @return true if the model is valid
    def valid?
      return false unless ENUM_VALIDATOR_FOR_OBJECT.valid?(@object, false)

      true
    end

    # Custom attribute writer method checking allowed values (enum).
    # @param [Object] object Object to be assigned
    def object=(object : String?)
      if object.nil?
        raise ArgumentError.new("\"object\" is required and cannot be null")
      end
      _object = object.not_nil!
      ENUM_VALIDATOR_FOR_OBJECT.valid!(_object)
      @object = object
    end

    # Custom attribute writer method checking allowed values (enum).
    # @param [Object] card_issuing Object to be assigned
    def card_issuing=(card_issuing : Stripe::TreasuryFinancialAccountsResourceToggleSettings?)
      if card_issuing.nil?
        return @card_issuing = nil
      end
      @card_issuing = card_issuing
    end

    # Custom attribute writer method checking allowed values (enum).
    # @param [Object] deposit_insurance Object to be assigned
    def deposit_insurance=(deposit_insurance : Stripe::TreasuryFinancialAccountsResourceToggleSettings?)
      if deposit_insurance.nil?
        return @deposit_insurance = nil
      end
      @deposit_insurance = deposit_insurance
    end

    # Custom attribute writer method checking allowed values (enum).
    # @param [Object] financial_addresses Object to be assigned
    def financial_addresses=(financial_addresses : Stripe::TreasuryFinancialAccountsResourceFinancialAddressesFeatures?)
      if financial_addresses.nil?
        return @financial_addresses = nil
      end
      @financial_addresses = financial_addresses
    end

    # Custom attribute writer method checking allowed values (enum).
    # @param [Object] inbound_transfers Object to be assigned
    def inbound_transfers=(inbound_transfers : Stripe::TreasuryFinancialAccountsResourceInboundTransfers?)
      if inbound_transfers.nil?
        return @inbound_transfers = nil
      end
      @inbound_transfers = inbound_transfers
    end

    # Custom attribute writer method checking allowed values (enum).
    # @param [Object] intra_stripe_flows Object to be assigned
    def intra_stripe_flows=(intra_stripe_flows : Stripe::TreasuryFinancialAccountsResourceToggleSettings?)
      if intra_stripe_flows.nil?
        return @intra_stripe_flows = nil
      end
      @intra_stripe_flows = intra_stripe_flows
    end

    # Custom attribute writer method checking allowed values (enum).
    # @param [Object] outbound_payments Object to be assigned
    def outbound_payments=(outbound_payments : Stripe::TreasuryFinancialAccountsResourceOutboundPayments?)
      if outbound_payments.nil?
        return @outbound_payments = nil
      end
      @outbound_payments = outbound_payments
    end

    # Custom attribute writer method checking allowed values (enum).
    # @param [Object] outbound_transfers Object to be assigned
    def outbound_transfers=(outbound_transfers : Stripe::TreasuryFinancialAccountsResourceOutboundTransfers?)
      if outbound_transfers.nil?
        return @outbound_transfers = nil
      end
      @outbound_transfers = outbound_transfers
    end

    # @see the `==` method
    # @param [Object] Object to be compared
    def eql?(o)
      self == o
    end

    # Generates #hash and #== methods from all fields
    # #== @return [Bool]
    # #hash calculates hash code according to all attributes.
    # #hash @return [UInt64] Hash code
    def_equals_and_hash(@object, @card_issuing, @deposit_insurance, @financial_addresses, @inbound_transfers, @intra_stripe_flows, @outbound_payments, @outbound_transfers)
  end
end
