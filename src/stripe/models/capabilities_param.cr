#  Stripe API
#
# The Stripe REST API. Please see https://stripe.com/docs/api for more details.
#
# The version of the OpenAPI document: 2022-08-01
# Contact: dev-platform@stripe.com
# Generated by: https://openapi-generator.tech
#

require "json"
require "time"
require "log"

module Stripe
  # Each key of the dictionary represents a capability, and each capability maps to its settings (e.g. whether it has been requested or not). Each capability will be inactive until you have provided its specific requirements and Stripe has verified them. An account may have some of its requested capabilities be active and some be inactive.
  class CapabilitiesParam
    include JSON::Serializable
    include JSON::Serializable::Unmapped
    include OpenApi::Json

    # Optional properties

    @[JSON::Field(key: "acss_debit_payments", type: Stripe::CapabilityParam?, default: nil, required: false, nullable: false, emit_null: false)]
    getter acss_debit_payments : Stripe::CapabilityParam? = nil

    @[JSON::Field(key: "affirm_payments", type: Stripe::CapabilityParam?, default: nil, required: false, nullable: false, emit_null: false)]
    getter affirm_payments : Stripe::CapabilityParam? = nil

    @[JSON::Field(key: "afterpay_clearpay_payments", type: Stripe::CapabilityParam?, default: nil, required: false, nullable: false, emit_null: false)]
    getter afterpay_clearpay_payments : Stripe::CapabilityParam? = nil

    @[JSON::Field(key: "au_becs_debit_payments", type: Stripe::CapabilityParam?, default: nil, required: false, nullable: false, emit_null: false)]
    getter au_becs_debit_payments : Stripe::CapabilityParam? = nil

    @[JSON::Field(key: "bacs_debit_payments", type: Stripe::CapabilityParam?, default: nil, required: false, nullable: false, emit_null: false)]
    getter bacs_debit_payments : Stripe::CapabilityParam? = nil

    @[JSON::Field(key: "bancontact_payments", type: Stripe::CapabilityParam?, default: nil, required: false, nullable: false, emit_null: false)]
    getter bancontact_payments : Stripe::CapabilityParam? = nil

    @[JSON::Field(key: "bank_transfer_payments", type: Stripe::CapabilityParam?, default: nil, required: false, nullable: false, emit_null: false)]
    getter bank_transfer_payments : Stripe::CapabilityParam? = nil

    @[JSON::Field(key: "blik_payments", type: Stripe::CapabilityParam?, default: nil, required: false, nullable: false, emit_null: false)]
    getter blik_payments : Stripe::CapabilityParam? = nil

    @[JSON::Field(key: "boleto_payments", type: Stripe::CapabilityParam?, default: nil, required: false, nullable: false, emit_null: false)]
    getter boleto_payments : Stripe::CapabilityParam? = nil

    @[JSON::Field(key: "card_issuing", type: Stripe::CapabilityParam?, default: nil, required: false, nullable: false, emit_null: false)]
    getter card_issuing : Stripe::CapabilityParam? = nil

    @[JSON::Field(key: "card_payments", type: Stripe::CapabilityParam?, default: nil, required: false, nullable: false, emit_null: false)]
    getter card_payments : Stripe::CapabilityParam? = nil

    @[JSON::Field(key: "cartes_bancaires_payments", type: Stripe::CapabilityParam?, default: nil, required: false, nullable: false, emit_null: false)]
    getter cartes_bancaires_payments : Stripe::CapabilityParam? = nil

    @[JSON::Field(key: "eps_payments", type: Stripe::CapabilityParam?, default: nil, required: false, nullable: false, emit_null: false)]
    getter eps_payments : Stripe::CapabilityParam? = nil

    @[JSON::Field(key: "fpx_payments", type: Stripe::CapabilityParam?, default: nil, required: false, nullable: false, emit_null: false)]
    getter fpx_payments : Stripe::CapabilityParam? = nil

    @[JSON::Field(key: "giropay_payments", type: Stripe::CapabilityParam?, default: nil, required: false, nullable: false, emit_null: false)]
    getter giropay_payments : Stripe::CapabilityParam? = nil

    @[JSON::Field(key: "grabpay_payments", type: Stripe::CapabilityParam?, default: nil, required: false, nullable: false, emit_null: false)]
    getter grabpay_payments : Stripe::CapabilityParam? = nil

    @[JSON::Field(key: "ideal_payments", type: Stripe::CapabilityParam?, default: nil, required: false, nullable: false, emit_null: false)]
    getter ideal_payments : Stripe::CapabilityParam? = nil

    @[JSON::Field(key: "jcb_payments", type: Stripe::CapabilityParam?, default: nil, required: false, nullable: false, emit_null: false)]
    getter jcb_payments : Stripe::CapabilityParam? = nil

    @[JSON::Field(key: "klarna_payments", type: Stripe::CapabilityParam?, default: nil, required: false, nullable: false, emit_null: false)]
    getter klarna_payments : Stripe::CapabilityParam? = nil

    @[JSON::Field(key: "konbini_payments", type: Stripe::CapabilityParam?, default: nil, required: false, nullable: false, emit_null: false)]
    getter konbini_payments : Stripe::CapabilityParam? = nil

    @[JSON::Field(key: "legacy_payments", type: Stripe::CapabilityParam?, default: nil, required: false, nullable: false, emit_null: false)]
    getter legacy_payments : Stripe::CapabilityParam? = nil

    @[JSON::Field(key: "link_payments", type: Stripe::CapabilityParam?, default: nil, required: false, nullable: false, emit_null: false)]
    getter link_payments : Stripe::CapabilityParam? = nil

    @[JSON::Field(key: "oxxo_payments", type: Stripe::CapabilityParam?, default: nil, required: false, nullable: false, emit_null: false)]
    getter oxxo_payments : Stripe::CapabilityParam? = nil

    @[JSON::Field(key: "p24_payments", type: Stripe::CapabilityParam?, default: nil, required: false, nullable: false, emit_null: false)]
    getter p24_payments : Stripe::CapabilityParam? = nil

    @[JSON::Field(key: "paynow_payments", type: Stripe::CapabilityParam?, default: nil, required: false, nullable: false, emit_null: false)]
    getter paynow_payments : Stripe::CapabilityParam? = nil

    @[JSON::Field(key: "promptpay_payments", type: Stripe::CapabilityParam?, default: nil, required: false, nullable: false, emit_null: false)]
    getter promptpay_payments : Stripe::CapabilityParam? = nil

    @[JSON::Field(key: "sepa_debit_payments", type: Stripe::CapabilityParam?, default: nil, required: false, nullable: false, emit_null: false)]
    getter sepa_debit_payments : Stripe::CapabilityParam? = nil

    @[JSON::Field(key: "sofort_payments", type: Stripe::CapabilityParam?, default: nil, required: false, nullable: false, emit_null: false)]
    getter sofort_payments : Stripe::CapabilityParam? = nil

    @[JSON::Field(key: "tax_reporting_us_1099_k", type: Stripe::CapabilityParam?, default: nil, required: false, nullable: false, emit_null: false)]
    getter tax_reporting_us_1099_k : Stripe::CapabilityParam? = nil

    @[JSON::Field(key: "tax_reporting_us_1099_misc", type: Stripe::CapabilityParam?, default: nil, required: false, nullable: false, emit_null: false)]
    getter tax_reporting_us_1099_misc : Stripe::CapabilityParam? = nil

    @[JSON::Field(key: "transfers", type: Stripe::CapabilityParam?, default: nil, required: false, nullable: false, emit_null: false)]
    getter transfers : Stripe::CapabilityParam? = nil

    @[JSON::Field(key: "treasury", type: Stripe::CapabilityParam?, default: nil, required: false, nullable: false, emit_null: false)]
    getter treasury : Stripe::CapabilityParam? = nil

    @[JSON::Field(key: "us_bank_account_ach_payments", type: Stripe::CapabilityParam?, default: nil, required: false, nullable: false, emit_null: false)]
    getter us_bank_account_ach_payments : Stripe::CapabilityParam? = nil

    # Initializes the object
    # @param [Hash] attributes Model attributes in the form of hash
    def initialize(
      *,
      # Optional properties
      @acss_debit_payments : Stripe::CapabilityParam? = nil,
      @affirm_payments : Stripe::CapabilityParam? = nil,
      @afterpay_clearpay_payments : Stripe::CapabilityParam? = nil,
      @au_becs_debit_payments : Stripe::CapabilityParam? = nil,
      @bacs_debit_payments : Stripe::CapabilityParam? = nil,
      @bancontact_payments : Stripe::CapabilityParam? = nil,
      @bank_transfer_payments : Stripe::CapabilityParam? = nil,
      @blik_payments : Stripe::CapabilityParam? = nil,
      @boleto_payments : Stripe::CapabilityParam? = nil,
      @card_issuing : Stripe::CapabilityParam? = nil,
      @card_payments : Stripe::CapabilityParam? = nil,
      @cartes_bancaires_payments : Stripe::CapabilityParam? = nil,
      @eps_payments : Stripe::CapabilityParam? = nil,
      @fpx_payments : Stripe::CapabilityParam? = nil,
      @giropay_payments : Stripe::CapabilityParam? = nil,
      @grabpay_payments : Stripe::CapabilityParam? = nil,
      @ideal_payments : Stripe::CapabilityParam? = nil,
      @jcb_payments : Stripe::CapabilityParam? = nil,
      @klarna_payments : Stripe::CapabilityParam? = nil,
      @konbini_payments : Stripe::CapabilityParam? = nil,
      @legacy_payments : Stripe::CapabilityParam? = nil,
      @link_payments : Stripe::CapabilityParam? = nil,
      @oxxo_payments : Stripe::CapabilityParam? = nil,
      @p24_payments : Stripe::CapabilityParam? = nil,
      @paynow_payments : Stripe::CapabilityParam? = nil,
      @promptpay_payments : Stripe::CapabilityParam? = nil,
      @sepa_debit_payments : Stripe::CapabilityParam? = nil,
      @sofort_payments : Stripe::CapabilityParam? = nil,
      @tax_reporting_us_1099_k : Stripe::CapabilityParam? = nil,
      @tax_reporting_us_1099_misc : Stripe::CapabilityParam? = nil,
      @transfers : Stripe::CapabilityParam? = nil,
      @treasury : Stripe::CapabilityParam? = nil,
      @us_bank_account_ach_payments : Stripe::CapabilityParam? = nil
    )
    end

    # Show invalid properties with the reasons. Usually used together with valid?
    # @return Array for valid properties with the reasons
    def list_invalid_properties
      invalid_properties = Array(String).new
      # This is a model acss_debit_payments : Stripe::CapabilityParam?
      # This is a model affirm_payments : Stripe::CapabilityParam?
      # This is a model afterpay_clearpay_payments : Stripe::CapabilityParam?
      # This is a model au_becs_debit_payments : Stripe::CapabilityParam?
      # This is a model bacs_debit_payments : Stripe::CapabilityParam?
      # This is a model bancontact_payments : Stripe::CapabilityParam?
      # This is a model bank_transfer_payments : Stripe::CapabilityParam?
      # This is a model blik_payments : Stripe::CapabilityParam?
      # This is a model boleto_payments : Stripe::CapabilityParam?
      # This is a model card_issuing : Stripe::CapabilityParam?
      # This is a model card_payments : Stripe::CapabilityParam?
      # This is a model cartes_bancaires_payments : Stripe::CapabilityParam?
      # This is a model eps_payments : Stripe::CapabilityParam?
      # This is a model fpx_payments : Stripe::CapabilityParam?
      # This is a model giropay_payments : Stripe::CapabilityParam?
      # This is a model grabpay_payments : Stripe::CapabilityParam?
      # This is a model ideal_payments : Stripe::CapabilityParam?
      # This is a model jcb_payments : Stripe::CapabilityParam?
      # This is a model klarna_payments : Stripe::CapabilityParam?
      # This is a model konbini_payments : Stripe::CapabilityParam?
      # This is a model legacy_payments : Stripe::CapabilityParam?
      # This is a model link_payments : Stripe::CapabilityParam?
      # This is a model oxxo_payments : Stripe::CapabilityParam?
      # This is a model p24_payments : Stripe::CapabilityParam?
      # This is a model paynow_payments : Stripe::CapabilityParam?
      # This is a model promptpay_payments : Stripe::CapabilityParam?
      # This is a model sepa_debit_payments : Stripe::CapabilityParam?
      # This is a model sofort_payments : Stripe::CapabilityParam?
      # This is a model tax_reporting_us_1099_k : Stripe::CapabilityParam?
      # This is a model tax_reporting_us_1099_misc : Stripe::CapabilityParam?
      # This is a model transfers : Stripe::CapabilityParam?
      # This is a model treasury : Stripe::CapabilityParam?
      # This is a model us_bank_account_ach_payments : Stripe::CapabilityParam?

      invalid_properties
    end

    # Check to see if the all the properties in the model are valid
    # @return true if the model is valid
    def valid?
      true
    end

    # Custom attribute writer method checking allowed values (enum).
    # @param [Object] acss_debit_payments Object to be assigned
    def acss_debit_payments=(acss_debit_payments : Stripe::CapabilityParam?)
      if acss_debit_payments.nil?
        return @acss_debit_payments = nil
      end
      @acss_debit_payments = acss_debit_payments
    end

    # Custom attribute writer method checking allowed values (enum).
    # @param [Object] affirm_payments Object to be assigned
    def affirm_payments=(affirm_payments : Stripe::CapabilityParam?)
      if affirm_payments.nil?
        return @affirm_payments = nil
      end
      @affirm_payments = affirm_payments
    end

    # Custom attribute writer method checking allowed values (enum).
    # @param [Object] afterpay_clearpay_payments Object to be assigned
    def afterpay_clearpay_payments=(afterpay_clearpay_payments : Stripe::CapabilityParam?)
      if afterpay_clearpay_payments.nil?
        return @afterpay_clearpay_payments = nil
      end
      @afterpay_clearpay_payments = afterpay_clearpay_payments
    end

    # Custom attribute writer method checking allowed values (enum).
    # @param [Object] au_becs_debit_payments Object to be assigned
    def au_becs_debit_payments=(au_becs_debit_payments : Stripe::CapabilityParam?)
      if au_becs_debit_payments.nil?
        return @au_becs_debit_payments = nil
      end
      @au_becs_debit_payments = au_becs_debit_payments
    end

    # Custom attribute writer method checking allowed values (enum).
    # @param [Object] bacs_debit_payments Object to be assigned
    def bacs_debit_payments=(bacs_debit_payments : Stripe::CapabilityParam?)
      if bacs_debit_payments.nil?
        return @bacs_debit_payments = nil
      end
      @bacs_debit_payments = bacs_debit_payments
    end

    # Custom attribute writer method checking allowed values (enum).
    # @param [Object] bancontact_payments Object to be assigned
    def bancontact_payments=(bancontact_payments : Stripe::CapabilityParam?)
      if bancontact_payments.nil?
        return @bancontact_payments = nil
      end
      @bancontact_payments = bancontact_payments
    end

    # Custom attribute writer method checking allowed values (enum).
    # @param [Object] bank_transfer_payments Object to be assigned
    def bank_transfer_payments=(bank_transfer_payments : Stripe::CapabilityParam?)
      if bank_transfer_payments.nil?
        return @bank_transfer_payments = nil
      end
      @bank_transfer_payments = bank_transfer_payments
    end

    # Custom attribute writer method checking allowed values (enum).
    # @param [Object] blik_payments Object to be assigned
    def blik_payments=(blik_payments : Stripe::CapabilityParam?)
      if blik_payments.nil?
        return @blik_payments = nil
      end
      @blik_payments = blik_payments
    end

    # Custom attribute writer method checking allowed values (enum).
    # @param [Object] boleto_payments Object to be assigned
    def boleto_payments=(boleto_payments : Stripe::CapabilityParam?)
      if boleto_payments.nil?
        return @boleto_payments = nil
      end
      @boleto_payments = boleto_payments
    end

    # Custom attribute writer method checking allowed values (enum).
    # @param [Object] card_issuing Object to be assigned
    def card_issuing=(card_issuing : Stripe::CapabilityParam?)
      if card_issuing.nil?
        return @card_issuing = nil
      end
      @card_issuing = card_issuing
    end

    # Custom attribute writer method checking allowed values (enum).
    # @param [Object] card_payments Object to be assigned
    def card_payments=(card_payments : Stripe::CapabilityParam?)
      if card_payments.nil?
        return @card_payments = nil
      end
      @card_payments = card_payments
    end

    # Custom attribute writer method checking allowed values (enum).
    # @param [Object] cartes_bancaires_payments Object to be assigned
    def cartes_bancaires_payments=(cartes_bancaires_payments : Stripe::CapabilityParam?)
      if cartes_bancaires_payments.nil?
        return @cartes_bancaires_payments = nil
      end
      @cartes_bancaires_payments = cartes_bancaires_payments
    end

    # Custom attribute writer method checking allowed values (enum).
    # @param [Object] eps_payments Object to be assigned
    def eps_payments=(eps_payments : Stripe::CapabilityParam?)
      if eps_payments.nil?
        return @eps_payments = nil
      end
      @eps_payments = eps_payments
    end

    # Custom attribute writer method checking allowed values (enum).
    # @param [Object] fpx_payments Object to be assigned
    def fpx_payments=(fpx_payments : Stripe::CapabilityParam?)
      if fpx_payments.nil?
        return @fpx_payments = nil
      end
      @fpx_payments = fpx_payments
    end

    # Custom attribute writer method checking allowed values (enum).
    # @param [Object] giropay_payments Object to be assigned
    def giropay_payments=(giropay_payments : Stripe::CapabilityParam?)
      if giropay_payments.nil?
        return @giropay_payments = nil
      end
      @giropay_payments = giropay_payments
    end

    # Custom attribute writer method checking allowed values (enum).
    # @param [Object] grabpay_payments Object to be assigned
    def grabpay_payments=(grabpay_payments : Stripe::CapabilityParam?)
      if grabpay_payments.nil?
        return @grabpay_payments = nil
      end
      @grabpay_payments = grabpay_payments
    end

    # Custom attribute writer method checking allowed values (enum).
    # @param [Object] ideal_payments Object to be assigned
    def ideal_payments=(ideal_payments : Stripe::CapabilityParam?)
      if ideal_payments.nil?
        return @ideal_payments = nil
      end
      @ideal_payments = ideal_payments
    end

    # Custom attribute writer method checking allowed values (enum).
    # @param [Object] jcb_payments Object to be assigned
    def jcb_payments=(jcb_payments : Stripe::CapabilityParam?)
      if jcb_payments.nil?
        return @jcb_payments = nil
      end
      @jcb_payments = jcb_payments
    end

    # Custom attribute writer method checking allowed values (enum).
    # @param [Object] klarna_payments Object to be assigned
    def klarna_payments=(klarna_payments : Stripe::CapabilityParam?)
      if klarna_payments.nil?
        return @klarna_payments = nil
      end
      @klarna_payments = klarna_payments
    end

    # Custom attribute writer method checking allowed values (enum).
    # @param [Object] konbini_payments Object to be assigned
    def konbini_payments=(konbini_payments : Stripe::CapabilityParam?)
      if konbini_payments.nil?
        return @konbini_payments = nil
      end
      @konbini_payments = konbini_payments
    end

    # Custom attribute writer method checking allowed values (enum).
    # @param [Object] legacy_payments Object to be assigned
    def legacy_payments=(legacy_payments : Stripe::CapabilityParam?)
      if legacy_payments.nil?
        return @legacy_payments = nil
      end
      @legacy_payments = legacy_payments
    end

    # Custom attribute writer method checking allowed values (enum).
    # @param [Object] link_payments Object to be assigned
    def link_payments=(link_payments : Stripe::CapabilityParam?)
      if link_payments.nil?
        return @link_payments = nil
      end
      @link_payments = link_payments
    end

    # Custom attribute writer method checking allowed values (enum).
    # @param [Object] oxxo_payments Object to be assigned
    def oxxo_payments=(oxxo_payments : Stripe::CapabilityParam?)
      if oxxo_payments.nil?
        return @oxxo_payments = nil
      end
      @oxxo_payments = oxxo_payments
    end

    # Custom attribute writer method checking allowed values (enum).
    # @param [Object] p24_payments Object to be assigned
    def p24_payments=(p24_payments : Stripe::CapabilityParam?)
      if p24_payments.nil?
        return @p24_payments = nil
      end
      @p24_payments = p24_payments
    end

    # Custom attribute writer method checking allowed values (enum).
    # @param [Object] paynow_payments Object to be assigned
    def paynow_payments=(paynow_payments : Stripe::CapabilityParam?)
      if paynow_payments.nil?
        return @paynow_payments = nil
      end
      @paynow_payments = paynow_payments
    end

    # Custom attribute writer method checking allowed values (enum).
    # @param [Object] promptpay_payments Object to be assigned
    def promptpay_payments=(promptpay_payments : Stripe::CapabilityParam?)
      if promptpay_payments.nil?
        return @promptpay_payments = nil
      end
      @promptpay_payments = promptpay_payments
    end

    # Custom attribute writer method checking allowed values (enum).
    # @param [Object] sepa_debit_payments Object to be assigned
    def sepa_debit_payments=(sepa_debit_payments : Stripe::CapabilityParam?)
      if sepa_debit_payments.nil?
        return @sepa_debit_payments = nil
      end
      @sepa_debit_payments = sepa_debit_payments
    end

    # Custom attribute writer method checking allowed values (enum).
    # @param [Object] sofort_payments Object to be assigned
    def sofort_payments=(sofort_payments : Stripe::CapabilityParam?)
      if sofort_payments.nil?
        return @sofort_payments = nil
      end
      @sofort_payments = sofort_payments
    end

    # Custom attribute writer method checking allowed values (enum).
    # @param [Object] tax_reporting_us_1099_k Object to be assigned
    def tax_reporting_us_1099_k=(tax_reporting_us_1099_k : Stripe::CapabilityParam?)
      if tax_reporting_us_1099_k.nil?
        return @tax_reporting_us_1099_k = nil
      end
      @tax_reporting_us_1099_k = tax_reporting_us_1099_k
    end

    # Custom attribute writer method checking allowed values (enum).
    # @param [Object] tax_reporting_us_1099_misc Object to be assigned
    def tax_reporting_us_1099_misc=(tax_reporting_us_1099_misc : Stripe::CapabilityParam?)
      if tax_reporting_us_1099_misc.nil?
        return @tax_reporting_us_1099_misc = nil
      end
      @tax_reporting_us_1099_misc = tax_reporting_us_1099_misc
    end

    # Custom attribute writer method checking allowed values (enum).
    # @param [Object] transfers Object to be assigned
    def transfers=(transfers : Stripe::CapabilityParam?)
      if transfers.nil?
        return @transfers = nil
      end
      @transfers = transfers
    end

    # Custom attribute writer method checking allowed values (enum).
    # @param [Object] treasury Object to be assigned
    def treasury=(treasury : Stripe::CapabilityParam?)
      if treasury.nil?
        return @treasury = nil
      end
      @treasury = treasury
    end

    # Custom attribute writer method checking allowed values (enum).
    # @param [Object] us_bank_account_ach_payments Object to be assigned
    def us_bank_account_ach_payments=(us_bank_account_ach_payments : Stripe::CapabilityParam?)
      if us_bank_account_ach_payments.nil?
        return @us_bank_account_ach_payments = nil
      end
      @us_bank_account_ach_payments = us_bank_account_ach_payments
    end

    # @see the `==` method
    # @param [Object] Object to be compared
    def eql?(o)
      self == o
    end

    # Generates #hash and #== methods from all fields
    # #== @return [Bool]
    # #hash calculates hash code according to all attributes.
    # #hash @return [UInt64] Hash code
    def_equals_and_hash(@acss_debit_payments, @affirm_payments, @afterpay_clearpay_payments, @au_becs_debit_payments, @bacs_debit_payments, @bancontact_payments, @bank_transfer_payments, @blik_payments, @boleto_payments, @card_issuing, @card_payments, @cartes_bancaires_payments, @eps_payments, @fpx_payments, @giropay_payments, @grabpay_payments, @ideal_payments, @jcb_payments, @klarna_payments, @konbini_payments, @legacy_payments, @link_payments, @oxxo_payments, @p24_payments, @paynow_payments, @promptpay_payments, @sepa_debit_payments, @sofort_payments, @tax_reporting_us_1099_k, @tax_reporting_us_1099_misc, @transfers, @treasury, @us_bank_account_ach_payments)
  end
end
