#  Stripe API
#
# The Stripe REST API. Please see https://stripe.com/docs/api for more details.
#
# The version of the OpenAPI document: 2024-06-20
# Contact: dev-platform@stripe.com
# Generated by: https://openapi-generator.tech
#

require "../../core"

module Stripe
  #
  class IssuingAuthorizationNetworkData
    include JSON::Serializable
    include JSON::Serializable::Unmapped
    include OpenApi::Validatable
    include OpenApi::Json

    # Required Properties

    # Identifier assigned to the acquirer by the card network. Sometimes this value is not provided by the network; in this case, the value will be `null`.
    @[JSON::Field(key: "acquiring_institution_id", type: String?, default: nil, required: true, nullable: true, emit_null: true)]
    getter acquiring_institution_id : String? = nil
    MAX_LENGTH_FOR_ACQUIRING_INSTITUTION_ID = 5000

    # The System Trace Audit Number (STAN) is a 6-digit identifier assigned by the acquirer. Prefer `network_data.transaction_id` if present, unless you have special requirements.
    @[JSON::Field(key: "system_trace_audit_number", type: String?, default: nil, required: true, nullable: true, emit_null: true)]
    getter system_trace_audit_number : String? = nil
    MAX_LENGTH_FOR_SYSTEM_TRACE_AUDIT_NUMBER = 5000

    # Unique identifier for the authorization assigned by the card network used to match subsequent messages, disputes, and transactions.
    @[JSON::Field(key: "transaction_id", type: String?, default: nil, required: true, nullable: true, emit_null: true)]
    getter transaction_id : String? = nil
    MAX_LENGTH_FOR_TRANSACTION_ID = 5000

    # End of Required Properties

    # Initializes the object
    # @param [Hash] attributes Model attributes in the form of hash
    def initialize(
      *,
      # Required properties
      @acquiring_institution_id : String? = nil,
      @system_trace_audit_number : String? = nil,
      @transaction_id : String? = nil
    )
    end

    # Show invalid properties with the reasons. Usually used together with valid?
    # @return Array for valid properties with the reasons
    def list_invalid_properties : Array(String)
      invalid_properties = Array(String).new

      unless (_acquiring_institution_id = @acquiring_institution_id).nil?
        if max_length_error = OpenApi::PrimitiveValidator.max_length_error("acquiring_institution_id", _acquiring_institution_id.to_s.size, MAX_LENGTH_FOR_ACQUIRING_INSTITUTION_ID)
          invalid_properties.push(max_length_error)
        end
      end
      unless (_system_trace_audit_number = @system_trace_audit_number).nil?
        if max_length_error = OpenApi::PrimitiveValidator.max_length_error("system_trace_audit_number", _system_trace_audit_number.to_s.size, MAX_LENGTH_FOR_SYSTEM_TRACE_AUDIT_NUMBER)
          invalid_properties.push(max_length_error)
        end
      end
      unless (_transaction_id = @transaction_id).nil?
        if max_length_error = OpenApi::PrimitiveValidator.max_length_error("transaction_id", _transaction_id.to_s.size, MAX_LENGTH_FOR_TRANSACTION_ID)
          invalid_properties.push(max_length_error)
        end
      end
      invalid_properties
    end

    # Check to see if the all the properties in the model are valid
    # @return true if the model is valid
    def valid? : Bool
      unless (_acquiring_institution_id = @acquiring_institution_id).nil?
        return false if _acquiring_institution_id.to_s.size > MAX_LENGTH_FOR_ACQUIRING_INSTITUTION_ID
      end

      unless (_system_trace_audit_number = @system_trace_audit_number).nil?
        return false if _system_trace_audit_number.to_s.size > MAX_LENGTH_FOR_SYSTEM_TRACE_AUDIT_NUMBER
      end

      unless (_transaction_id = @transaction_id).nil?
        return false if _transaction_id.to_s.size > MAX_LENGTH_FOR_TRANSACTION_ID
      end

      true
    end

    # Custom attribute writer method checking allowed values (enum).
    # @param [Object] acquiring_institution_id Object to be assigned
    def acquiring_institution_id=(new_value : String?)
      unless new_value.nil?
        OpenApi::PrimitiveValidator.validate_max_length("acquiring_institution_id", new_value.to_s.size, MAX_LENGTH_FOR_ACQUIRING_INSTITUTION_ID)
      end

      @acquiring_institution_id = new_value
    end

    # Custom attribute writer method checking allowed values (enum).
    # @param [Object] system_trace_audit_number Object to be assigned
    def system_trace_audit_number=(new_value : String?)
      unless new_value.nil?
        OpenApi::PrimitiveValidator.validate_max_length("system_trace_audit_number", new_value.to_s.size, MAX_LENGTH_FOR_SYSTEM_TRACE_AUDIT_NUMBER)
      end

      @system_trace_audit_number = new_value
    end

    # Custom attribute writer method checking allowed values (enum).
    # @param [Object] transaction_id Object to be assigned
    def transaction_id=(new_value : String?)
      unless new_value.nil?
        OpenApi::PrimitiveValidator.validate_max_length("transaction_id", new_value.to_s.size, MAX_LENGTH_FOR_TRANSACTION_ID)
      end

      @transaction_id = new_value
    end

    # Generates #hash and #== methods from all fields
    # #== @return [Bool]
    # #hash calculates hash code according to all attributes.
    # #hash @return [UInt64] Hash code
    def_equals_and_hash(@acquiring_institution_id, @system_trace_audit_number, @transaction_id)
  end
end
