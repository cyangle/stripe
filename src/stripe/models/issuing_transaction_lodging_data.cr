#  Stripe API
#
# The Stripe REST API. Please see https://stripe.com/docs/api for more details.
#
# The version of the OpenAPI document: 2022-11-15
# Contact: dev-platform@stripe.com
# Generated by: https://openapi-generator.tech
#

require "json"
require "time"
require "log"

module Stripe
  #
  class IssuingTransactionLodgingData
    include JSON::Serializable
    include JSON::Serializable::Unmapped
    include OpenApi::Validatable
    include OpenApi::Json

    # Optional Properties

    # The time of checking into the lodging.
    @[JSON::Field(key: "check_in_at", type: Int64?, default: nil, required: false, nullable: true, emit_null: true, presence: true, ignore_serialize: check_in_at.nil? && !check_in_at_present?)]
    getter check_in_at : Int64? = nil

    @[JSON::Field(ignore: true)]
    property? check_in_at_present : Bool = false

    # The number of nights stayed at the lodging.
    @[JSON::Field(key: "nights", type: Int64?, default: nil, required: false, nullable: true, emit_null: true, presence: true, ignore_serialize: nights.nil? && !nights_present?)]
    getter nights : Int64? = nil

    @[JSON::Field(ignore: true)]
    property? nights_present : Bool = false

    # Initializes the object
    # @param [Hash] attributes Model attributes in the form of hash
    def initialize(
      *,
      # Optional properties
      @check_in_at : Int64? = nil,
      @nights : Int64? = nil
    )
    end

    # Show invalid properties with the reasons. Usually used together with valid?
    # @return Array for valid properties with the reasons
    def list_invalid_properties : Array(String)
      invalid_properties = Array(String).new

      invalid_properties
    end

    # Check to see if the all the properties in the model are valid
    # @return true if the model is valid
    def valid? : Bool
      true
    end

    # Custom attribute writer method checking allowed values (enum).
    # @param [Object] check_in_at Object to be assigned
    def check_in_at=(check_in_at : Int64?)
      if check_in_at.nil?
        return @check_in_at = nil
      end
      _check_in_at = check_in_at.not_nil!
      @check_in_at = _check_in_at
    end

    # Custom attribute writer method checking allowed values (enum).
    # @param [Object] nights Object to be assigned
    def nights=(nights : Int64?)
      if nights.nil?
        return @nights = nil
      end
      _nights = nights.not_nil!
      @nights = _nights
    end

    # Generates #hash and #== methods from all fields
    # #== @return [Bool]
    # #hash calculates hash code according to all attributes.
    # #hash @return [UInt64] Hash code
    def_equals_and_hash(@check_in_at, @check_in_at_present, @nights, @nights_present)
  end
end
