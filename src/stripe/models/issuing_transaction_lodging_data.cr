#  Stripe API
#
# The Stripe REST API. Please see https://stripe.com/docs/api for more details.
#
# The version of the OpenAPI document: 2020-08-27
# Contact: dev-platform@stripe.com
# Generated by: https://openapi-generator.tech
#

require "json"
require "time"
require "log"

module Stripe
  #
  @[JSON::Serializable::Options(emit_nulls: true)]
  class IssuingTransactionLodgingData
    include JSON::Serializable
    include JSON::Serializable::Unmapped

    # Optional properties

    # The time of checking into the lodging.
    @[JSON::Field(key: "check_in_at", type: Int64?, presence: true, ignore_serialize: check_in_at.nil? && !check_in_at_present?)]
    property check_in_at : Int64?

    @[JSON::Field(ignore: true)]
    property? check_in_at_present : Bool = false

    # The number of nights stayed at the lodging.
    @[JSON::Field(key: "nights", type: Int64?, presence: true, ignore_serialize: nights.nil? && !nights_present?)]
    property nights : Int64?

    @[JSON::Field(ignore: true)]
    property? nights_present : Bool = false

    # Initializes the object
    # @param [Hash] attributes Model attributes in the form of hash
    def initialize(
      *,
      # Optional properties
      @check_in_at : Int64? = nil,
      @nights : Int64? = nil
    )
    end

    # Show invalid properties with the reasons. Usually used together with valid?
    # @return Array for valid properties with the reasons
    def list_invalid_properties
      invalid_properties = Array(String).new

      invalid_properties
    end

    # Check to see if the all the properties in the model are valid
    # @return true if the model is valid
    def valid?
      true
    end

    # @see the `==` method
    # @param [Object] Object to be compared
    def eql?(o)
      self == o
    end

    # Generates #hash and #== methods from all fields
    # #== @return [Bool]
    # #hash calculates hash code according to all attributes.
    # #hash @return [UInt64] Hash code
    def_equals_and_hash(@check_in_at, @nights)
  end
end
