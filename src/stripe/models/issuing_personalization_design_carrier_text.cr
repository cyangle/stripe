#  Stripe API
#
# The Stripe REST API. Please see https://stripe.com/docs/api for more details.
#
# The version of the OpenAPI document: 2024-06-20
# Contact: dev-platform@stripe.com
# Generated by: https://openapi-generator.tech
#

require "../../core"

module Stripe
  #
  class IssuingPersonalizationDesignCarrierText
    include JSON::Serializable
    include JSON::Serializable::Unmapped
    include OpenApi::Validatable
    include OpenApi::Json

    # Required Properties

    # The footer body text of the carrier letter.
    @[JSON::Field(key: "footer_body", type: String?, default: nil, required: true, nullable: true, emit_null: true)]
    getter footer_body : String? = nil
    MAX_LENGTH_FOR_FOOTER_BODY = 5000

    # The footer title text of the carrier letter.
    @[JSON::Field(key: "footer_title", type: String?, default: nil, required: true, nullable: true, emit_null: true)]
    getter footer_title : String? = nil
    MAX_LENGTH_FOR_FOOTER_TITLE = 5000

    # The header body text of the carrier letter.
    @[JSON::Field(key: "header_body", type: String?, default: nil, required: true, nullable: true, emit_null: true)]
    getter header_body : String? = nil
    MAX_LENGTH_FOR_HEADER_BODY = 5000

    # The header title text of the carrier letter.
    @[JSON::Field(key: "header_title", type: String?, default: nil, required: true, nullable: true, emit_null: true)]
    getter header_title : String? = nil
    MAX_LENGTH_FOR_HEADER_TITLE = 5000

    # End of Required Properties

    # Initializes the object
    # @param [Hash] attributes Model attributes in the form of hash
    def initialize(
      *,
      # Required properties
      @footer_body : String? = nil,
      @footer_title : String? = nil,
      @header_body : String? = nil,
      @header_title : String? = nil
    )
    end

    # Show invalid properties with the reasons. Usually used together with valid?
    # @return Array for valid properties with the reasons
    def list_invalid_properties : Array(String)
      invalid_properties = Array(String).new

      unless (_footer_body = @footer_body).nil?
        if max_length_error = OpenApi::PrimitiveValidator.max_length_error("footer_body", _footer_body.to_s.size, MAX_LENGTH_FOR_FOOTER_BODY)
          invalid_properties.push(max_length_error)
        end
      end
      unless (_footer_title = @footer_title).nil?
        if max_length_error = OpenApi::PrimitiveValidator.max_length_error("footer_title", _footer_title.to_s.size, MAX_LENGTH_FOR_FOOTER_TITLE)
          invalid_properties.push(max_length_error)
        end
      end
      unless (_header_body = @header_body).nil?
        if max_length_error = OpenApi::PrimitiveValidator.max_length_error("header_body", _header_body.to_s.size, MAX_LENGTH_FOR_HEADER_BODY)
          invalid_properties.push(max_length_error)
        end
      end
      unless (_header_title = @header_title).nil?
        if max_length_error = OpenApi::PrimitiveValidator.max_length_error("header_title", _header_title.to_s.size, MAX_LENGTH_FOR_HEADER_TITLE)
          invalid_properties.push(max_length_error)
        end
      end
      invalid_properties
    end

    # Check to see if the all the properties in the model are valid
    # @return true if the model is valid
    def valid? : Bool
      unless (_footer_body = @footer_body).nil?
        return false if _footer_body.to_s.size > MAX_LENGTH_FOR_FOOTER_BODY
      end

      unless (_footer_title = @footer_title).nil?
        return false if _footer_title.to_s.size > MAX_LENGTH_FOR_FOOTER_TITLE
      end

      unless (_header_body = @header_body).nil?
        return false if _header_body.to_s.size > MAX_LENGTH_FOR_HEADER_BODY
      end

      unless (_header_title = @header_title).nil?
        return false if _header_title.to_s.size > MAX_LENGTH_FOR_HEADER_TITLE
      end

      true
    end

    # Custom attribute writer method checking allowed values (enum).
    # @param [Object] footer_body Object to be assigned
    def footer_body=(new_value : String?)
      unless new_value.nil?
        OpenApi::PrimitiveValidator.validate_max_length("footer_body", new_value.to_s.size, MAX_LENGTH_FOR_FOOTER_BODY)
      end

      @footer_body = new_value
    end

    # Custom attribute writer method checking allowed values (enum).
    # @param [Object] footer_title Object to be assigned
    def footer_title=(new_value : String?)
      unless new_value.nil?
        OpenApi::PrimitiveValidator.validate_max_length("footer_title", new_value.to_s.size, MAX_LENGTH_FOR_FOOTER_TITLE)
      end

      @footer_title = new_value
    end

    # Custom attribute writer method checking allowed values (enum).
    # @param [Object] header_body Object to be assigned
    def header_body=(new_value : String?)
      unless new_value.nil?
        OpenApi::PrimitiveValidator.validate_max_length("header_body", new_value.to_s.size, MAX_LENGTH_FOR_HEADER_BODY)
      end

      @header_body = new_value
    end

    # Custom attribute writer method checking allowed values (enum).
    # @param [Object] header_title Object to be assigned
    def header_title=(new_value : String?)
      unless new_value.nil?
        OpenApi::PrimitiveValidator.validate_max_length("header_title", new_value.to_s.size, MAX_LENGTH_FOR_HEADER_TITLE)
      end

      @header_title = new_value
    end

    # Generates #hash and #== methods from all fields
    # #== @return [Bool]
    # #hash calculates hash code according to all attributes.
    # #hash @return [UInt64] Hash code
    def_equals_and_hash(@footer_body, @footer_title, @header_body, @header_title)
  end
end
