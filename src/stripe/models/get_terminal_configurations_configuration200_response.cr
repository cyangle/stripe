#  Stripe API
#
# The Stripe REST API. Please see https://stripe.com/docs/api for more details.
#
# The version of the OpenAPI document: 2020-08-27
# Contact: dev-platform@stripe.com
# Generated by: https://openapi-generator.tech
#

require "json"
require "time"
require "log"

module Stripe
  @[JSON::Serializable::Options(emit_nulls: true)]
  class GetTerminalConfigurationsConfiguration200Response
    include JSON::Serializable
    include JSON::Serializable::Unmapped

    # Required properties
    # Unique identifier for the object.
    @[JSON::Field(key: "id", type: String?)]
    getter id : String?

    # Whether this Configuration is the default for your account
    @[JSON::Field(key: "is_account_default", type: Bool, presence: true, ignore_serialize: is_account_default.nil? && !is_account_default_present?)]
    property is_account_default : Bool

    @[JSON::Field(ignore: true)]
    property? is_account_default_present : Bool = false

    # Has the value `true` if the object exists in live mode or the value `false` if the object exists in test mode.
    @[JSON::Field(key: "livemode", type: Bool?)]
    property livemode : Bool?

    # String representing the object's type. Objects of the same type share the same value.
    @[JSON::Field(key: "object", type: String?)]
    getter object : String?

    ENUM_VALIDATOR_FOR_OBJECT = EnumValidator.new("object", "String", ["terminal.configuration"])

    # Always true for a deleted object
    @[JSON::Field(key: "deleted", type: Bool?)]
    getter deleted : Bool?

    ENUM_VALIDATOR_FOR_DELETED = EnumValidator.new("deleted", "Bool", ["true"])

    # Optional properties
    @[JSON::Field(key: "bbpos_wisepos_e", type: TerminalConfigurationConfigurationResourceDeviceTypeSpecificConfig?, presence: true, ignore_serialize: bbpos_wisepos_e.nil? && !bbpos_wisepos_e_present?)]
    property bbpos_wisepos_e : TerminalConfigurationConfigurationResourceDeviceTypeSpecificConfig?

    @[JSON::Field(ignore: true)]
    property? bbpos_wisepos_e_present : Bool = false

    @[JSON::Field(key: "tipping", type: TerminalConfigurationConfigurationResourceTipping?, presence: true, ignore_serialize: tipping.nil? && !tipping_present?)]
    property tipping : TerminalConfigurationConfigurationResourceTipping?

    @[JSON::Field(ignore: true)]
    property? tipping_present : Bool = false

    @[JSON::Field(key: "verifone_p400", type: TerminalConfigurationConfigurationResourceDeviceTypeSpecificConfig?, presence: true, ignore_serialize: verifone_p400.nil? && !verifone_p400_present?)]
    property verifone_p400 : TerminalConfigurationConfigurationResourceDeviceTypeSpecificConfig?

    @[JSON::Field(ignore: true)]
    property? verifone_p400_present : Bool = false

    # List of class defined in anyOf (OpenAPI v3)
    def self.openapi_any_of
      [
        Stripe::DeletedTerminalConfiguration,
        Stripe::TerminalConfiguration,
      ]
    end

    # Initializes the object
    # @param [Hash] attributes Model attributes in the form of hash
    def initialize(*, @id : String, @is_account_default : Bool?, @livemode : Bool, @object : String, @deleted : Bool, @bbpos_wisepos_e : TerminalConfigurationConfigurationResourceDeviceTypeSpecificConfig? = nil, @tipping : TerminalConfigurationConfigurationResourceTipping? = nil, @verifone_p400 : TerminalConfigurationConfigurationResourceDeviceTypeSpecificConfig? = nil)
    end

    # Show invalid properties with the reasons. Usually used together with valid?
    # @return Array for valid properties with the reasons
    def list_invalid_properties
      invalid_properties = Array(String).new

      if @id.to_s.size > 5000
        invalid_properties.push("invalid value for \"id\", the character length must be smaller than or equal to 5000.")
      end

      invalid_properties.push(ENUM_VALIDATOR_FOR_OBJECT.error_message) unless ENUM_VALIDATOR_FOR_OBJECT.valid?(@object, false)

      invalid_properties.push(ENUM_VALIDATOR_FOR_DELETED.error_message) unless ENUM_VALIDATOR_FOR_DELETED.valid?(@deleted, false)

      invalid_properties
    end

    # Check to see if the all the properties in the model are valid
    # @return true if the model is valid
    def valid?
      return false if @id.to_s.size > 5000
      return false unless ENUM_VALIDATOR_FOR_OBJECT.valid?(@object, false)
      return false unless ENUM_VALIDATOR_FOR_DELETED.valid?(@deleted, false)
      _any_of_found = false
      json_string : String = self.to_json
      _any_of_found = self.class.openapi_any_of.any? do |_class|
        _any_of = begin
          _class.from_json(json_string)
        rescue
          nil
        end

        !_any_of.nil? && _any_of.not_nil!.valid?
      end

      if !_any_of_found
        return false
      end

      true
    end

    # Custom attribute writer method with validation
    # @param [Object] id Value to be assigned
    def id=(id)
      if id.to_s.size > 5000
        raise ArgumentError.new("invalid value for \"id\", the character length must be smaller than or equal to 5000.")
      end

      @id = id
    end

    # Custom attribute writer method checking allowed values (enum).
    # @param [Object] object Object to be assigned
    def object=(object)
      ENUM_VALIDATOR_FOR_OBJECT.valid!(object, false)
      @object = object
    end

    # Custom attribute writer method checking allowed values (enum).
    # @param [Object] deleted Object to be assigned
    def deleted=(deleted)
      ENUM_VALIDATOR_FOR_DELETED.valid!(deleted, false)
      @deleted = deleted
    end

    # Checks equality by comparing each attribute.
    # @param [Object] Object to be compared
    def ==(o)
      return true if self.same?(o)
      self.class == o.class &&
        bbpos_wisepos_e == o.bbpos_wisepos_e &&
        id == o.id &&
        is_account_default == o.is_account_default &&
        livemode == o.livemode &&
        object == o.object &&
        tipping == o.tipping &&
        verifone_p400 == o.verifone_p400 &&
        deleted == o.deleted
    end

    # @see the `==` method
    # @param [Object] Object to be compared
    def eql?(o)
      self == o
    end

    # Calculates hash code according to all attributes.
    # @return [UInt64] Hash code
    def_hash(@bbpos_wisepos_e, @id, @is_account_default, @livemode, @object, @tipping, @verifone_p400, @deleted)
  end
end
