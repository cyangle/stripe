#  Stripe API
#
# The Stripe REST API. Please see https://stripe.com/docs/api for more details.
#
# The version of the OpenAPI document: 2024-06-20
# Contact: dev-platform@stripe.com
# Generated by: https://openapi-generator.tech
#

require "../../core"

require "./deleted_terminal_configuration"
require "./terminal_configuration"
require "./terminal_configuration_configuration_resource_device_type_specific_config"
require "./terminal_configuration_configuration_resource_offline_config"
require "./terminal_configuration_configuration_resource_reboot_window"
require "./terminal_configuration_configuration_resource_tipping"

module Stripe
  class GetTerminalConfigurationsConfiguration200Response
    include JSON::Serializable
    include JSON::Serializable::Unmapped
    include OpenApi::Validatable
    include OpenApi::Json

    # Required Properties

    # Always true for a deleted object
    @[JSON::Field(key: "deleted", type: Bool?, default: nil, required: true, nullable: false, emit_null: false)]
    property deleted : Bool? = nil

    # Unique identifier for the object.
    @[JSON::Field(key: "id", type: String?, default: nil, required: true, nullable: false, emit_null: false)]
    property id : String? = nil
    MAX_LENGTH_FOR_ID = 5000

    # String representing the object's type. Objects of the same type share the same value.
    @[JSON::Field(key: "object", type: String?, default: nil, required: true, nullable: false, emit_null: false)]
    property object : String? = nil
    ERROR_MESSAGE_FOR_OBJECT = "invalid value for \"object\", must be one of [terminal.configuration]."
    VALID_VALUES_FOR_OBJECT  = String.static_array("terminal.configuration")

    # Whether this Configuration is the default for your account
    @[JSON::Field(key: "is_account_default", type: Bool?, default: nil, required: true, nullable: true, emit_null: true)]
    property is_account_default : Bool? = nil

    # Has the value `true` if the object exists in live mode or the value `false` if the object exists in test mode.
    @[JSON::Field(key: "livemode", type: Bool?, default: nil, required: true, nullable: false, emit_null: false)]
    property livemode : Bool? = nil

    # String indicating the name of the Configuration object, set by the user
    @[JSON::Field(key: "name", type: String?, default: nil, required: true, nullable: true, emit_null: true)]
    property name : String? = nil
    MAX_LENGTH_FOR_NAME = 5000

    # End of Required Properties

    # Optional Properties

    @[JSON::Field(key: "bbpos_wisepos_e", type: Stripe::TerminalConfigurationConfigurationResourceDeviceTypeSpecificConfig?, default: nil, required: false, nullable: false, emit_null: false)]
    property bbpos_wisepos_e : Stripe::TerminalConfigurationConfigurationResourceDeviceTypeSpecificConfig? = nil

    @[JSON::Field(key: "offline", type: Stripe::TerminalConfigurationConfigurationResourceOfflineConfig?, default: nil, required: false, nullable: false, emit_null: false)]
    property offline : Stripe::TerminalConfigurationConfigurationResourceOfflineConfig? = nil

    @[JSON::Field(key: "reboot_window", type: Stripe::TerminalConfigurationConfigurationResourceRebootWindow?, default: nil, required: false, nullable: false, emit_null: false)]
    property reboot_window : Stripe::TerminalConfigurationConfigurationResourceRebootWindow? = nil

    @[JSON::Field(key: "stripe_s700", type: Stripe::TerminalConfigurationConfigurationResourceDeviceTypeSpecificConfig?, default: nil, required: false, nullable: false, emit_null: false)]
    property stripe_s700 : Stripe::TerminalConfigurationConfigurationResourceDeviceTypeSpecificConfig? = nil

    @[JSON::Field(key: "tipping", type: Stripe::TerminalConfigurationConfigurationResourceTipping?, default: nil, required: false, nullable: false, emit_null: false)]
    property tipping : Stripe::TerminalConfigurationConfigurationResourceTipping? = nil

    @[JSON::Field(key: "verifone_p400", type: Stripe::TerminalConfigurationConfigurationResourceDeviceTypeSpecificConfig?, default: nil, required: false, nullable: false, emit_null: false)]
    property verifone_p400 : Stripe::TerminalConfigurationConfigurationResourceDeviceTypeSpecificConfig? = nil

    # List of class defined in anyOf (OpenAPI v3)
    def self.openapi_any_of
      [
        Stripe::DeletedTerminalConfiguration,
        Stripe::TerminalConfiguration,
      ]
    end

    # Initializes the object
    # @param [Hash] attributes Model attributes in the form of hash
    def initialize(
      *,
      # Required properties
      @deleted : Bool? = nil,
      @id : String? = nil,
      @object : String? = nil,
      @is_account_default : Bool? = nil,
      @livemode : Bool? = nil,
      @name : String? = nil,
      # Optional properties
      @bbpos_wisepos_e : Stripe::TerminalConfigurationConfigurationResourceDeviceTypeSpecificConfig? = nil,
      @offline : Stripe::TerminalConfigurationConfigurationResourceOfflineConfig? = nil,
      @reboot_window : Stripe::TerminalConfigurationConfigurationResourceRebootWindow? = nil,
      @stripe_s700 : Stripe::TerminalConfigurationConfigurationResourceDeviceTypeSpecificConfig? = nil,
      @tipping : Stripe::TerminalConfigurationConfigurationResourceTipping? = nil,
      @verifone_p400 : Stripe::TerminalConfigurationConfigurationResourceDeviceTypeSpecificConfig? = nil
    )
    end

    # Show invalid properties with the reasons. Usually used together with valid?
    # @return Array for valid properties with the reasons
    def list_invalid_properties : Array(String)
      invalid_properties = Array(String).new
      invalid_properties
    end

    # Check to see if the all the properties in the model are valid
    # @return true if the model is valid
    def valid? : Bool
      _any_of_found = false
      json_string : String = self.to_json
      _any_of_found = self.class.openapi_any_of.any? do |_class|
        _any_of = begin
          _class.from_json(json_string)
        rescue
          nil
        end

        !_any_of.nil? && _any_of.not_nil!.valid?
      end
      return false if !_any_of_found

      true
    end

    # Generates #hash and #== methods from all fields
    # #== @return [Bool]
    # #hash calculates hash code according to all attributes.
    # #hash @return [UInt64] Hash code
    def_equals_and_hash(@deleted, @id, @object, @is_account_default, @livemode, @name, @bbpos_wisepos_e, @offline, @reboot_window, @stripe_s700, @tipping, @verifone_p400)
  end
end
