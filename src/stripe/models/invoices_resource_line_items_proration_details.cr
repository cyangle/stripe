#  Stripe API
#
# The Stripe REST API. Please see https://stripe.com/docs/api for more details.
#
# The version of the OpenAPI document: 2024-06-20
# Contact: dev-platform@stripe.com
# Generated by: https://openapi-generator.tech
#

require "../../core"

require "./invoices_resource_line_items_credited_items"

module Stripe
  #
  class InvoicesResourceLineItemsProrationDetails
    include JSON::Serializable
    include JSON::Serializable::Unmapped
    include OpenApi::Validatable
    include OpenApi::Json

    # Required Properties

    @[JSON::Field(key: "credited_items", type: Stripe::InvoicesResourceLineItemsCreditedItems?, default: nil, required: true, nullable: true, emit_null: true)]
    getter credited_items : Stripe::InvoicesResourceLineItemsCreditedItems? = nil

    # End of Required Properties

    # Initializes the object
    # @param [Hash] attributes Model attributes in the form of hash
    def initialize(
      *,
      # Required properties
      @credited_items : Stripe::InvoicesResourceLineItemsCreditedItems? = nil
    )
    end

    # Show invalid properties with the reasons. Usually used together with valid?
    # @return Array for valid properties with the reasons
    def list_invalid_properties : Array(String)
      invalid_properties = Array(String).new

      unless (_credited_items = @credited_items).nil?
        invalid_properties.concat(_credited_items.list_invalid_properties_for("credited_items")) if _credited_items.is_a?(OpenApi::Validatable)
      end
      invalid_properties
    end

    # Check to see if the all the properties in the model are valid
    # @return true if the model is valid
    def valid? : Bool
      unless (_credited_items = @credited_items).nil?
        return false if _credited_items.is_a?(OpenApi::Validatable) && !_credited_items.valid?
      end

      true
    end

    # Custom attribute writer method checking allowed values (enum).
    # @param [Object] credited_items Object to be assigned
    def credited_items=(new_value : Stripe::InvoicesResourceLineItemsCreditedItems?)
      unless new_value.nil?
        new_value.validate if new_value.is_a?(OpenApi::Validatable)
      end

      @credited_items = new_value
    end

    # Generates #hash and #== methods from all fields
    # #== @return [Bool]
    # #hash calculates hash code according to all attributes.
    # #hash @return [UInt64] Hash code
    def_equals_and_hash(@credited_items)
  end
end
