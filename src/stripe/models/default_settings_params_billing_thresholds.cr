#  Stripe API
#
# The Stripe REST API. Please see https://stripe.com/docs/api for more details.
#
# The version of the OpenAPI document: 2020-08-27
# Contact: dev-platform@stripe.com
# Generated by: https://openapi-generator.tech
#

require "json"
require "time"
require "log"

module Stripe
  # Define thresholds at which an invoice will be sent, and the subscription advanced to a new billing period. Pass an empty string to remove previously-defined thresholds.
  @[JSON::Serializable::Options(emit_nulls: true)]
  class DefaultSettingsParamsBillingThresholds
    include JSON::Serializable
    include JSON::Serializable::Unmapped

    # Optional properties
    # Monetary threshold that triggers the subscription to advance to a new billing period
    @[JSON::Field(key: "amount_gte", type: Int64?, presence: true, ignore_serialize: amount_gte.nil? && !amount_gte_present?)]
    property amount_gte : Int64?

    @[JSON::Field(ignore: true)]
    property? amount_gte_present : Bool = false

    # Indicates if the `billing_cycle_anchor` should be reset when a threshold is reached. If true, `billing_cycle_anchor` will be updated to the date/time the threshold was last reached; otherwise, the value will remain unchanged.
    @[JSON::Field(key: "reset_billing_cycle_anchor", type: Bool?, presence: true, ignore_serialize: reset_billing_cycle_anchor.nil? && !reset_billing_cycle_anchor_present?)]
    property reset_billing_cycle_anchor : Bool?

    @[JSON::Field(ignore: true)]
    property? reset_billing_cycle_anchor_present : Bool = false

    # List of class defined in anyOf (OpenAPI v3)
    def self.openapi_any_of
      [
        Stripe::BillingThresholdsParam,
        String,
      ]
    end

    # Initializes the object
    # @param [Hash] attributes Model attributes in the form of hash
    def initialize(*, @amount_gte : Int64? = nil, @reset_billing_cycle_anchor : Bool? = nil)
    end

    # Show invalid properties with the reasons. Usually used together with valid?
    # @return Array for valid properties with the reasons
    def list_invalid_properties
      invalid_properties = Array(String).new

      invalid_properties
    end

    # Check to see if the all the properties in the model are valid
    # @return true if the model is valid
    def valid?
      _any_of_found = false
      json_string : String = self.to_json
      _any_of_found = self.class.openapi_any_of.any? do |_class|
        _any_of = begin
          _class.from_json(json_string)
        rescue
          nil
        end

        !_any_of.nil? && _any_of.not_nil!.valid?
      end

      if !_any_of_found
        return false
      end

      true
    end

    # Checks equality by comparing each attribute.
    # @param [Object] Object to be compared
    def ==(o)
      return true if self.same?(o)
      self.class == o.class &&
        amount_gte == o.amount_gte &&
        reset_billing_cycle_anchor == o.reset_billing_cycle_anchor
    end

    # @see the `==` method
    # @param [Object] Object to be compared
    def eql?(o)
      self == o
    end

    # Calculates hash code according to all attributes.
    # @return [UInt64] Hash code
    def_hash(@amount_gte, @reset_billing_cycle_anchor)
  end
end
