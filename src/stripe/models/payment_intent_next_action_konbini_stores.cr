#  Stripe API
#
# The Stripe REST API. Please see https://stripe.com/docs/api for more details.
#
# The version of the OpenAPI document: 2022-08-01
# Contact: dev-platform@stripe.com
# Generated by: https://openapi-generator.tech
#

require "json"
require "time"
require "log"

module Stripe
  #
  class PaymentIntentNextActionKonbiniStores
    include JSON::Serializable
    include JSON::Serializable::Unmapped
    include OpenApi::Json

    # Optional properties

    @[JSON::Field(key: "familymart", type: Stripe::PaymentIntentNextActionKonbiniStoresFamilymart?, default: nil, required: false, nullable: true, emit_null: true, presence: true, ignore_serialize: familymart.nil? && !familymart_present?)]
    getter familymart : Stripe::PaymentIntentNextActionKonbiniStoresFamilymart? = nil

    @[JSON::Field(ignore: true)]
    property? familymart_present : Bool = false

    @[JSON::Field(key: "lawson", type: Stripe::PaymentIntentNextActionKonbiniStoresLawson?, default: nil, required: false, nullable: true, emit_null: true, presence: true, ignore_serialize: lawson.nil? && !lawson_present?)]
    getter lawson : Stripe::PaymentIntentNextActionKonbiniStoresLawson? = nil

    @[JSON::Field(ignore: true)]
    property? lawson_present : Bool = false

    @[JSON::Field(key: "ministop", type: Stripe::PaymentIntentNextActionKonbiniStoresMinistop?, default: nil, required: false, nullable: true, emit_null: true, presence: true, ignore_serialize: ministop.nil? && !ministop_present?)]
    getter ministop : Stripe::PaymentIntentNextActionKonbiniStoresMinistop? = nil

    @[JSON::Field(ignore: true)]
    property? ministop_present : Bool = false

    @[JSON::Field(key: "seicomart", type: Stripe::PaymentIntentNextActionKonbiniStoresSeicomart?, default: nil, required: false, nullable: true, emit_null: true, presence: true, ignore_serialize: seicomart.nil? && !seicomart_present?)]
    getter seicomart : Stripe::PaymentIntentNextActionKonbiniStoresSeicomart? = nil

    @[JSON::Field(ignore: true)]
    property? seicomart_present : Bool = false

    # Initializes the object
    # @param [Hash] attributes Model attributes in the form of hash
    def initialize(
      *,
      # Optional properties
      @familymart : Stripe::PaymentIntentNextActionKonbiniStoresFamilymart? = nil,
      @lawson : Stripe::PaymentIntentNextActionKonbiniStoresLawson? = nil,
      @ministop : Stripe::PaymentIntentNextActionKonbiniStoresMinistop? = nil,
      @seicomart : Stripe::PaymentIntentNextActionKonbiniStoresSeicomart? = nil
    )
    end

    # Show invalid properties with the reasons. Usually used together with valid?
    # @return Array for valid properties with the reasons
    def list_invalid_properties
      invalid_properties = Array(String).new
      # This is a model familymart : Stripe::PaymentIntentNextActionKonbiniStoresFamilymart?
      # This is a model lawson : Stripe::PaymentIntentNextActionKonbiniStoresLawson?
      # This is a model ministop : Stripe::PaymentIntentNextActionKonbiniStoresMinistop?
      # This is a model seicomart : Stripe::PaymentIntentNextActionKonbiniStoresSeicomart?

      invalid_properties
    end

    # Check to see if the all the properties in the model are valid
    # @return true if the model is valid
    def valid?
      true
    end

    # Custom attribute writer method checking allowed values (enum).
    # @param [Object] familymart Object to be assigned
    def familymart=(familymart : Stripe::PaymentIntentNextActionKonbiniStoresFamilymart?)
      if familymart.nil?
        return @familymart = nil
      end
      @familymart = familymart
    end

    # Custom attribute writer method checking allowed values (enum).
    # @param [Object] lawson Object to be assigned
    def lawson=(lawson : Stripe::PaymentIntentNextActionKonbiniStoresLawson?)
      if lawson.nil?
        return @lawson = nil
      end
      @lawson = lawson
    end

    # Custom attribute writer method checking allowed values (enum).
    # @param [Object] ministop Object to be assigned
    def ministop=(ministop : Stripe::PaymentIntentNextActionKonbiniStoresMinistop?)
      if ministop.nil?
        return @ministop = nil
      end
      @ministop = ministop
    end

    # Custom attribute writer method checking allowed values (enum).
    # @param [Object] seicomart Object to be assigned
    def seicomart=(seicomart : Stripe::PaymentIntentNextActionKonbiniStoresSeicomart?)
      if seicomart.nil?
        return @seicomart = nil
      end
      @seicomart = seicomart
    end

    # @see the `==` method
    # @param [Object] Object to be compared
    def eql?(o)
      self == o
    end

    # Generates #hash and #== methods from all fields
    # #== @return [Bool]
    # #hash calculates hash code according to all attributes.
    # #hash @return [UInt64] Hash code
    def_equals_and_hash(@familymart, @familymart_present, @lawson, @lawson_present, @ministop, @ministop_present, @seicomart, @seicomart_present)
  end
end
