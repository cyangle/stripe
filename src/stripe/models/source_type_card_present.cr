#  Stripe API
#
# The Stripe REST API. Please see https://stripe.com/docs/api for more details.
#
# The version of the OpenAPI document: 2022-11-15
# Contact: dev-platform@stripe.com
# Generated by: https://openapi-generator.tech
#

require "json"
require "time"
require "log"

module Stripe
  class SourceTypeCardPresent
    include JSON::Serializable
    include JSON::Serializable::Unmapped
    include OpenApi::Validatable
    include OpenApi::Json

    # Optional Properties

    @[JSON::Field(key: "application_cryptogram", type: String?, default: nil, required: false, nullable: false, emit_null: false)]
    getter application_cryptogram : String? = nil

    @[JSON::Field(key: "application_preferred_name", type: String?, default: nil, required: false, nullable: false, emit_null: false)]
    getter application_preferred_name : String? = nil

    @[JSON::Field(key: "authorization_code", type: String?, default: nil, required: false, nullable: true, emit_null: true, presence: true, ignore_serialize: authorization_code.nil? && !authorization_code_present?)]
    getter authorization_code : String? = nil

    @[JSON::Field(ignore: true)]
    property? authorization_code_present : Bool = false

    @[JSON::Field(key: "authorization_response_code", type: String?, default: nil, required: false, nullable: false, emit_null: false)]
    getter authorization_response_code : String? = nil

    @[JSON::Field(key: "brand", type: String?, default: nil, required: false, nullable: true, emit_null: true, presence: true, ignore_serialize: brand.nil? && !brand_present?)]
    getter brand : String? = nil

    @[JSON::Field(ignore: true)]
    property? brand_present : Bool = false

    @[JSON::Field(key: "country", type: String?, default: nil, required: false, nullable: true, emit_null: true, presence: true, ignore_serialize: country.nil? && !country_present?)]
    getter country : String? = nil

    @[JSON::Field(ignore: true)]
    property? country_present : Bool = false

    @[JSON::Field(key: "cvm_type", type: String?, default: nil, required: false, nullable: false, emit_null: false)]
    getter cvm_type : String? = nil

    @[JSON::Field(key: "data_type", type: String?, default: nil, required: false, nullable: true, emit_null: true, presence: true, ignore_serialize: data_type.nil? && !data_type_present?)]
    getter data_type : String? = nil

    @[JSON::Field(ignore: true)]
    property? data_type_present : Bool = false

    @[JSON::Field(key: "dedicated_file_name", type: String?, default: nil, required: false, nullable: false, emit_null: false)]
    getter dedicated_file_name : String? = nil

    @[JSON::Field(key: "emv_auth_data", type: String?, default: nil, required: false, nullable: false, emit_null: false)]
    getter emv_auth_data : String? = nil

    @[JSON::Field(key: "evidence_customer_signature", type: String?, default: nil, required: false, nullable: true, emit_null: true, presence: true, ignore_serialize: evidence_customer_signature.nil? && !evidence_customer_signature_present?)]
    getter evidence_customer_signature : String? = nil

    @[JSON::Field(ignore: true)]
    property? evidence_customer_signature_present : Bool = false

    @[JSON::Field(key: "evidence_transaction_certificate", type: String?, default: nil, required: false, nullable: true, emit_null: true, presence: true, ignore_serialize: evidence_transaction_certificate.nil? && !evidence_transaction_certificate_present?)]
    getter evidence_transaction_certificate : String? = nil

    @[JSON::Field(ignore: true)]
    property? evidence_transaction_certificate_present : Bool = false

    @[JSON::Field(key: "exp_month", type: Int64?, default: nil, required: false, nullable: true, emit_null: true, presence: true, ignore_serialize: exp_month.nil? && !exp_month_present?)]
    getter exp_month : Int64? = nil

    @[JSON::Field(ignore: true)]
    property? exp_month_present : Bool = false

    @[JSON::Field(key: "exp_year", type: Int64?, default: nil, required: false, nullable: true, emit_null: true, presence: true, ignore_serialize: exp_year.nil? && !exp_year_present?)]
    getter exp_year : Int64? = nil

    @[JSON::Field(ignore: true)]
    property? exp_year_present : Bool = false

    @[JSON::Field(key: "fingerprint", type: String?, default: nil, required: false, nullable: false, emit_null: false)]
    getter fingerprint : String? = nil

    @[JSON::Field(key: "funding", type: String?, default: nil, required: false, nullable: true, emit_null: true, presence: true, ignore_serialize: funding.nil? && !funding_present?)]
    getter funding : String? = nil

    @[JSON::Field(ignore: true)]
    property? funding_present : Bool = false

    @[JSON::Field(key: "last4", type: String?, default: nil, required: false, nullable: true, emit_null: true, presence: true, ignore_serialize: last4.nil? && !last4_present?)]
    getter last4 : String? = nil

    @[JSON::Field(ignore: true)]
    property? last4_present : Bool = false

    @[JSON::Field(key: "pos_device_id", type: String?, default: nil, required: false, nullable: true, emit_null: true, presence: true, ignore_serialize: pos_device_id.nil? && !pos_device_id_present?)]
    getter pos_device_id : String? = nil

    @[JSON::Field(ignore: true)]
    property? pos_device_id_present : Bool = false

    @[JSON::Field(key: "pos_entry_mode", type: String?, default: nil, required: false, nullable: false, emit_null: false)]
    getter pos_entry_mode : String? = nil

    @[JSON::Field(key: "read_method", type: String?, default: nil, required: false, nullable: true, emit_null: true, presence: true, ignore_serialize: read_method.nil? && !read_method_present?)]
    getter read_method : String? = nil

    @[JSON::Field(ignore: true)]
    property? read_method_present : Bool = false

    @[JSON::Field(key: "reader", type: String?, default: nil, required: false, nullable: true, emit_null: true, presence: true, ignore_serialize: reader.nil? && !reader_present?)]
    getter reader : String? = nil

    @[JSON::Field(ignore: true)]
    property? reader_present : Bool = false

    @[JSON::Field(key: "terminal_verification_results", type: String?, default: nil, required: false, nullable: false, emit_null: false)]
    getter terminal_verification_results : String? = nil

    @[JSON::Field(key: "transaction_status_information", type: String?, default: nil, required: false, nullable: false, emit_null: false)]
    getter transaction_status_information : String? = nil

    # Initializes the object
    # @param [Hash] attributes Model attributes in the form of hash
    def initialize(
      *,
      # Optional properties
      @application_cryptogram : String? = nil,
      @application_preferred_name : String? = nil,
      @authorization_code : String? = nil,
      @authorization_response_code : String? = nil,
      @brand : String? = nil,
      @country : String? = nil,
      @cvm_type : String? = nil,
      @data_type : String? = nil,
      @dedicated_file_name : String? = nil,
      @emv_auth_data : String? = nil,
      @evidence_customer_signature : String? = nil,
      @evidence_transaction_certificate : String? = nil,
      @exp_month : Int64? = nil,
      @exp_year : Int64? = nil,
      @fingerprint : String? = nil,
      @funding : String? = nil,
      @last4 : String? = nil,
      @pos_device_id : String? = nil,
      @pos_entry_mode : String? = nil,
      @read_method : String? = nil,
      @reader : String? = nil,
      @terminal_verification_results : String? = nil,
      @transaction_status_information : String? = nil
    )
    end

    # Show invalid properties with the reasons. Usually used together with valid?
    # @return Array for valid properties with the reasons
    def list_invalid_properties : Array(String)
      invalid_properties = Array(String).new

      invalid_properties
    end

    # Check to see if the all the properties in the model are valid
    # @return true if the model is valid
    def valid? : Bool
      true
    end

    # Custom attribute writer method checking allowed values (enum).
    # @param [Object] application_cryptogram Object to be assigned
    def application_cryptogram=(new_value : String?)
      @application_cryptogram = new_value
    end

    # Custom attribute writer method checking allowed values (enum).
    # @param [Object] application_preferred_name Object to be assigned
    def application_preferred_name=(new_value : String?)
      @application_preferred_name = new_value
    end

    # Custom attribute writer method checking allowed values (enum).
    # @param [Object] authorization_code Object to be assigned
    def authorization_code=(new_value : String?)
      @authorization_code = new_value
    end

    # Custom attribute writer method checking allowed values (enum).
    # @param [Object] authorization_response_code Object to be assigned
    def authorization_response_code=(new_value : String?)
      @authorization_response_code = new_value
    end

    # Custom attribute writer method checking allowed values (enum).
    # @param [Object] brand Object to be assigned
    def brand=(new_value : String?)
      @brand = new_value
    end

    # Custom attribute writer method checking allowed values (enum).
    # @param [Object] country Object to be assigned
    def country=(new_value : String?)
      @country = new_value
    end

    # Custom attribute writer method checking allowed values (enum).
    # @param [Object] cvm_type Object to be assigned
    def cvm_type=(new_value : String?)
      @cvm_type = new_value
    end

    # Custom attribute writer method checking allowed values (enum).
    # @param [Object] data_type Object to be assigned
    def data_type=(new_value : String?)
      @data_type = new_value
    end

    # Custom attribute writer method checking allowed values (enum).
    # @param [Object] dedicated_file_name Object to be assigned
    def dedicated_file_name=(new_value : String?)
      @dedicated_file_name = new_value
    end

    # Custom attribute writer method checking allowed values (enum).
    # @param [Object] emv_auth_data Object to be assigned
    def emv_auth_data=(new_value : String?)
      @emv_auth_data = new_value
    end

    # Custom attribute writer method checking allowed values (enum).
    # @param [Object] evidence_customer_signature Object to be assigned
    def evidence_customer_signature=(new_value : String?)
      @evidence_customer_signature = new_value
    end

    # Custom attribute writer method checking allowed values (enum).
    # @param [Object] evidence_transaction_certificate Object to be assigned
    def evidence_transaction_certificate=(new_value : String?)
      @evidence_transaction_certificate = new_value
    end

    # Custom attribute writer method checking allowed values (enum).
    # @param [Object] exp_month Object to be assigned
    def exp_month=(new_value : Int64?)
      @exp_month = new_value
    end

    # Custom attribute writer method checking allowed values (enum).
    # @param [Object] exp_year Object to be assigned
    def exp_year=(new_value : Int64?)
      @exp_year = new_value
    end

    # Custom attribute writer method checking allowed values (enum).
    # @param [Object] fingerprint Object to be assigned
    def fingerprint=(new_value : String?)
      @fingerprint = new_value
    end

    # Custom attribute writer method checking allowed values (enum).
    # @param [Object] funding Object to be assigned
    def funding=(new_value : String?)
      @funding = new_value
    end

    # Custom attribute writer method checking allowed values (enum).
    # @param [Object] last4 Object to be assigned
    def last4=(new_value : String?)
      @last4 = new_value
    end

    # Custom attribute writer method checking allowed values (enum).
    # @param [Object] pos_device_id Object to be assigned
    def pos_device_id=(new_value : String?)
      @pos_device_id = new_value
    end

    # Custom attribute writer method checking allowed values (enum).
    # @param [Object] pos_entry_mode Object to be assigned
    def pos_entry_mode=(new_value : String?)
      @pos_entry_mode = new_value
    end

    # Custom attribute writer method checking allowed values (enum).
    # @param [Object] read_method Object to be assigned
    def read_method=(new_value : String?)
      @read_method = new_value
    end

    # Custom attribute writer method checking allowed values (enum).
    # @param [Object] reader Object to be assigned
    def reader=(new_value : String?)
      @reader = new_value
    end

    # Custom attribute writer method checking allowed values (enum).
    # @param [Object] terminal_verification_results Object to be assigned
    def terminal_verification_results=(new_value : String?)
      @terminal_verification_results = new_value
    end

    # Custom attribute writer method checking allowed values (enum).
    # @param [Object] transaction_status_information Object to be assigned
    def transaction_status_information=(new_value : String?)
      @transaction_status_information = new_value
    end

    # Generates #hash and #== methods from all fields
    # #== @return [Bool]
    # #hash calculates hash code according to all attributes.
    # #hash @return [UInt64] Hash code
    def_equals_and_hash(@application_cryptogram, @application_preferred_name, @authorization_code, @authorization_code_present, @authorization_response_code, @brand, @brand_present, @country, @country_present, @cvm_type, @data_type, @data_type_present, @dedicated_file_name, @emv_auth_data, @evidence_customer_signature, @evidence_customer_signature_present, @evidence_transaction_certificate, @evidence_transaction_certificate_present, @exp_month, @exp_month_present, @exp_year, @exp_year_present, @fingerprint, @funding, @funding_present, @last4, @last4_present, @pos_device_id, @pos_device_id_present, @pos_entry_mode, @read_method, @read_method_present, @reader, @reader_present, @terminal_verification_results, @transaction_status_information)
  end
end
