#  Stripe API
#
# The Stripe REST API. Please see https://stripe.com/docs/api for more details.
#
# The version of the OpenAPI document: 2024-06-20
# Contact: dev-platform@stripe.com
# Generated by: https://openapi-generator.tech
#

require "../../core"

require "./invoiceitem_discounts_inner"
require "./plan"
require "./price"
require "./subscription_item"
require "./subscription_item_billing_thresholds"
require "./tax_rate"

module Stripe
  # The subscription item that generated this line item. Left empty if the line item is not an explicit result of a subscription.
  class LineItemSubscriptionItem
    include JSON::Serializable
    include JSON::Serializable::Unmapped
    include OpenApi::Validatable
    include OpenApi::Json

    # Required Properties

    @[JSON::Field(key: "billing_thresholds", type: Stripe::SubscriptionItemBillingThresholds?, default: nil, required: true, nullable: false, emit_null: false)]
    property billing_thresholds : Stripe::SubscriptionItemBillingThresholds? = nil

    # Time at which the object was created. Measured in seconds since the Unix epoch.
    @[JSON::Field(key: "created", type: Int64?, default: nil, required: true, nullable: false, emit_null: false)]
    property created : Int64? = nil

    # The discounts applied to the subscription item. Subscription item discounts are applied before subscription discounts. Use `expand[]=discounts` to expand each discount.
    @[JSON::Field(key: "discounts", type: Array(Stripe::InvoiceitemDiscountsInner)?, default: nil, required: true, nullable: false, emit_null: false)]
    property discounts : Array(Stripe::InvoiceitemDiscountsInner)? = nil

    # Unique identifier for the object.
    @[JSON::Field(key: "id", type: String?, default: nil, required: true, nullable: false, emit_null: false)]
    property id : String? = nil
    MAX_LENGTH_FOR_ID = 5000

    @[JSON::Field(key: "metadata", type: Hash(String, String)?, default: nil, required: true, nullable: false, emit_null: false)]
    property metadata : Hash(String, String)? = nil

    # String representing the object's type. Objects of the same type share the same value.
    @[JSON::Field(key: "object", type: String?, default: nil, required: true, nullable: false, emit_null: false)]
    property object : String? = nil
    ERROR_MESSAGE_FOR_OBJECT = "invalid value for \"object\", must be one of [subscription_item]."
    VALID_VALUES_FOR_OBJECT  = String.static_array("subscription_item")

    @[JSON::Field(key: "plan", type: Stripe::Plan?, default: nil, required: true, nullable: false, emit_null: false)]
    property plan : Stripe::Plan? = nil

    @[JSON::Field(key: "price", type: Stripe::Price?, default: nil, required: true, nullable: false, emit_null: false)]
    property price : Stripe::Price? = nil

    # The `subscription` this `subscription_item` belongs to.
    @[JSON::Field(key: "subscription", type: String?, default: nil, required: true, nullable: false, emit_null: false)]
    property subscription : String? = nil
    MAX_LENGTH_FOR_SUBSCRIPTION = 5000

    # The tax rates which apply to this `subscription_item`. When set, the `default_tax_rates` on the subscription do not apply to this `subscription_item`.
    @[JSON::Field(key: "tax_rates", type: Array(Stripe::TaxRate)?, default: nil, required: true, nullable: true, emit_null: true)]
    property tax_rates : Array(Stripe::TaxRate)? = nil

    # End of Required Properties

    # Optional Properties

    # The [quantity](https://stripe.com/docs/subscriptions/quantities) of the plan to which the customer should be subscribed.
    @[JSON::Field(key: "quantity", type: Int64?, default: nil, required: false, nullable: false, emit_null: false)]
    property quantity : Int64? = nil

    # List of class defined in anyOf (OpenAPI v3)
    def self.openapi_any_of
      [
        String,
        Stripe::SubscriptionItem,
      ]
    end

    # Initializes the object
    # @param [Hash] attributes Model attributes in the form of hash
    def initialize(
      *,
      # Required properties
      @billing_thresholds : Stripe::SubscriptionItemBillingThresholds? = nil,
      @created : Int64? = nil,
      @discounts : Array(Stripe::InvoiceitemDiscountsInner)? = nil,
      @id : String? = nil,
      @metadata : Hash(String, String)? = nil,
      @object : String? = nil,
      @plan : Stripe::Plan? = nil,
      @price : Stripe::Price? = nil,
      @subscription : String? = nil,
      @tax_rates : Array(Stripe::TaxRate)? = nil,
      # Optional properties
      @quantity : Int64? = nil
    )
    end

    # Show invalid properties with the reasons. Usually used together with valid?
    # @return Array for valid properties with the reasons
    def list_invalid_properties : Array(String)
      invalid_properties = Array(String).new
      invalid_properties
    end

    # Check to see if the all the properties in the model are valid
    # @return true if the model is valid
    def valid? : Bool
      _any_of_found = false
      json_string : String = self.to_json
      _any_of_found = self.class.openapi_any_of.any? do |_class|
        _any_of = begin
          _class.from_json(json_string)
        rescue
          nil
        end

        !_any_of.nil? && _any_of.not_nil!.valid?
      end
      return false if !_any_of_found

      true
    end

    # Generates #hash and #== methods from all fields
    # #== @return [Bool]
    # #hash calculates hash code according to all attributes.
    # #hash @return [UInt64] Hash code
    def_equals_and_hash(@billing_thresholds, @created, @discounts, @id, @metadata, @object, @plan, @price, @subscription, @tax_rates, @quantity)
  end
end
