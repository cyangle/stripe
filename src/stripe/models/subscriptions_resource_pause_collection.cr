#  Stripe API
#
# The Stripe REST API. Please see https://stripe.com/docs/api for more details.
#
# The version of the OpenAPI document: 2022-11-15
# Contact: dev-platform@stripe.com
# Generated by: https://openapi-generator.tech
#

require "json"
require "time"
require "log"

module Stripe
  # The Pause Collection settings determine how we will pause collection for this subscription and for how long the subscription should be paused.
  class SubscriptionsResourcePauseCollection
    include JSON::Serializable
    include JSON::Serializable::Unmapped
    include OpenApi::Validatable
    include OpenApi::Json

    # Required Properties

    # The payment collection behavior for this subscription while paused. One of `keep_as_draft`, `mark_uncollectible`, or `void`.
    @[JSON::Field(key: "behavior", type: String?, default: nil, required: true, nullable: false, emit_null: false)]
    getter behavior : String? = nil
    ERROR_MESSAGE_FOR_BEHAVIOR = "invalid value for \"behavior\", must be one of [keep_as_draft, mark_uncollectible, void]."
    VALID_VALUES_FOR_BEHAVIOR  = String.static_array("keep_as_draft", "mark_uncollectible", "void")

    # End of Required Properties

    # Optional Properties

    # The time after which the subscription will resume collecting payments.
    @[JSON::Field(key: "resumes_at", type: Int64?, default: nil, required: false, nullable: true, emit_null: true, presence: true, ignore_serialize: resumes_at.nil? && !resumes_at_present?)]
    getter resumes_at : Int64? = nil

    @[JSON::Field(ignore: true)]
    property? resumes_at_present : Bool = false

    # Initializes the object
    # @param [Hash] attributes Model attributes in the form of hash
    def initialize(
      *,
      # Required properties
      @behavior : String? = nil,
      # Optional properties
      @resumes_at : Int64? = nil
    )
    end

    # Show invalid properties with the reasons. Usually used together with valid?
    # @return Array for valid properties with the reasons
    def list_invalid_properties : Array(String)
      invalid_properties = Array(String).new

      invalid_properties.push("\"behavior\" is required and cannot be null") if @behavior.nil?

      unless (_behavior = @behavior).nil?
        invalid_properties.push(ERROR_MESSAGE_FOR_BEHAVIOR) unless OpenApi::EnumValidator.valid?(_behavior, VALID_VALUES_FOR_BEHAVIOR)
      end

      invalid_properties
    end

    # Check to see if the all the properties in the model are valid
    # @return true if the model is valid
    def valid? : Bool
      return false if @behavior.nil?
      unless (_behavior = @behavior).nil?
        return false unless OpenApi::EnumValidator.valid?(_behavior, VALID_VALUES_FOR_BEHAVIOR)
      end

      true
    end

    # Custom attribute writer method checking allowed values (enum).
    # @param [Object] behavior Object to be assigned
    def behavior=(new_value : String?)
      raise ArgumentError.new("\"behavior\" is required and cannot be null") if new_value.nil?
      unless new_value.nil?
        OpenApi::EnumValidator.validate("behavior", new_value, VALID_VALUES_FOR_BEHAVIOR)
      end

      @behavior = new_value
    end

    # Custom attribute writer method checking allowed values (enum).
    # @param [Object] resumes_at Object to be assigned
    def resumes_at=(new_value : Int64?)
      @resumes_at = new_value
    end

    # Generates #hash and #== methods from all fields
    # #== @return [Bool]
    # #hash calculates hash code according to all attributes.
    # #hash @return [UInt64] Hash code
    def_equals_and_hash(@behavior, @resumes_at, @resumes_at_present)
  end
end
