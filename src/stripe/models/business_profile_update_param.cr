#  Stripe API
#
# The Stripe REST API. Please see https://stripe.com/docs/api for more details.
#
# The version of the OpenAPI document: 2022-08-01
# Contact: dev-platform@stripe.com
# Generated by: https://openapi-generator.tech
#

require "json"
require "time"
require "log"

module Stripe
  # The business information shown to customers in the portal.
  class BusinessProfileUpdateParam
    include JSON::Serializable
    include JSON::Serializable::Unmapped
    include OpenApi::Json

    # Optional properties

    @[JSON::Field(key: "headline", type: String?, default: nil, required: false, nullable: false, emit_null: false)]
    getter headline : String? = nil

    @[JSON::Field(key: "privacy_policy_url", type: Stripe::BusinessProfileSpecsSupportUrl?, default: nil, required: false, nullable: false, emit_null: false)]
    getter privacy_policy_url : Stripe::BusinessProfileSpecsSupportUrl? = nil

    @[JSON::Field(key: "terms_of_service_url", type: Stripe::BusinessProfileSpecsSupportUrl?, default: nil, required: false, nullable: false, emit_null: false)]
    getter terms_of_service_url : Stripe::BusinessProfileSpecsSupportUrl? = nil

    # Initializes the object
    # @param [Hash] attributes Model attributes in the form of hash
    def initialize(
      *,
      # Optional properties
      @headline : String? = nil,
      @privacy_policy_url : Stripe::BusinessProfileSpecsSupportUrl? = nil,
      @terms_of_service_url : Stripe::BusinessProfileSpecsSupportUrl? = nil
    )
    end

    # Show invalid properties with the reasons. Usually used together with valid?
    # @return Array for valid properties with the reasons
    def list_invalid_properties
      invalid_properties = Array(String).new
      if _headline = @headline
        if _headline.to_s.size > 60
          invalid_properties.push("invalid value for \"headline\", the character length must be smaller than or equal to 60.")
        end
      end
      # This is a model privacy_policy_url : Stripe::BusinessProfileSpecsSupportUrl?
      # This is a model terms_of_service_url : Stripe::BusinessProfileSpecsSupportUrl?

      invalid_properties
    end

    # Check to see if the all the properties in the model are valid
    # @return true if the model is valid
    def valid?
      if _headline = @headline
        return false if _headline.to_s.size > 60
      end

      true
    end

    # Custom attribute writer method checking allowed values (enum).
    # @param [Object] headline Object to be assigned
    def headline=(headline : String?)
      if headline.nil?
        return @headline = nil
      end
      _headline = headline.not_nil!
      if _headline.to_s.size > 60
        raise ArgumentError.new("invalid value for \"headline\", the character length must be smaller than or equal to 60.")
      end

      @headline = headline
    end

    # Custom attribute writer method checking allowed values (enum).
    # @param [Object] privacy_policy_url Object to be assigned
    def privacy_policy_url=(privacy_policy_url : Stripe::BusinessProfileSpecsSupportUrl?)
      if privacy_policy_url.nil?
        return @privacy_policy_url = nil
      end
      @privacy_policy_url = privacy_policy_url
    end

    # Custom attribute writer method checking allowed values (enum).
    # @param [Object] terms_of_service_url Object to be assigned
    def terms_of_service_url=(terms_of_service_url : Stripe::BusinessProfileSpecsSupportUrl?)
      if terms_of_service_url.nil?
        return @terms_of_service_url = nil
      end
      @terms_of_service_url = terms_of_service_url
    end

    # @see the `==` method
    # @param [Object] Object to be compared
    def eql?(o)
      self == o
    end

    # Generates #hash and #== methods from all fields
    # #== @return [Bool]
    # #hash calculates hash code according to all attributes.
    # #hash @return [UInt64] Hash code
    def_equals_and_hash(@headline, @privacy_policy_url, @terms_of_service_url)
  end
end
