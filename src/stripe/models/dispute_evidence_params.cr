#  Stripe API
#
# The Stripe REST API. Please see https://stripe.com/docs/api for more details.
#
# The version of the OpenAPI document: 2020-08-27
# Contact: dev-platform@stripe.com
# Generated by: https://openapi-generator.tech
#

require "json"
require "time"
require "log"

module Stripe
  # Evidence to upload, to respond to a dispute. Updating any field in the hash will submit all fields in the hash for review. The combined character count of all fields is limited to 150,000.
  @[JSON::Serializable::Options(emit_nulls: true)]
  class DisputeEvidenceParams
    include JSON::Serializable
    include JSON::Serializable::Unmapped

    # Optional properties

    @[JSON::Field(key: "access_activity_log", type: String?, presence: true, ignore_serialize: access_activity_log.nil? && !access_activity_log_present?)]
    getter access_activity_log : String?

    @[JSON::Field(ignore: true)]
    property? access_activity_log_present : Bool = false

    @[JSON::Field(key: "billing_address", type: String?, presence: true, ignore_serialize: billing_address.nil? && !billing_address_present?)]
    getter billing_address : String?

    @[JSON::Field(ignore: true)]
    property? billing_address_present : Bool = false

    @[JSON::Field(key: "cancellation_policy", type: String?, presence: true, ignore_serialize: cancellation_policy.nil? && !cancellation_policy_present?)]
    property cancellation_policy : String?

    @[JSON::Field(ignore: true)]
    property? cancellation_policy_present : Bool = false

    @[JSON::Field(key: "cancellation_policy_disclosure", type: String?, presence: true, ignore_serialize: cancellation_policy_disclosure.nil? && !cancellation_policy_disclosure_present?)]
    getter cancellation_policy_disclosure : String?

    @[JSON::Field(ignore: true)]
    property? cancellation_policy_disclosure_present : Bool = false

    @[JSON::Field(key: "cancellation_rebuttal", type: String?, presence: true, ignore_serialize: cancellation_rebuttal.nil? && !cancellation_rebuttal_present?)]
    getter cancellation_rebuttal : String?

    @[JSON::Field(ignore: true)]
    property? cancellation_rebuttal_present : Bool = false

    @[JSON::Field(key: "customer_communication", type: String?, presence: true, ignore_serialize: customer_communication.nil? && !customer_communication_present?)]
    property customer_communication : String?

    @[JSON::Field(ignore: true)]
    property? customer_communication_present : Bool = false

    @[JSON::Field(key: "customer_email_address", type: String?, presence: true, ignore_serialize: customer_email_address.nil? && !customer_email_address_present?)]
    getter customer_email_address : String?

    @[JSON::Field(ignore: true)]
    property? customer_email_address_present : Bool = false

    @[JSON::Field(key: "customer_name", type: String?, presence: true, ignore_serialize: customer_name.nil? && !customer_name_present?)]
    getter customer_name : String?

    @[JSON::Field(ignore: true)]
    property? customer_name_present : Bool = false

    @[JSON::Field(key: "customer_purchase_ip", type: String?, presence: true, ignore_serialize: customer_purchase_ip.nil? && !customer_purchase_ip_present?)]
    getter customer_purchase_ip : String?

    @[JSON::Field(ignore: true)]
    property? customer_purchase_ip_present : Bool = false

    @[JSON::Field(key: "customer_signature", type: String?, presence: true, ignore_serialize: customer_signature.nil? && !customer_signature_present?)]
    property customer_signature : String?

    @[JSON::Field(ignore: true)]
    property? customer_signature_present : Bool = false

    @[JSON::Field(key: "duplicate_charge_documentation", type: String?, presence: true, ignore_serialize: duplicate_charge_documentation.nil? && !duplicate_charge_documentation_present?)]
    property duplicate_charge_documentation : String?

    @[JSON::Field(ignore: true)]
    property? duplicate_charge_documentation_present : Bool = false

    @[JSON::Field(key: "duplicate_charge_explanation", type: String?, presence: true, ignore_serialize: duplicate_charge_explanation.nil? && !duplicate_charge_explanation_present?)]
    getter duplicate_charge_explanation : String?

    @[JSON::Field(ignore: true)]
    property? duplicate_charge_explanation_present : Bool = false

    @[JSON::Field(key: "duplicate_charge_id", type: String?, presence: true, ignore_serialize: duplicate_charge_id.nil? && !duplicate_charge_id_present?)]
    getter duplicate_charge_id : String?

    @[JSON::Field(ignore: true)]
    property? duplicate_charge_id_present : Bool = false

    @[JSON::Field(key: "product_description", type: String?, presence: true, ignore_serialize: product_description.nil? && !product_description_present?)]
    getter product_description : String?

    @[JSON::Field(ignore: true)]
    property? product_description_present : Bool = false

    @[JSON::Field(key: "receipt", type: String?, presence: true, ignore_serialize: receipt.nil? && !receipt_present?)]
    property receipt : String?

    @[JSON::Field(ignore: true)]
    property? receipt_present : Bool = false

    @[JSON::Field(key: "refund_policy", type: String?, presence: true, ignore_serialize: refund_policy.nil? && !refund_policy_present?)]
    property refund_policy : String?

    @[JSON::Field(ignore: true)]
    property? refund_policy_present : Bool = false

    @[JSON::Field(key: "refund_policy_disclosure", type: String?, presence: true, ignore_serialize: refund_policy_disclosure.nil? && !refund_policy_disclosure_present?)]
    getter refund_policy_disclosure : String?

    @[JSON::Field(ignore: true)]
    property? refund_policy_disclosure_present : Bool = false

    @[JSON::Field(key: "refund_refusal_explanation", type: String?, presence: true, ignore_serialize: refund_refusal_explanation.nil? && !refund_refusal_explanation_present?)]
    getter refund_refusal_explanation : String?

    @[JSON::Field(ignore: true)]
    property? refund_refusal_explanation_present : Bool = false

    @[JSON::Field(key: "service_date", type: String?, presence: true, ignore_serialize: service_date.nil? && !service_date_present?)]
    getter service_date : String?

    @[JSON::Field(ignore: true)]
    property? service_date_present : Bool = false

    @[JSON::Field(key: "service_documentation", type: String?, presence: true, ignore_serialize: service_documentation.nil? && !service_documentation_present?)]
    property service_documentation : String?

    @[JSON::Field(ignore: true)]
    property? service_documentation_present : Bool = false

    @[JSON::Field(key: "shipping_address", type: String?, presence: true, ignore_serialize: shipping_address.nil? && !shipping_address_present?)]
    getter shipping_address : String?

    @[JSON::Field(ignore: true)]
    property? shipping_address_present : Bool = false

    @[JSON::Field(key: "shipping_carrier", type: String?, presence: true, ignore_serialize: shipping_carrier.nil? && !shipping_carrier_present?)]
    getter shipping_carrier : String?

    @[JSON::Field(ignore: true)]
    property? shipping_carrier_present : Bool = false

    @[JSON::Field(key: "shipping_date", type: String?, presence: true, ignore_serialize: shipping_date.nil? && !shipping_date_present?)]
    getter shipping_date : String?

    @[JSON::Field(ignore: true)]
    property? shipping_date_present : Bool = false

    @[JSON::Field(key: "shipping_documentation", type: String?, presence: true, ignore_serialize: shipping_documentation.nil? && !shipping_documentation_present?)]
    property shipping_documentation : String?

    @[JSON::Field(ignore: true)]
    property? shipping_documentation_present : Bool = false

    @[JSON::Field(key: "shipping_tracking_number", type: String?, presence: true, ignore_serialize: shipping_tracking_number.nil? && !shipping_tracking_number_present?)]
    getter shipping_tracking_number : String?

    @[JSON::Field(ignore: true)]
    property? shipping_tracking_number_present : Bool = false

    @[JSON::Field(key: "uncategorized_file", type: String?, presence: true, ignore_serialize: uncategorized_file.nil? && !uncategorized_file_present?)]
    property uncategorized_file : String?

    @[JSON::Field(ignore: true)]
    property? uncategorized_file_present : Bool = false

    @[JSON::Field(key: "uncategorized_text", type: String?, presence: true, ignore_serialize: uncategorized_text.nil? && !uncategorized_text_present?)]
    getter uncategorized_text : String?

    @[JSON::Field(ignore: true)]
    property? uncategorized_text_present : Bool = false

    # Initializes the object
    # @param [Hash] attributes Model attributes in the form of hash
    def initialize(
      *,
      # Optional properties
      @access_activity_log : String? = nil,
      @billing_address : String? = nil,
      @cancellation_policy : String? = nil,
      @cancellation_policy_disclosure : String? = nil,
      @cancellation_rebuttal : String? = nil,
      @customer_communication : String? = nil,
      @customer_email_address : String? = nil,
      @customer_name : String? = nil,
      @customer_purchase_ip : String? = nil,
      @customer_signature : String? = nil,
      @duplicate_charge_documentation : String? = nil,
      @duplicate_charge_explanation : String? = nil,
      @duplicate_charge_id : String? = nil,
      @product_description : String? = nil,
      @receipt : String? = nil,
      @refund_policy : String? = nil,
      @refund_policy_disclosure : String? = nil,
      @refund_refusal_explanation : String? = nil,
      @service_date : String? = nil,
      @service_documentation : String? = nil,
      @shipping_address : String? = nil,
      @shipping_carrier : String? = nil,
      @shipping_date : String? = nil,
      @shipping_documentation : String? = nil,
      @shipping_tracking_number : String? = nil,
      @uncategorized_file : String? = nil,
      @uncategorized_text : String? = nil
    )
    end

    # Show invalid properties with the reasons. Usually used together with valid?
    # @return Array for valid properties with the reasons
    def list_invalid_properties
      invalid_properties = Array(String).new

      if !@access_activity_log.nil? && @access_activity_log.to_s.size > 20000
        invalid_properties.push("invalid value for \"access_activity_log\", the character length must be smaller than or equal to 20000.")
      end

      if !@billing_address.nil? && @billing_address.to_s.size > 5000
        invalid_properties.push("invalid value for \"billing_address\", the character length must be smaller than or equal to 5000.")
      end

      if !@cancellation_policy_disclosure.nil? && @cancellation_policy_disclosure.to_s.size > 20000
        invalid_properties.push("invalid value for \"cancellation_policy_disclosure\", the character length must be smaller than or equal to 20000.")
      end

      if !@cancellation_rebuttal.nil? && @cancellation_rebuttal.to_s.size > 20000
        invalid_properties.push("invalid value for \"cancellation_rebuttal\", the character length must be smaller than or equal to 20000.")
      end

      if !@customer_email_address.nil? && @customer_email_address.to_s.size > 5000
        invalid_properties.push("invalid value for \"customer_email_address\", the character length must be smaller than or equal to 5000.")
      end

      if !@customer_name.nil? && @customer_name.to_s.size > 5000
        invalid_properties.push("invalid value for \"customer_name\", the character length must be smaller than or equal to 5000.")
      end

      if !@customer_purchase_ip.nil? && @customer_purchase_ip.to_s.size > 5000
        invalid_properties.push("invalid value for \"customer_purchase_ip\", the character length must be smaller than or equal to 5000.")
      end

      if !@duplicate_charge_explanation.nil? && @duplicate_charge_explanation.to_s.size > 20000
        invalid_properties.push("invalid value for \"duplicate_charge_explanation\", the character length must be smaller than or equal to 20000.")
      end

      if !@duplicate_charge_id.nil? && @duplicate_charge_id.to_s.size > 5000
        invalid_properties.push("invalid value for \"duplicate_charge_id\", the character length must be smaller than or equal to 5000.")
      end

      if !@product_description.nil? && @product_description.to_s.size > 20000
        invalid_properties.push("invalid value for \"product_description\", the character length must be smaller than or equal to 20000.")
      end

      if !@refund_policy_disclosure.nil? && @refund_policy_disclosure.to_s.size > 20000
        invalid_properties.push("invalid value for \"refund_policy_disclosure\", the character length must be smaller than or equal to 20000.")
      end

      if !@refund_refusal_explanation.nil? && @refund_refusal_explanation.to_s.size > 20000
        invalid_properties.push("invalid value for \"refund_refusal_explanation\", the character length must be smaller than or equal to 20000.")
      end

      if !@service_date.nil? && @service_date.to_s.size > 5000
        invalid_properties.push("invalid value for \"service_date\", the character length must be smaller than or equal to 5000.")
      end

      if !@shipping_address.nil? && @shipping_address.to_s.size > 5000
        invalid_properties.push("invalid value for \"shipping_address\", the character length must be smaller than or equal to 5000.")
      end

      if !@shipping_carrier.nil? && @shipping_carrier.to_s.size > 5000
        invalid_properties.push("invalid value for \"shipping_carrier\", the character length must be smaller than or equal to 5000.")
      end

      if !@shipping_date.nil? && @shipping_date.to_s.size > 5000
        invalid_properties.push("invalid value for \"shipping_date\", the character length must be smaller than or equal to 5000.")
      end

      if !@shipping_tracking_number.nil? && @shipping_tracking_number.to_s.size > 5000
        invalid_properties.push("invalid value for \"shipping_tracking_number\", the character length must be smaller than or equal to 5000.")
      end

      if !@uncategorized_text.nil? && @uncategorized_text.to_s.size > 20000
        invalid_properties.push("invalid value for \"uncategorized_text\", the character length must be smaller than or equal to 20000.")
      end

      invalid_properties
    end

    # Check to see if the all the properties in the model are valid
    # @return true if the model is valid
    def valid?
      return false if !@access_activity_log.nil? && @access_activity_log.to_s.size > 20000
      return false if !@billing_address.nil? && @billing_address.to_s.size > 5000
      return false if !@cancellation_policy_disclosure.nil? && @cancellation_policy_disclosure.to_s.size > 20000
      return false if !@cancellation_rebuttal.nil? && @cancellation_rebuttal.to_s.size > 20000
      return false if !@customer_email_address.nil? && @customer_email_address.to_s.size > 5000
      return false if !@customer_name.nil? && @customer_name.to_s.size > 5000
      return false if !@customer_purchase_ip.nil? && @customer_purchase_ip.to_s.size > 5000
      return false if !@duplicate_charge_explanation.nil? && @duplicate_charge_explanation.to_s.size > 20000
      return false if !@duplicate_charge_id.nil? && @duplicate_charge_id.to_s.size > 5000
      return false if !@product_description.nil? && @product_description.to_s.size > 20000
      return false if !@refund_policy_disclosure.nil? && @refund_policy_disclosure.to_s.size > 20000
      return false if !@refund_refusal_explanation.nil? && @refund_refusal_explanation.to_s.size > 20000
      return false if !@service_date.nil? && @service_date.to_s.size > 5000
      return false if !@shipping_address.nil? && @shipping_address.to_s.size > 5000
      return false if !@shipping_carrier.nil? && @shipping_carrier.to_s.size > 5000
      return false if !@shipping_date.nil? && @shipping_date.to_s.size > 5000
      return false if !@shipping_tracking_number.nil? && @shipping_tracking_number.to_s.size > 5000
      return false if !@uncategorized_text.nil? && @uncategorized_text.to_s.size > 20000

      true
    end

    # Custom attribute writer method with validation
    # @param [Object] access_activity_log Value to be assigned
    def access_activity_log=(access_activity_log : String?)
      if !access_activity_log.nil? && access_activity_log.to_s.size > 20000
        raise ArgumentError.new("invalid value for \"access_activity_log\", the character length must be smaller than or equal to 20000.")
      end

      @access_activity_log = access_activity_log
    end

    # Custom attribute writer method with validation
    # @param [Object] billing_address Value to be assigned
    def billing_address=(billing_address : String?)
      if !billing_address.nil? && billing_address.to_s.size > 5000
        raise ArgumentError.new("invalid value for \"billing_address\", the character length must be smaller than or equal to 5000.")
      end

      @billing_address = billing_address
    end

    # Custom attribute writer method with validation
    # @param [Object] cancellation_policy_disclosure Value to be assigned
    def cancellation_policy_disclosure=(cancellation_policy_disclosure : String?)
      if !cancellation_policy_disclosure.nil? && cancellation_policy_disclosure.to_s.size > 20000
        raise ArgumentError.new("invalid value for \"cancellation_policy_disclosure\", the character length must be smaller than or equal to 20000.")
      end

      @cancellation_policy_disclosure = cancellation_policy_disclosure
    end

    # Custom attribute writer method with validation
    # @param [Object] cancellation_rebuttal Value to be assigned
    def cancellation_rebuttal=(cancellation_rebuttal : String?)
      if !cancellation_rebuttal.nil? && cancellation_rebuttal.to_s.size > 20000
        raise ArgumentError.new("invalid value for \"cancellation_rebuttal\", the character length must be smaller than or equal to 20000.")
      end

      @cancellation_rebuttal = cancellation_rebuttal
    end

    # Custom attribute writer method with validation
    # @param [Object] customer_email_address Value to be assigned
    def customer_email_address=(customer_email_address : String?)
      if !customer_email_address.nil? && customer_email_address.to_s.size > 5000
        raise ArgumentError.new("invalid value for \"customer_email_address\", the character length must be smaller than or equal to 5000.")
      end

      @customer_email_address = customer_email_address
    end

    # Custom attribute writer method with validation
    # @param [Object] customer_name Value to be assigned
    def customer_name=(customer_name : String?)
      if !customer_name.nil? && customer_name.to_s.size > 5000
        raise ArgumentError.new("invalid value for \"customer_name\", the character length must be smaller than or equal to 5000.")
      end

      @customer_name = customer_name
    end

    # Custom attribute writer method with validation
    # @param [Object] customer_purchase_ip Value to be assigned
    def customer_purchase_ip=(customer_purchase_ip : String?)
      if !customer_purchase_ip.nil? && customer_purchase_ip.to_s.size > 5000
        raise ArgumentError.new("invalid value for \"customer_purchase_ip\", the character length must be smaller than or equal to 5000.")
      end

      @customer_purchase_ip = customer_purchase_ip
    end

    # Custom attribute writer method with validation
    # @param [Object] duplicate_charge_explanation Value to be assigned
    def duplicate_charge_explanation=(duplicate_charge_explanation : String?)
      if !duplicate_charge_explanation.nil? && duplicate_charge_explanation.to_s.size > 20000
        raise ArgumentError.new("invalid value for \"duplicate_charge_explanation\", the character length must be smaller than or equal to 20000.")
      end

      @duplicate_charge_explanation = duplicate_charge_explanation
    end

    # Custom attribute writer method with validation
    # @param [Object] duplicate_charge_id Value to be assigned
    def duplicate_charge_id=(duplicate_charge_id : String?)
      if !duplicate_charge_id.nil? && duplicate_charge_id.to_s.size > 5000
        raise ArgumentError.new("invalid value for \"duplicate_charge_id\", the character length must be smaller than or equal to 5000.")
      end

      @duplicate_charge_id = duplicate_charge_id
    end

    # Custom attribute writer method with validation
    # @param [Object] product_description Value to be assigned
    def product_description=(product_description : String?)
      if !product_description.nil? && product_description.to_s.size > 20000
        raise ArgumentError.new("invalid value for \"product_description\", the character length must be smaller than or equal to 20000.")
      end

      @product_description = product_description
    end

    # Custom attribute writer method with validation
    # @param [Object] refund_policy_disclosure Value to be assigned
    def refund_policy_disclosure=(refund_policy_disclosure : String?)
      if !refund_policy_disclosure.nil? && refund_policy_disclosure.to_s.size > 20000
        raise ArgumentError.new("invalid value for \"refund_policy_disclosure\", the character length must be smaller than or equal to 20000.")
      end

      @refund_policy_disclosure = refund_policy_disclosure
    end

    # Custom attribute writer method with validation
    # @param [Object] refund_refusal_explanation Value to be assigned
    def refund_refusal_explanation=(refund_refusal_explanation : String?)
      if !refund_refusal_explanation.nil? && refund_refusal_explanation.to_s.size > 20000
        raise ArgumentError.new("invalid value for \"refund_refusal_explanation\", the character length must be smaller than or equal to 20000.")
      end

      @refund_refusal_explanation = refund_refusal_explanation
    end

    # Custom attribute writer method with validation
    # @param [Object] service_date Value to be assigned
    def service_date=(service_date : String?)
      if !service_date.nil? && service_date.to_s.size > 5000
        raise ArgumentError.new("invalid value for \"service_date\", the character length must be smaller than or equal to 5000.")
      end

      @service_date = service_date
    end

    # Custom attribute writer method with validation
    # @param [Object] shipping_address Value to be assigned
    def shipping_address=(shipping_address : String?)
      if !shipping_address.nil? && shipping_address.to_s.size > 5000
        raise ArgumentError.new("invalid value for \"shipping_address\", the character length must be smaller than or equal to 5000.")
      end

      @shipping_address = shipping_address
    end

    # Custom attribute writer method with validation
    # @param [Object] shipping_carrier Value to be assigned
    def shipping_carrier=(shipping_carrier : String?)
      if !shipping_carrier.nil? && shipping_carrier.to_s.size > 5000
        raise ArgumentError.new("invalid value for \"shipping_carrier\", the character length must be smaller than or equal to 5000.")
      end

      @shipping_carrier = shipping_carrier
    end

    # Custom attribute writer method with validation
    # @param [Object] shipping_date Value to be assigned
    def shipping_date=(shipping_date : String?)
      if !shipping_date.nil? && shipping_date.to_s.size > 5000
        raise ArgumentError.new("invalid value for \"shipping_date\", the character length must be smaller than or equal to 5000.")
      end

      @shipping_date = shipping_date
    end

    # Custom attribute writer method with validation
    # @param [Object] shipping_tracking_number Value to be assigned
    def shipping_tracking_number=(shipping_tracking_number : String?)
      if !shipping_tracking_number.nil? && shipping_tracking_number.to_s.size > 5000
        raise ArgumentError.new("invalid value for \"shipping_tracking_number\", the character length must be smaller than or equal to 5000.")
      end

      @shipping_tracking_number = shipping_tracking_number
    end

    # Custom attribute writer method with validation
    # @param [Object] uncategorized_text Value to be assigned
    def uncategorized_text=(uncategorized_text : String?)
      if !uncategorized_text.nil? && uncategorized_text.to_s.size > 20000
        raise ArgumentError.new("invalid value for \"uncategorized_text\", the character length must be smaller than or equal to 20000.")
      end

      @uncategorized_text = uncategorized_text
    end

    # @see the `==` method
    # @param [Object] Object to be compared
    def eql?(o)
      self == o
    end

    # Generates #hash and #== methods from all fields
    # #== @return [Bool]
    # #hash calculates hash code according to all attributes.
    # #hash @return [UInt64] Hash code
    def_equals_and_hash(@access_activity_log, @access_activity_log_present, @billing_address, @billing_address_present, @cancellation_policy, @cancellation_policy_present, @cancellation_policy_disclosure, @cancellation_policy_disclosure_present, @cancellation_rebuttal, @cancellation_rebuttal_present, @customer_communication, @customer_communication_present, @customer_email_address, @customer_email_address_present, @customer_name, @customer_name_present, @customer_purchase_ip, @customer_purchase_ip_present, @customer_signature, @customer_signature_present, @duplicate_charge_documentation, @duplicate_charge_documentation_present, @duplicate_charge_explanation, @duplicate_charge_explanation_present, @duplicate_charge_id, @duplicate_charge_id_present, @product_description, @product_description_present, @receipt, @receipt_present, @refund_policy, @refund_policy_present, @refund_policy_disclosure, @refund_policy_disclosure_present, @refund_refusal_explanation, @refund_refusal_explanation_present, @service_date, @service_date_present, @service_documentation, @service_documentation_present, @shipping_address, @shipping_address_present, @shipping_carrier, @shipping_carrier_present, @shipping_date, @shipping_date_present, @shipping_documentation, @shipping_documentation_present, @shipping_tracking_number, @shipping_tracking_number_present, @uncategorized_file, @uncategorized_file_present, @uncategorized_text, @uncategorized_text_present)
  end
end
