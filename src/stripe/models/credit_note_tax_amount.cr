#  Stripe API
#
# The Stripe REST API. Please see https://stripe.com/docs/api for more details.
#
# The version of the OpenAPI document: 2020-08-27
# Contact: dev-platform@stripe.com
# Generated by: https://openapi-generator.tech
#

require "json"
require "time"
require "log"

module Stripe
  #
  @[JSON::Serializable::Options(emit_nulls: true)]
  class CreditNoteTaxAmount
    include JSON::Serializable
    include JSON::Serializable::Unmapped

    # Required properties
    # The amount, in %s, of the tax.
    @[JSON::Field(key: "amount", type: Int64)]
    property amount : Int64

    # Whether this tax amount is inclusive or exclusive.
    @[JSON::Field(key: "inclusive", type: Bool)]
    property inclusive : Bool

    @[JSON::Field(key: "tax_rate", type: CreditNoteTaxAmountTaxRate)]
    property tax_rate : CreditNoteTaxAmountTaxRate

    # Initializes the object
    # @param [Hash] attributes Model attributes in the form of hash
    def initialize(*, @amount : Int64, @inclusive : Bool, @tax_rate : CreditNoteTaxAmountTaxRate)
    end

    # Show invalid properties with the reasons. Usually used together with valid?
    # @return Array for valid properties with the reasons
    def list_invalid_properties
      invalid_properties = Array(String).new

      invalid_properties
    end

    # Check to see if the all the properties in the model are valid
    # @return true if the model is valid
    def valid?
      true
    end

    # Checks equality by comparing each attribute.
    # @param [Object] Object to be compared
    def ==(o)
      return true if self.same?(o)
      self.class == o.class &&
        amount == o.amount &&
        inclusive == o.inclusive &&
        tax_rate == o.tax_rate
    end

    # @see the `==` method
    # @param [Object] Object to be compared
    def eql?(o)
      self == o
    end

    # Calculates hash code according to all attributes.
    # @return [UInt64] Hash code
    def_hash(@amount, @inclusive, @tax_rate)
  end
end
