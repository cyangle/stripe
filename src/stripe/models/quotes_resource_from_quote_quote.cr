#  Stripe API
#
# The Stripe REST API. Please see https://stripe.com/docs/api for more details.
#
# The version of the OpenAPI document: 2024-06-20
# Contact: dev-platform@stripe.com
# Generated by: https://openapi-generator.tech
#

require "../../core"

require "./invoice_setting_quote_setting"
require "./invoiceitem_discounts_inner"
require "./payment_link_on_behalf_of"
require "./quote"
require "./quote_application"
require "./quote_customer"
require "./quote_default_tax_rates_inner"
require "./quote_invoice"
require "./quote_subscription"
require "./quote_subscription_schedule"
require "./quote_test_clock"
require "./quotes_resource_automatic_tax"
require "./quotes_resource_computed"
require "./quotes_resource_from_quote"
require "./quotes_resource_list_line_items"
require "./quotes_resource_status_transitions"
require "./quotes_resource_subscription_data_subscription_data"
require "./quotes_resource_total_details"
require "./quotes_resource_transfer_data"

module Stripe
  # The quote that was cloned.
  class QuotesResourceFromQuoteQuote
    include JSON::Serializable
    include JSON::Serializable::Unmapped
    include OpenApi::Validatable
    include OpenApi::Json

    # Required Properties

    # Total before any discounts or taxes are applied.
    @[JSON::Field(key: "amount_subtotal", type: Int64?, default: nil, required: true, nullable: false, emit_null: false)]
    property amount_subtotal : Int64? = nil

    # Total after discounts and taxes are applied.
    @[JSON::Field(key: "amount_total", type: Int64?, default: nil, required: true, nullable: false, emit_null: false)]
    property amount_total : Int64? = nil

    @[JSON::Field(key: "application", type: Stripe::QuoteApplication?, default: nil, required: true, nullable: true, emit_null: true)]
    property application : Stripe::QuoteApplication? = nil

    # The amount of the application fee (if any) that will be requested to be applied to the payment and transferred to the application owner's Stripe account. Only applicable if there are no line items with recurring prices on the quote.
    @[JSON::Field(key: "application_fee_amount", type: Int64?, default: nil, required: true, nullable: true, emit_null: true)]
    property application_fee_amount : Int64? = nil

    # A non-negative decimal between 0 and 100, with at most two decimal places. This represents the percentage of the subscription invoice total that will be transferred to the application owner's Stripe account. Only applicable if there are line items with recurring prices on the quote.
    @[JSON::Field(key: "application_fee_percent", type: Float64?, default: nil, required: true, nullable: true, emit_null: true)]
    property application_fee_percent : Float64? = nil

    @[JSON::Field(key: "automatic_tax", type: Stripe::QuotesResourceAutomaticTax?, default: nil, required: true, nullable: false, emit_null: false)]
    property automatic_tax : Stripe::QuotesResourceAutomaticTax? = nil

    # Either `charge_automatically`, or `send_invoice`. When charging automatically, Stripe will attempt to pay invoices at the end of the subscription cycle or on finalization using the default payment method attached to the subscription or customer. When sending an invoice, Stripe will email your customer an invoice with payment instructions and mark the subscription as `active`. Defaults to `charge_automatically`.
    @[JSON::Field(key: "collection_method", type: String?, default: nil, required: true, nullable: false, emit_null: false)]
    property collection_method : String? = nil
    ERROR_MESSAGE_FOR_COLLECTION_METHOD = "invalid value for \"collection_method\", must be one of [charge_automatically, send_invoice]."
    VALID_VALUES_FOR_COLLECTION_METHOD  = String.static_array("charge_automatically", "send_invoice")

    @[JSON::Field(key: "computed", type: Stripe::QuotesResourceComputed?, default: nil, required: true, nullable: false, emit_null: false)]
    property computed : Stripe::QuotesResourceComputed? = nil

    # Time at which the object was created. Measured in seconds since the Unix epoch.
    @[JSON::Field(key: "created", type: Int64?, default: nil, required: true, nullable: false, emit_null: false)]
    property created : Int64? = nil

    # Three-letter [ISO currency code](https://www.iso.org/iso-4217-currency-codes.html), in lowercase. Must be a [supported currency](https://stripe.com/docs/currencies).
    @[JSON::Field(key: "currency", type: String?, default: nil, required: true, nullable: true, emit_null: true)]
    property currency : String? = nil
    MAX_LENGTH_FOR_CURRENCY = 5000

    @[JSON::Field(key: "customer", type: Stripe::QuoteCustomer?, default: nil, required: true, nullable: true, emit_null: true)]
    property customer : Stripe::QuoteCustomer? = nil

    # A description that will be displayed on the quote PDF.
    @[JSON::Field(key: "description", type: String?, default: nil, required: true, nullable: true, emit_null: true)]
    property description : String? = nil
    MAX_LENGTH_FOR_DESCRIPTION = 5000

    # The discounts applied to this quote.
    @[JSON::Field(key: "discounts", type: Array(Stripe::InvoiceitemDiscountsInner)?, default: nil, required: true, nullable: false, emit_null: false)]
    property discounts : Array(Stripe::InvoiceitemDiscountsInner)? = nil

    # The date on which the quote will be canceled if in `open` or `draft` status. Measured in seconds since the Unix epoch.
    @[JSON::Field(key: "expires_at", type: Int64?, default: nil, required: true, nullable: false, emit_null: false)]
    property expires_at : Int64? = nil

    # A footer that will be displayed on the quote PDF.
    @[JSON::Field(key: "footer", type: String?, default: nil, required: true, nullable: true, emit_null: true)]
    property footer : String? = nil
    MAX_LENGTH_FOR_FOOTER = 5000

    @[JSON::Field(key: "from_quote", type: Stripe::QuotesResourceFromQuote?, default: nil, required: true, nullable: false, emit_null: false)]
    property from_quote : Stripe::QuotesResourceFromQuote? = nil

    # A header that will be displayed on the quote PDF.
    @[JSON::Field(key: "header", type: String?, default: nil, required: true, nullable: true, emit_null: true)]
    property header : String? = nil
    MAX_LENGTH_FOR_HEADER = 5000

    # Unique identifier for the object.
    @[JSON::Field(key: "id", type: String?, default: nil, required: true, nullable: false, emit_null: false)]
    property id : String? = nil
    MAX_LENGTH_FOR_ID = 5000

    @[JSON::Field(key: "invoice", type: Stripe::QuoteInvoice?, default: nil, required: true, nullable: true, emit_null: true)]
    property invoice : Stripe::QuoteInvoice? = nil

    @[JSON::Field(key: "invoice_settings", type: Stripe::InvoiceSettingQuoteSetting?, default: nil, required: true, nullable: false, emit_null: false)]
    property invoice_settings : Stripe::InvoiceSettingQuoteSetting? = nil

    # Has the value `true` if the object exists in live mode or the value `false` if the object exists in test mode.
    @[JSON::Field(key: "livemode", type: Bool?, default: nil, required: true, nullable: false, emit_null: false)]
    property livemode : Bool? = nil

    @[JSON::Field(key: "metadata", type: Hash(String, String)?, default: nil, required: true, nullable: false, emit_null: false)]
    property metadata : Hash(String, String)? = nil

    # A unique number that identifies this particular quote. This number is assigned once the quote is [finalized](https://stripe.com/docs/quotes/overview#finalize).
    @[JSON::Field(key: "number", type: String?, default: nil, required: true, nullable: true, emit_null: true)]
    property number : String? = nil
    MAX_LENGTH_FOR_NUMBER = 5000

    # String representing the object's type. Objects of the same type share the same value.
    @[JSON::Field(key: "object", type: String?, default: nil, required: true, nullable: false, emit_null: false)]
    property object : String? = nil
    ERROR_MESSAGE_FOR_OBJECT = "invalid value for \"object\", must be one of [quote]."
    VALID_VALUES_FOR_OBJECT  = String.static_array("quote")

    @[JSON::Field(key: "on_behalf_of", type: Stripe::PaymentLinkOnBehalfOf?, default: nil, required: true, nullable: true, emit_null: true)]
    property on_behalf_of : Stripe::PaymentLinkOnBehalfOf? = nil

    # The status of the quote.
    @[JSON::Field(key: "status", type: String?, default: nil, required: true, nullable: false, emit_null: false)]
    property status : String? = nil
    ERROR_MESSAGE_FOR_STATUS = "invalid value for \"status\", must be one of [accepted, canceled, draft, open]."
    VALID_VALUES_FOR_STATUS  = String.static_array("accepted", "canceled", "draft", "open")

    @[JSON::Field(key: "status_transitions", type: Stripe::QuotesResourceStatusTransitions?, default: nil, required: true, nullable: false, emit_null: false)]
    property status_transitions : Stripe::QuotesResourceStatusTransitions? = nil

    @[JSON::Field(key: "subscription", type: Stripe::QuoteSubscription?, default: nil, required: true, nullable: true, emit_null: true)]
    property subscription : Stripe::QuoteSubscription? = nil

    @[JSON::Field(key: "subscription_data", type: Stripe::QuotesResourceSubscriptionDataSubscriptionData?, default: nil, required: true, nullable: false, emit_null: false)]
    property subscription_data : Stripe::QuotesResourceSubscriptionDataSubscriptionData? = nil

    @[JSON::Field(key: "subscription_schedule", type: Stripe::QuoteSubscriptionSchedule?, default: nil, required: true, nullable: true, emit_null: true)]
    property subscription_schedule : Stripe::QuoteSubscriptionSchedule? = nil

    @[JSON::Field(key: "test_clock", type: Stripe::QuoteTestClock?, default: nil, required: true, nullable: true, emit_null: true)]
    property test_clock : Stripe::QuoteTestClock? = nil

    @[JSON::Field(key: "total_details", type: Stripe::QuotesResourceTotalDetails?, default: nil, required: true, nullable: false, emit_null: false)]
    property total_details : Stripe::QuotesResourceTotalDetails? = nil

    @[JSON::Field(key: "transfer_data", type: Stripe::QuotesResourceTransferData?, default: nil, required: true, nullable: false, emit_null: false)]
    property transfer_data : Stripe::QuotesResourceTransferData? = nil

    # End of Required Properties

    # Optional Properties

    # The tax rates applied to this quote.
    @[JSON::Field(key: "default_tax_rates", type: Array(Stripe::QuoteDefaultTaxRatesInner)?, default: nil, required: false, nullable: false, emit_null: false)]
    property default_tax_rates : Array(Stripe::QuoteDefaultTaxRatesInner)? = nil

    @[JSON::Field(key: "line_items", type: Stripe::QuotesResourceListLineItems?, default: nil, required: false, nullable: false, emit_null: false)]
    property line_items : Stripe::QuotesResourceListLineItems? = nil

    # List of class defined in anyOf (OpenAPI v3)
    def self.openapi_any_of
      [
        Stripe::Quote,
        String,
      ]
    end

    # Initializes the object
    # @param [Hash] attributes Model attributes in the form of hash
    def initialize(
      *,
      # Required properties
      @amount_subtotal : Int64? = nil,
      @amount_total : Int64? = nil,
      @application : Stripe::QuoteApplication? = nil,
      @application_fee_amount : Int64? = nil,
      @application_fee_percent : Float64? = nil,
      @automatic_tax : Stripe::QuotesResourceAutomaticTax? = nil,
      @collection_method : String? = nil,
      @computed : Stripe::QuotesResourceComputed? = nil,
      @created : Int64? = nil,
      @currency : String? = nil,
      @customer : Stripe::QuoteCustomer? = nil,
      @description : String? = nil,
      @discounts : Array(Stripe::InvoiceitemDiscountsInner)? = nil,
      @expires_at : Int64? = nil,
      @footer : String? = nil,
      @from_quote : Stripe::QuotesResourceFromQuote? = nil,
      @header : String? = nil,
      @id : String? = nil,
      @invoice : Stripe::QuoteInvoice? = nil,
      @invoice_settings : Stripe::InvoiceSettingQuoteSetting? = nil,
      @livemode : Bool? = nil,
      @metadata : Hash(String, String)? = nil,
      @number : String? = nil,
      @object : String? = nil,
      @on_behalf_of : Stripe::PaymentLinkOnBehalfOf? = nil,
      @status : String? = nil,
      @status_transitions : Stripe::QuotesResourceStatusTransitions? = nil,
      @subscription : Stripe::QuoteSubscription? = nil,
      @subscription_data : Stripe::QuotesResourceSubscriptionDataSubscriptionData? = nil,
      @subscription_schedule : Stripe::QuoteSubscriptionSchedule? = nil,
      @test_clock : Stripe::QuoteTestClock? = nil,
      @total_details : Stripe::QuotesResourceTotalDetails? = nil,
      @transfer_data : Stripe::QuotesResourceTransferData? = nil,
      # Optional properties
      @default_tax_rates : Array(Stripe::QuoteDefaultTaxRatesInner)? = nil,
      @line_items : Stripe::QuotesResourceListLineItems? = nil
    )
    end

    # Show invalid properties with the reasons. Usually used together with valid?
    # @return Array for valid properties with the reasons
    def list_invalid_properties : Array(String)
      invalid_properties = Array(String).new
      invalid_properties
    end

    # Check to see if the all the properties in the model are valid
    # @return true if the model is valid
    def valid? : Bool
      _any_of_found = false
      json_string : String = self.to_json
      _any_of_found = self.class.openapi_any_of.any? do |_class|
        _any_of = begin
          _class.from_json(json_string)
        rescue
          nil
        end

        !_any_of.nil? && _any_of.not_nil!.valid?
      end
      return false if !_any_of_found

      true
    end

    # Generates #hash and #== methods from all fields
    # #== @return [Bool]
    # #hash calculates hash code according to all attributes.
    # #hash @return [UInt64] Hash code
    def_equals_and_hash(@amount_subtotal, @amount_total, @application, @application_fee_amount, @application_fee_percent, @automatic_tax, @collection_method, @computed, @created, @currency, @customer, @description, @discounts, @expires_at, @footer, @from_quote, @header, @id, @invoice, @invoice_settings, @livemode, @metadata, @number, @object, @on_behalf_of, @status, @status_transitions, @subscription, @subscription_data, @subscription_schedule, @test_clock, @total_details, @transfer_data, @default_tax_rates, @line_items)
  end
end
