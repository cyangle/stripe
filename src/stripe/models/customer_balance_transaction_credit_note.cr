#  Stripe API
#
# The Stripe REST API. Please see https://stripe.com/docs/api for more details.
#
# The version of the OpenAPI document: 2024-06-20
# Contact: dev-platform@stripe.com
# Generated by: https://openapi-generator.tech
#

require "../../core"

require "./credit_note"
require "./credit_note_customer"
require "./credit_note_customer_balance_transaction"
require "./credit_note_invoice"
require "./credit_note_lines_list"
require "./credit_note_refund"
require "./credit_note_tax_amount"
require "./discounts_resource_discount_amount"
require "./invoices_resource_shipping_cost"

module Stripe
  # The ID of the credit note (if any) related to the transaction.
  class CustomerBalanceTransactionCreditNote
    include JSON::Serializable
    include JSON::Serializable::Unmapped
    include OpenApi::Validatable
    include OpenApi::Json

    # Required Properties

    # The integer amount in cents (or local equivalent) representing the total amount of the credit note, including tax.
    @[JSON::Field(key: "amount", type: Int64?, default: nil, required: true, nullable: false, emit_null: false)]
    property amount : Int64? = nil

    # This is the sum of all the shipping amounts.
    @[JSON::Field(key: "amount_shipping", type: Int64?, default: nil, required: true, nullable: false, emit_null: false)]
    property amount_shipping : Int64? = nil

    # Time at which the object was created. Measured in seconds since the Unix epoch.
    @[JSON::Field(key: "created", type: Int64?, default: nil, required: true, nullable: false, emit_null: false)]
    property created : Int64? = nil

    # Three-letter [ISO currency code](https://www.iso.org/iso-4217-currency-codes.html), in lowercase. Must be a [supported currency](https://stripe.com/docs/currencies).
    @[JSON::Field(key: "currency", type: String?, default: nil, required: true, nullable: false, emit_null: false)]
    property currency : String? = nil

    @[JSON::Field(key: "customer", type: Stripe::CreditNoteCustomer?, default: nil, required: true, nullable: false, emit_null: false)]
    property customer : Stripe::CreditNoteCustomer? = nil

    @[JSON::Field(key: "customer_balance_transaction", type: Stripe::CreditNoteCustomerBalanceTransaction?, default: nil, required: true, nullable: true, emit_null: true)]
    property customer_balance_transaction : Stripe::CreditNoteCustomerBalanceTransaction? = nil

    # The integer amount in cents (or local equivalent) representing the total amount of discount that was credited.
    @[JSON::Field(key: "discount_amount", type: Int64?, default: nil, required: true, nullable: false, emit_null: false)]
    property discount_amount : Int64? = nil

    # The aggregate amounts calculated per discount for all line items.
    @[JSON::Field(key: "discount_amounts", type: Array(Stripe::DiscountsResourceDiscountAmount)?, default: nil, required: true, nullable: false, emit_null: false)]
    property discount_amounts : Array(Stripe::DiscountsResourceDiscountAmount)? = nil

    # The date when this credit note is in effect. Same as `created` unless overwritten. When defined, this value replaces the system-generated 'Date of issue' printed on the credit note PDF.
    @[JSON::Field(key: "effective_at", type: Int64?, default: nil, required: true, nullable: true, emit_null: true)]
    property effective_at : Int64? = nil

    # Unique identifier for the object.
    @[JSON::Field(key: "id", type: String?, default: nil, required: true, nullable: false, emit_null: false)]
    property id : String? = nil
    MAX_LENGTH_FOR_ID = 5000

    @[JSON::Field(key: "invoice", type: Stripe::CreditNoteInvoice?, default: nil, required: true, nullable: false, emit_null: false)]
    property invoice : Stripe::CreditNoteInvoice? = nil

    @[JSON::Field(key: "lines", type: Stripe::CreditNoteLinesList?, default: nil, required: true, nullable: false, emit_null: false)]
    property lines : Stripe::CreditNoteLinesList? = nil

    # Has the value `true` if the object exists in live mode or the value `false` if the object exists in test mode.
    @[JSON::Field(key: "livemode", type: Bool?, default: nil, required: true, nullable: false, emit_null: false)]
    property livemode : Bool? = nil

    # Customer-facing text that appears on the credit note PDF.
    @[JSON::Field(key: "memo", type: String?, default: nil, required: true, nullable: true, emit_null: true)]
    property memo : String? = nil
    MAX_LENGTH_FOR_MEMO = 5000

    @[JSON::Field(key: "metadata", type: Hash(String, String)?, default: nil, required: true, nullable: true, emit_null: true)]
    property metadata : Hash(String, String)? = nil

    # A unique number that identifies this particular credit note and appears on the PDF of the credit note and its associated invoice.
    @[JSON::Field(key: "number", type: String?, default: nil, required: true, nullable: false, emit_null: false)]
    property number : String? = nil
    MAX_LENGTH_FOR_NUMBER = 5000

    # String representing the object's type. Objects of the same type share the same value.
    @[JSON::Field(key: "object", type: String?, default: nil, required: true, nullable: false, emit_null: false)]
    property object : String? = nil
    ERROR_MESSAGE_FOR_OBJECT = "invalid value for \"object\", must be one of [credit_note]."
    VALID_VALUES_FOR_OBJECT  = String.static_array("credit_note")

    # Amount that was credited outside of Stripe.
    @[JSON::Field(key: "out_of_band_amount", type: Int64?, default: nil, required: true, nullable: true, emit_null: true)]
    property out_of_band_amount : Int64? = nil

    # The link to download the PDF of the credit note.
    @[JSON::Field(key: "pdf", type: String?, default: nil, required: true, nullable: false, emit_null: false)]
    property pdf : String? = nil
    MAX_LENGTH_FOR_PDF = 5000

    # Reason for issuing this credit note, one of `duplicate`, `fraudulent`, `order_change`, or `product_unsatisfactory`
    @[JSON::Field(key: "reason", type: String?, default: nil, required: true, nullable: true, emit_null: true)]
    property reason : String? = nil
    ERROR_MESSAGE_FOR_REASON = "invalid value for \"reason\", must be one of [duplicate, fraudulent, order_change, product_unsatisfactory]."
    VALID_VALUES_FOR_REASON  = String.static_array("duplicate", "fraudulent", "order_change", "product_unsatisfactory")

    @[JSON::Field(key: "refund", type: Stripe::CreditNoteRefund?, default: nil, required: true, nullable: true, emit_null: true)]
    property refund : Stripe::CreditNoteRefund? = nil

    @[JSON::Field(key: "shipping_cost", type: Stripe::InvoicesResourceShippingCost?, default: nil, required: true, nullable: false, emit_null: false)]
    property shipping_cost : Stripe::InvoicesResourceShippingCost? = nil

    # Status of this credit note, one of `issued` or `void`. Learn more about [voiding credit notes](https://stripe.com/docs/billing/invoices/credit-notes#voiding).
    @[JSON::Field(key: "status", type: String?, default: nil, required: true, nullable: false, emit_null: false)]
    property status : String? = nil
    ERROR_MESSAGE_FOR_STATUS = "invalid value for \"status\", must be one of [issued, void]."
    VALID_VALUES_FOR_STATUS  = String.static_array("issued", "void")

    # The integer amount in cents (or local equivalent) representing the amount of the credit note, excluding exclusive tax and invoice level discounts.
    @[JSON::Field(key: "subtotal", type: Int64?, default: nil, required: true, nullable: false, emit_null: false)]
    property subtotal : Int64? = nil

    # The integer amount in cents (or local equivalent) representing the amount of the credit note, excluding all tax and invoice level discounts.
    @[JSON::Field(key: "subtotal_excluding_tax", type: Int64?, default: nil, required: true, nullable: true, emit_null: true)]
    property subtotal_excluding_tax : Int64? = nil

    # The aggregate amounts calculated per tax rate for all line items.
    @[JSON::Field(key: "tax_amounts", type: Array(Stripe::CreditNoteTaxAmount)?, default: nil, required: true, nullable: false, emit_null: false)]
    property tax_amounts : Array(Stripe::CreditNoteTaxAmount)? = nil

    # The integer amount in cents (or local equivalent) representing the total amount of the credit note, including tax and all discount.
    @[JSON::Field(key: "total", type: Int64?, default: nil, required: true, nullable: false, emit_null: false)]
    property total : Int64? = nil

    # The integer amount in cents (or local equivalent) representing the total amount of the credit note, excluding tax, but including discounts.
    @[JSON::Field(key: "total_excluding_tax", type: Int64?, default: nil, required: true, nullable: true, emit_null: true)]
    property total_excluding_tax : Int64? = nil

    # Type of this credit note, one of `pre_payment` or `post_payment`. A `pre_payment` credit note means it was issued when the invoice was open. A `post_payment` credit note means it was issued when the invoice was paid.
    @[JSON::Field(key: "type", type: String?, default: nil, required: true, nullable: false, emit_null: false)]
    property _type : String? = nil
    ERROR_MESSAGE_FOR__TYPE = "invalid value for \"_type\", must be one of [post_payment, pre_payment]."
    VALID_VALUES_FOR__TYPE  = String.static_array("post_payment", "pre_payment")

    # The time that the credit note was voided.
    @[JSON::Field(key: "voided_at", type: Int64?, default: nil, required: true, nullable: true, emit_null: true)]
    property voided_at : Int64? = nil

    # End of Required Properties
    # List of class defined in anyOf (OpenAPI v3)
    def self.openapi_any_of
      [
        Stripe::CreditNote,
        String,
      ]
    end

    # Initializes the object
    # @param [Hash] attributes Model attributes in the form of hash
    def initialize(
      *,
      # Required properties
      @amount : Int64? = nil,
      @amount_shipping : Int64? = nil,
      @created : Int64? = nil,
      @currency : String? = nil,
      @customer : Stripe::CreditNoteCustomer? = nil,
      @customer_balance_transaction : Stripe::CreditNoteCustomerBalanceTransaction? = nil,
      @discount_amount : Int64? = nil,
      @discount_amounts : Array(Stripe::DiscountsResourceDiscountAmount)? = nil,
      @effective_at : Int64? = nil,
      @id : String? = nil,
      @invoice : Stripe::CreditNoteInvoice? = nil,
      @lines : Stripe::CreditNoteLinesList? = nil,
      @livemode : Bool? = nil,
      @memo : String? = nil,
      @metadata : Hash(String, String)? = nil,
      @number : String? = nil,
      @object : String? = nil,
      @out_of_band_amount : Int64? = nil,
      @pdf : String? = nil,
      @reason : String? = nil,
      @refund : Stripe::CreditNoteRefund? = nil,
      @shipping_cost : Stripe::InvoicesResourceShippingCost? = nil,
      @status : String? = nil,
      @subtotal : Int64? = nil,
      @subtotal_excluding_tax : Int64? = nil,
      @tax_amounts : Array(Stripe::CreditNoteTaxAmount)? = nil,
      @total : Int64? = nil,
      @total_excluding_tax : Int64? = nil,
      @_type : String? = nil,
      @voided_at : Int64? = nil
    )
    end

    # Show invalid properties with the reasons. Usually used together with valid?
    # @return Array for valid properties with the reasons
    def list_invalid_properties : Array(String)
      invalid_properties = Array(String).new
      invalid_properties
    end

    # Check to see if the all the properties in the model are valid
    # @return true if the model is valid
    def valid? : Bool
      _any_of_found = false
      json_string : String = self.to_json
      _any_of_found = self.class.openapi_any_of.any? do |_class|
        _any_of = begin
          _class.from_json(json_string)
        rescue
          nil
        end

        !_any_of.nil? && _any_of.not_nil!.valid?
      end
      return false if !_any_of_found

      true
    end

    # Generates #hash and #== methods from all fields
    # #== @return [Bool]
    # #hash calculates hash code according to all attributes.
    # #hash @return [UInt64] Hash code
    def_equals_and_hash(@amount, @amount_shipping, @created, @currency, @customer, @customer_balance_transaction, @discount_amount, @discount_amounts, @effective_at, @id, @invoice, @lines, @livemode, @memo, @metadata, @number, @object, @out_of_band_amount, @pdf, @reason, @refund, @shipping_cost, @status, @subtotal, @subtotal_excluding_tax, @tax_amounts, @total, @total_excluding_tax, @_type, @voided_at)
  end
end
