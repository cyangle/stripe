#  Stripe API
#
# The Stripe REST API. Please see https://stripe.com/docs/api for more details.
#
# The version of the OpenAPI document: 2022-11-15
# Contact: dev-platform@stripe.com
# Generated by: https://openapi-generator.tech
#

require "json"
require "time"
require "log"

module Stripe
  class ItemBillingThresholdsParam
    include JSON::Serializable
    include JSON::Serializable::Unmapped
    include OpenApi::Validatable
    include OpenApi::Json

    # Required Properties

    @[JSON::Field(key: "usage_gte", type: Int64?, default: nil, required: true, nullable: false, emit_null: false)]
    getter usage_gte : Int64? = nil

    # End of Required Properties

    # Initializes the object
    # @param [Hash] attributes Model attributes in the form of hash
    def initialize(
      *,
      # Required properties
      @usage_gte : Int64? = nil
    )
    end

    # Show invalid properties with the reasons. Usually used together with valid?
    # @return Array for valid properties with the reasons
    def list_invalid_properties : Array(String)
      invalid_properties = Array(String).new

      invalid_properties.push("\"usage_gte\" is required and cannot be null") if @usage_gte.nil?

      invalid_properties
    end

    # Check to see if the all the properties in the model are valid
    # @return true if the model is valid
    def valid? : Bool
      return false if @usage_gte.nil?

      true
    end

    # Custom attribute writer method checking allowed values (enum).
    # @param [Object] usage_gte Object to be assigned
    def usage_gte=(usage_gte : Int64?)
      if usage_gte.nil?
        raise ArgumentError.new("\"usage_gte\" is required and cannot be null")
      end
      _usage_gte = usage_gte.not_nil!
      @usage_gte = _usage_gte
    end

    # Generates #hash and #== methods from all fields
    # #== @return [Bool]
    # #hash calculates hash code according to all attributes.
    # #hash @return [UInt64] Hash code
    def_equals_and_hash(@usage_gte)
  end
end
