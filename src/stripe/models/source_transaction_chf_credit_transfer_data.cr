#  Stripe API
#
# The Stripe REST API. Please see https://stripe.com/docs/api for more details.
#
# The version of the OpenAPI document: 2022-11-15
# Contact: dev-platform@stripe.com
# Generated by: https://openapi-generator.tech
#

require "json"
require "time"
require "log"

module Stripe
  #
  class SourceTransactionChfCreditTransferData
    include JSON::Serializable
    include JSON::Serializable::Unmapped
    include OpenApi::Validatable
    include OpenApi::Json

    # Optional Properties

    # Reference associated with the transfer.
    @[JSON::Field(key: "reference", type: String?, default: nil, required: false, nullable: false, emit_null: false)]
    getter reference : String? = nil
    MAX_LENGTH_FOR_REFERENCE = 5000

    # Sender's country address.
    @[JSON::Field(key: "sender_address_country", type: String?, default: nil, required: false, nullable: false, emit_null: false)]
    getter sender_address_country : String? = nil
    MAX_LENGTH_FOR_SENDER_ADDRESS_COUNTRY = 5000

    # Sender's line 1 address.
    @[JSON::Field(key: "sender_address_line1", type: String?, default: nil, required: false, nullable: false, emit_null: false)]
    getter sender_address_line1 : String? = nil
    MAX_LENGTH_FOR_SENDER_ADDRESS_LINE1 = 5000

    # Sender's bank account IBAN.
    @[JSON::Field(key: "sender_iban", type: String?, default: nil, required: false, nullable: false, emit_null: false)]
    getter sender_iban : String? = nil
    MAX_LENGTH_FOR_SENDER_IBAN = 5000

    # Sender's name.
    @[JSON::Field(key: "sender_name", type: String?, default: nil, required: false, nullable: false, emit_null: false)]
    getter sender_name : String? = nil
    MAX_LENGTH_FOR_SENDER_NAME = 5000

    # Initializes the object
    # @param [Hash] attributes Model attributes in the form of hash
    def initialize(
      *,
      # Optional properties
      @reference : String? = nil,
      @sender_address_country : String? = nil,
      @sender_address_line1 : String? = nil,
      @sender_iban : String? = nil,
      @sender_name : String? = nil
    )
    end

    # Show invalid properties with the reasons. Usually used together with valid?
    # @return Array for valid properties with the reasons
    def list_invalid_properties : Array(String)
      invalid_properties = Array(String).new

      unless (_reference = @reference).nil?
        if max_length_error = OpenApi::PrimitiveValidator.max_length_error("reference", _reference.to_s.size, MAX_LENGTH_FOR_REFERENCE)
          invalid_properties.push(max_length_error)
        end
      end
      unless (_sender_address_country = @sender_address_country).nil?
        if max_length_error = OpenApi::PrimitiveValidator.max_length_error("sender_address_country", _sender_address_country.to_s.size, MAX_LENGTH_FOR_SENDER_ADDRESS_COUNTRY)
          invalid_properties.push(max_length_error)
        end
      end
      unless (_sender_address_line1 = @sender_address_line1).nil?
        if max_length_error = OpenApi::PrimitiveValidator.max_length_error("sender_address_line1", _sender_address_line1.to_s.size, MAX_LENGTH_FOR_SENDER_ADDRESS_LINE1)
          invalid_properties.push(max_length_error)
        end
      end
      unless (_sender_iban = @sender_iban).nil?
        if max_length_error = OpenApi::PrimitiveValidator.max_length_error("sender_iban", _sender_iban.to_s.size, MAX_LENGTH_FOR_SENDER_IBAN)
          invalid_properties.push(max_length_error)
        end
      end
      unless (_sender_name = @sender_name).nil?
        if max_length_error = OpenApi::PrimitiveValidator.max_length_error("sender_name", _sender_name.to_s.size, MAX_LENGTH_FOR_SENDER_NAME)
          invalid_properties.push(max_length_error)
        end
      end
      invalid_properties
    end

    # Check to see if the all the properties in the model are valid
    # @return true if the model is valid
    def valid? : Bool
      unless (_reference = @reference).nil?
        return false if _reference.to_s.size > MAX_LENGTH_FOR_REFERENCE
      end

      unless (_sender_address_country = @sender_address_country).nil?
        return false if _sender_address_country.to_s.size > MAX_LENGTH_FOR_SENDER_ADDRESS_COUNTRY
      end

      unless (_sender_address_line1 = @sender_address_line1).nil?
        return false if _sender_address_line1.to_s.size > MAX_LENGTH_FOR_SENDER_ADDRESS_LINE1
      end

      unless (_sender_iban = @sender_iban).nil?
        return false if _sender_iban.to_s.size > MAX_LENGTH_FOR_SENDER_IBAN
      end

      unless (_sender_name = @sender_name).nil?
        return false if _sender_name.to_s.size > MAX_LENGTH_FOR_SENDER_NAME
      end

      true
    end

    # Custom attribute writer method checking allowed values (enum).
    # @param [Object] reference Object to be assigned
    def reference=(new_value : String?)
      unless new_value.nil?
        OpenApi::PrimitiveValidator.validate_max_length("reference", new_value.to_s.size, MAX_LENGTH_FOR_REFERENCE)
      end

      @reference = new_value
    end

    # Custom attribute writer method checking allowed values (enum).
    # @param [Object] sender_address_country Object to be assigned
    def sender_address_country=(new_value : String?)
      unless new_value.nil?
        OpenApi::PrimitiveValidator.validate_max_length("sender_address_country", new_value.to_s.size, MAX_LENGTH_FOR_SENDER_ADDRESS_COUNTRY)
      end

      @sender_address_country = new_value
    end

    # Custom attribute writer method checking allowed values (enum).
    # @param [Object] sender_address_line1 Object to be assigned
    def sender_address_line1=(new_value : String?)
      unless new_value.nil?
        OpenApi::PrimitiveValidator.validate_max_length("sender_address_line1", new_value.to_s.size, MAX_LENGTH_FOR_SENDER_ADDRESS_LINE1)
      end

      @sender_address_line1 = new_value
    end

    # Custom attribute writer method checking allowed values (enum).
    # @param [Object] sender_iban Object to be assigned
    def sender_iban=(new_value : String?)
      unless new_value.nil?
        OpenApi::PrimitiveValidator.validate_max_length("sender_iban", new_value.to_s.size, MAX_LENGTH_FOR_SENDER_IBAN)
      end

      @sender_iban = new_value
    end

    # Custom attribute writer method checking allowed values (enum).
    # @param [Object] sender_name Object to be assigned
    def sender_name=(new_value : String?)
      unless new_value.nil?
        OpenApi::PrimitiveValidator.validate_max_length("sender_name", new_value.to_s.size, MAX_LENGTH_FOR_SENDER_NAME)
      end

      @sender_name = new_value
    end

    # Generates #hash and #== methods from all fields
    # #== @return [Bool]
    # #hash calculates hash code according to all attributes.
    # #hash @return [UInt64] Hash code
    def_equals_and_hash(@reference, @sender_address_country, @sender_address_line1, @sender_iban, @sender_name)
  end
end
