#  Stripe API
#
# The Stripe REST API. Please see https://stripe.com/docs/api for more details.
#
# The version of the OpenAPI document: 2022-11-15
# Contact: dev-platform@stripe.com
# Generated by: https://openapi-generator.tech
#

require "json"
require "time"
require "log"

module Stripe
  class CustomTextParam
    include JSON::Serializable
    include JSON::Serializable::Unmapped
    include OpenApi::Validatable
    include OpenApi::Json

    # Optional Properties

    @[JSON::Field(key: "shipping_address", type: Stripe::CustomTextParamShippingAddress?, default: nil, required: false, nullable: false, emit_null: false)]
    getter shipping_address : Stripe::CustomTextParamShippingAddress? = nil

    @[JSON::Field(key: "submit", type: Stripe::CustomTextParamShippingAddress?, default: nil, required: false, nullable: false, emit_null: false)]
    getter submit : Stripe::CustomTextParamShippingAddress? = nil

    # Initializes the object
    # @param [Hash] attributes Model attributes in the form of hash
    def initialize(
      *,
      # Optional properties
      @shipping_address : Stripe::CustomTextParamShippingAddress? = nil,
      @submit : Stripe::CustomTextParamShippingAddress? = nil
    )
    end

    # Show invalid properties with the reasons. Usually used together with valid?
    # @return Array for valid properties with the reasons
    def list_invalid_properties : Array(String)
      invalid_properties = Array(String).new

      unless (_shipping_address = @shipping_address).nil?
        invalid_properties.concat(_shipping_address.list_invalid_properties_for("shipping_address")) if _shipping_address.is_a?(OpenApi::Validatable)
      end
      unless (_submit = @submit).nil?
        invalid_properties.concat(_submit.list_invalid_properties_for("submit")) if _submit.is_a?(OpenApi::Validatable)
      end
      invalid_properties
    end

    # Check to see if the all the properties in the model are valid
    # @return true if the model is valid
    def valid? : Bool
      unless (_shipping_address = @shipping_address).nil?
        return false if _shipping_address.is_a?(OpenApi::Validatable) && !_shipping_address.valid?
      end

      unless (_submit = @submit).nil?
        return false if _submit.is_a?(OpenApi::Validatable) && !_submit.valid?
      end

      true
    end

    # Custom attribute writer method checking allowed values (enum).
    # @param [Object] shipping_address Object to be assigned
    def shipping_address=(shipping_address : Stripe::CustomTextParamShippingAddress?)
      if shipping_address.nil?
        return @shipping_address = nil
      end
      _shipping_address = shipping_address.not_nil!
      _shipping_address.validate if _shipping_address.is_a?(OpenApi::Validatable)
      @shipping_address = _shipping_address
    end

    # Custom attribute writer method checking allowed values (enum).
    # @param [Object] submit Object to be assigned
    def submit=(submit : Stripe::CustomTextParamShippingAddress?)
      if submit.nil?
        return @submit = nil
      end
      _submit = submit.not_nil!
      _submit.validate if _submit.is_a?(OpenApi::Validatable)
      @submit = _submit
    end

    # Generates #hash and #== methods from all fields
    # #== @return [Bool]
    # #hash calculates hash code according to all attributes.
    # #hash @return [UInt64] Hash code
    def_equals_and_hash(@shipping_address, @submit)
  end
end
