#  Stripe API
#
# The Stripe REST API. Please see https://stripe.com/docs/api for more details.
#
# The version of the OpenAPI document: 2020-08-27
# Contact: dev-platform@stripe.com
# Generated by: https://openapi-generator.tech
#

require "json"
require "time"
require "log"

module Stripe
  # If this is a `card_present` PaymentMethod, this sub-hash contains details about the Card Present payment method options.
  @[JSON::Serializable::Options(emit_nulls: true)]
  class PaymentMethodOptionsParam21CardPresent
    include JSON::Serializable
    include JSON::Serializable::Unmapped

    # Optional properties
    # Request ability to capture this payment beyond the standard [authorization validity window](https://stripe.com/docs/terminal/features/extended-authorizations#authorization-validity)
    @[JSON::Field(key: "request_extended_authorization", type: Bool?, presence: true, ignore_serialize: request_extended_authorization.nil? && !request_extended_authorization_present?)]
    property request_extended_authorization : Bool?

    @[JSON::Field(ignore: true)]
    property? request_extended_authorization_present : Bool = false

    # Request ability to [increment](https://stripe.com/docs/terminal/features/incremental-authorizations) this PaymentIntent if the combination of MCC and card brand is eligible. Check [incremental_authorization_supported](https://stripe.com/docs/api/charges/object#charge_object-payment_method_details-card_present-incremental_authorization_supported) in the [Confirm](https://stripe.com/docs/api/payment_intents/confirm) response to verify support.
    @[JSON::Field(key: "request_incremental_authorization_support", type: Bool?, presence: true, ignore_serialize: request_incremental_authorization_support.nil? && !request_incremental_authorization_support_present?)]
    property request_incremental_authorization_support : Bool?

    @[JSON::Field(ignore: true)]
    property? request_incremental_authorization_support_present : Bool = false

    # List of class defined in anyOf (OpenAPI v3)
    def self.openapi_any_of
      [
        Stripe::PaymentMethodOptionsParam25,
        String,
      ]
    end

    # Initializes the object
    # @param [Hash] attributes Model attributes in the form of hash
    def initialize(*, @request_extended_authorization : Bool? = nil, @request_incremental_authorization_support : Bool? = nil)
    end

    # Show invalid properties with the reasons. Usually used together with valid?
    # @return Array for valid properties with the reasons
    def list_invalid_properties
      invalid_properties = Array(String).new

      invalid_properties
    end

    # Check to see if the all the properties in the model are valid
    # @return true if the model is valid
    def valid?
      _any_of_found = false
      json_string : String = self.to_json
      _any_of_found = self.class.openapi_any_of.any? do |_class|
        _any_of = begin
          _class.from_json(json_string)
        rescue
          nil
        end

        !_any_of.nil? && _any_of.not_nil!.valid?
      end

      if !_any_of_found
        return false
      end

      true
    end

    # Checks equality by comparing each attribute.
    # @param [Object] Object to be compared
    def ==(o)
      return true if self.same?(o)
      self.class == o.class &&
        request_extended_authorization == o.request_extended_authorization &&
        request_incremental_authorization_support == o.request_incremental_authorization_support
    end

    # @see the `==` method
    # @param [Object] Object to be compared
    def eql?(o)
      self == o
    end

    # Calculates hash code according to all attributes.
    # @return [UInt64] Hash code
    def_hash(@request_extended_authorization, @request_incremental_authorization_support)
  end
end
