#  Stripe API
#
# The Stripe REST API. Please see https://stripe.com/docs/api for more details.
#
# The version of the OpenAPI document: 2024-06-20
# Contact: dev-platform@stripe.com
# Generated by: https://openapi-generator.tech
#

require "../../core"

require "./discounts_resource_stackable_discount_coupon"
require "./discounts_resource_stackable_discount_discount"
require "./discounts_resource_stackable_discount_promotion_code"

module Stripe
  #
  class DiscountsResourceStackableDiscount
    include JSON::Serializable
    include JSON::Serializable::Unmapped
    include OpenApi::Validatable
    include OpenApi::Json

    # Required Properties

    @[JSON::Field(key: "coupon", type: Stripe::DiscountsResourceStackableDiscountCoupon?, default: nil, required: true, nullable: true, emit_null: true)]
    getter coupon : Stripe::DiscountsResourceStackableDiscountCoupon? = nil

    @[JSON::Field(key: "discount", type: Stripe::DiscountsResourceStackableDiscountDiscount?, default: nil, required: true, nullable: true, emit_null: true)]
    getter discount : Stripe::DiscountsResourceStackableDiscountDiscount? = nil

    @[JSON::Field(key: "promotion_code", type: Stripe::DiscountsResourceStackableDiscountPromotionCode?, default: nil, required: true, nullable: true, emit_null: true)]
    getter promotion_code : Stripe::DiscountsResourceStackableDiscountPromotionCode? = nil

    # End of Required Properties

    # Initializes the object
    # @param [Hash] attributes Model attributes in the form of hash
    def initialize(
      *,
      # Required properties
      @coupon : Stripe::DiscountsResourceStackableDiscountCoupon? = nil,
      @discount : Stripe::DiscountsResourceStackableDiscountDiscount? = nil,
      @promotion_code : Stripe::DiscountsResourceStackableDiscountPromotionCode? = nil
    )
    end

    # Show invalid properties with the reasons. Usually used together with valid?
    # @return Array for valid properties with the reasons
    def list_invalid_properties : Array(String)
      invalid_properties = Array(String).new

      unless (_coupon = @coupon).nil?
        invalid_properties.concat(_coupon.list_invalid_properties_for("coupon")) if _coupon.is_a?(OpenApi::Validatable)
      end
      unless (_discount = @discount).nil?
        invalid_properties.concat(_discount.list_invalid_properties_for("discount")) if _discount.is_a?(OpenApi::Validatable)
      end
      unless (_promotion_code = @promotion_code).nil?
        invalid_properties.concat(_promotion_code.list_invalid_properties_for("promotion_code")) if _promotion_code.is_a?(OpenApi::Validatable)
      end
      invalid_properties
    end

    # Check to see if the all the properties in the model are valid
    # @return true if the model is valid
    def valid? : Bool
      unless (_coupon = @coupon).nil?
        return false if _coupon.is_a?(OpenApi::Validatable) && !_coupon.valid?
      end

      unless (_discount = @discount).nil?
        return false if _discount.is_a?(OpenApi::Validatable) && !_discount.valid?
      end

      unless (_promotion_code = @promotion_code).nil?
        return false if _promotion_code.is_a?(OpenApi::Validatable) && !_promotion_code.valid?
      end

      true
    end

    # Custom attribute writer method checking allowed values (enum).
    # @param [Object] coupon Object to be assigned
    def coupon=(new_value : Stripe::DiscountsResourceStackableDiscountCoupon?)
      unless new_value.nil?
        new_value.validate if new_value.is_a?(OpenApi::Validatable)
      end

      @coupon = new_value
    end

    # Custom attribute writer method checking allowed values (enum).
    # @param [Object] discount Object to be assigned
    def discount=(new_value : Stripe::DiscountsResourceStackableDiscountDiscount?)
      unless new_value.nil?
        new_value.validate if new_value.is_a?(OpenApi::Validatable)
      end

      @discount = new_value
    end

    # Custom attribute writer method checking allowed values (enum).
    # @param [Object] promotion_code Object to be assigned
    def promotion_code=(new_value : Stripe::DiscountsResourceStackableDiscountPromotionCode?)
      unless new_value.nil?
        new_value.validate if new_value.is_a?(OpenApi::Validatable)
      end

      @promotion_code = new_value
    end

    # Generates #hash and #== methods from all fields
    # #== @return [Bool]
    # #hash calculates hash code according to all attributes.
    # #hash @return [UInt64] Hash code
    def_equals_and_hash(@coupon, @discount, @promotion_code)
  end
end
