#  Stripe API
#
# The Stripe REST API. Please see https://stripe.com/docs/api for more details.
#
# The version of the OpenAPI document: 2022-08-01
# Contact: dev-platform@stripe.com
# Generated by: https://openapi-generator.tech
#

require "json"
require "time"
require "log"

module Stripe
  # Payment-method-specific configuration for this SetupIntent.
  class PaymentMethodOptionsParam22
    include JSON::Serializable
    include JSON::Serializable::Unmapped
    include OpenApi::Json

    # Optional properties

    @[JSON::Field(key: "acss_debit", type: Stripe::SetupIntentPaymentMethodOptionsParam?, default: nil, required: false, nullable: false, emit_null: false)]
    getter acss_debit : Stripe::SetupIntentPaymentMethodOptionsParam? = nil

    @[JSON::Field(key: "blik", type: Stripe::SetupIntentPaymentMethodOptionsParam1?, default: nil, required: false, nullable: false, emit_null: false)]
    getter blik : Stripe::SetupIntentPaymentMethodOptionsParam1? = nil

    @[JSON::Field(key: "card", type: Stripe::SetupIntentParam?, default: nil, required: false, nullable: false, emit_null: false)]
    getter card : Stripe::SetupIntentParam? = nil

    @[JSON::Field(key: "link", type: Stripe::SetupIntentPaymentMethodOptionsParam2?, default: nil, required: false, nullable: false, emit_null: false)]
    getter link : Stripe::SetupIntentPaymentMethodOptionsParam2? = nil

    @[JSON::Field(key: "sepa_debit", type: Stripe::SetupIntentPaymentMethodOptionsParam3?, default: nil, required: false, nullable: false, emit_null: false)]
    getter sepa_debit : Stripe::SetupIntentPaymentMethodOptionsParam3? = nil

    @[JSON::Field(key: "us_bank_account", type: Stripe::SetupIntentPaymentMethodOptionsParam4?, default: nil, required: false, nullable: false, emit_null: false)]
    getter us_bank_account : Stripe::SetupIntentPaymentMethodOptionsParam4? = nil

    # Initializes the object
    # @param [Hash] attributes Model attributes in the form of hash
    def initialize(
      *,
      # Optional properties
      @acss_debit : Stripe::SetupIntentPaymentMethodOptionsParam? = nil,
      @blik : Stripe::SetupIntentPaymentMethodOptionsParam1? = nil,
      @card : Stripe::SetupIntentParam? = nil,
      @link : Stripe::SetupIntentPaymentMethodOptionsParam2? = nil,
      @sepa_debit : Stripe::SetupIntentPaymentMethodOptionsParam3? = nil,
      @us_bank_account : Stripe::SetupIntentPaymentMethodOptionsParam4? = nil
    )
    end

    # Show invalid properties with the reasons. Usually used together with valid?
    # @return Array for valid properties with the reasons
    def list_invalid_properties
      invalid_properties = Array(String).new
      # This is a model acss_debit : Stripe::SetupIntentPaymentMethodOptionsParam?
      # This is a model blik : Stripe::SetupIntentPaymentMethodOptionsParam1?
      # This is a model card : Stripe::SetupIntentParam?
      # This is a model link : Stripe::SetupIntentPaymentMethodOptionsParam2?
      # This is a model sepa_debit : Stripe::SetupIntentPaymentMethodOptionsParam3?
      # This is a model us_bank_account : Stripe::SetupIntentPaymentMethodOptionsParam4?

      invalid_properties
    end

    # Check to see if the all the properties in the model are valid
    # @return true if the model is valid
    def valid?
      true
    end

    # Custom attribute writer method checking allowed values (enum).
    # @param [Object] acss_debit Object to be assigned
    def acss_debit=(acss_debit : Stripe::SetupIntentPaymentMethodOptionsParam?)
      if acss_debit.nil?
        return @acss_debit = nil
      end
      @acss_debit = acss_debit
    end

    # Custom attribute writer method checking allowed values (enum).
    # @param [Object] blik Object to be assigned
    def blik=(blik : Stripe::SetupIntentPaymentMethodOptionsParam1?)
      if blik.nil?
        return @blik = nil
      end
      @blik = blik
    end

    # Custom attribute writer method checking allowed values (enum).
    # @param [Object] card Object to be assigned
    def card=(card : Stripe::SetupIntentParam?)
      if card.nil?
        return @card = nil
      end
      @card = card
    end

    # Custom attribute writer method checking allowed values (enum).
    # @param [Object] link Object to be assigned
    def link=(link : Stripe::SetupIntentPaymentMethodOptionsParam2?)
      if link.nil?
        return @link = nil
      end
      @link = link
    end

    # Custom attribute writer method checking allowed values (enum).
    # @param [Object] sepa_debit Object to be assigned
    def sepa_debit=(sepa_debit : Stripe::SetupIntentPaymentMethodOptionsParam3?)
      if sepa_debit.nil?
        return @sepa_debit = nil
      end
      @sepa_debit = sepa_debit
    end

    # Custom attribute writer method checking allowed values (enum).
    # @param [Object] us_bank_account Object to be assigned
    def us_bank_account=(us_bank_account : Stripe::SetupIntentPaymentMethodOptionsParam4?)
      if us_bank_account.nil?
        return @us_bank_account = nil
      end
      @us_bank_account = us_bank_account
    end

    # @see the `==` method
    # @param [Object] Object to be compared
    def eql?(o)
      self == o
    end

    # Generates #hash and #== methods from all fields
    # #== @return [Bool]
    # #hash calculates hash code according to all attributes.
    # #hash @return [UInt64] Hash code
    def_equals_and_hash(@acss_debit, @blik, @card, @link, @sepa_debit, @us_bank_account)
  end
end
