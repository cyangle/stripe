#  Stripe API
#
# The Stripe REST API. Please see https://stripe.com/docs/api for more details.
#
# The version of the OpenAPI document: 2022-11-15
# Contact: dev-platform@stripe.com
# Generated by: https://openapi-generator.tech
#

require "json"
require "time"
require "log"

module Stripe
  class SourceTypeAcssDebit
    include JSON::Serializable
    include JSON::Serializable::Unmapped
    include OpenApi::Validatable
    include OpenApi::Json

    # Optional Properties

    @[JSON::Field(key: "bank_address_city", type: String?, default: nil, required: false, nullable: true, emit_null: true, presence: true, ignore_serialize: bank_address_city.nil? && !bank_address_city_present?)]
    getter bank_address_city : String? = nil

    @[JSON::Field(ignore: true)]
    property? bank_address_city_present : Bool = false

    @[JSON::Field(key: "bank_address_line_1", type: String?, default: nil, required: false, nullable: true, emit_null: true, presence: true, ignore_serialize: bank_address_line_1.nil? && !bank_address_line_1_present?)]
    getter bank_address_line_1 : String? = nil

    @[JSON::Field(ignore: true)]
    property? bank_address_line_1_present : Bool = false

    @[JSON::Field(key: "bank_address_line_2", type: String?, default: nil, required: false, nullable: true, emit_null: true, presence: true, ignore_serialize: bank_address_line_2.nil? && !bank_address_line_2_present?)]
    getter bank_address_line_2 : String? = nil

    @[JSON::Field(ignore: true)]
    property? bank_address_line_2_present : Bool = false

    @[JSON::Field(key: "bank_address_postal_code", type: String?, default: nil, required: false, nullable: true, emit_null: true, presence: true, ignore_serialize: bank_address_postal_code.nil? && !bank_address_postal_code_present?)]
    getter bank_address_postal_code : String? = nil

    @[JSON::Field(ignore: true)]
    property? bank_address_postal_code_present : Bool = false

    @[JSON::Field(key: "bank_name", type: String?, default: nil, required: false, nullable: true, emit_null: true, presence: true, ignore_serialize: bank_name.nil? && !bank_name_present?)]
    getter bank_name : String? = nil

    @[JSON::Field(ignore: true)]
    property? bank_name_present : Bool = false

    @[JSON::Field(key: "category", type: String?, default: nil, required: false, nullable: true, emit_null: true, presence: true, ignore_serialize: category.nil? && !category_present?)]
    getter category : String? = nil

    @[JSON::Field(ignore: true)]
    property? category_present : Bool = false

    @[JSON::Field(key: "country", type: String?, default: nil, required: false, nullable: true, emit_null: true, presence: true, ignore_serialize: country.nil? && !country_present?)]
    getter country : String? = nil

    @[JSON::Field(ignore: true)]
    property? country_present : Bool = false

    @[JSON::Field(key: "fingerprint", type: String?, default: nil, required: false, nullable: true, emit_null: true, presence: true, ignore_serialize: fingerprint.nil? && !fingerprint_present?)]
    getter fingerprint : String? = nil

    @[JSON::Field(ignore: true)]
    property? fingerprint_present : Bool = false

    @[JSON::Field(key: "last4", type: String?, default: nil, required: false, nullable: true, emit_null: true, presence: true, ignore_serialize: last4.nil? && !last4_present?)]
    getter last4 : String? = nil

    @[JSON::Field(ignore: true)]
    property? last4_present : Bool = false

    @[JSON::Field(key: "routing_number", type: String?, default: nil, required: false, nullable: true, emit_null: true, presence: true, ignore_serialize: routing_number.nil? && !routing_number_present?)]
    getter routing_number : String? = nil

    @[JSON::Field(ignore: true)]
    property? routing_number_present : Bool = false

    # Initializes the object
    # @param [Hash] attributes Model attributes in the form of hash
    def initialize(
      *,
      # Optional properties
      @bank_address_city : String? = nil,
      @bank_address_line_1 : String? = nil,
      @bank_address_line_2 : String? = nil,
      @bank_address_postal_code : String? = nil,
      @bank_name : String? = nil,
      @category : String? = nil,
      @country : String? = nil,
      @fingerprint : String? = nil,
      @last4 : String? = nil,
      @routing_number : String? = nil
    )
    end

    # Show invalid properties with the reasons. Usually used together with valid?
    # @return Array for valid properties with the reasons
    def list_invalid_properties : Array(String)
      invalid_properties = Array(String).new

      invalid_properties
    end

    # Check to see if the all the properties in the model are valid
    # @return true if the model is valid
    def valid? : Bool
      true
    end

    # Custom attribute writer method checking allowed values (enum).
    # @param [Object] bank_address_city Object to be assigned
    def bank_address_city=(bank_address_city : String?)
      if bank_address_city.nil?
        return @bank_address_city = nil
      end
      _bank_address_city = bank_address_city.not_nil!
      @bank_address_city = _bank_address_city
    end

    # Custom attribute writer method checking allowed values (enum).
    # @param [Object] bank_address_line_1 Object to be assigned
    def bank_address_line_1=(bank_address_line_1 : String?)
      if bank_address_line_1.nil?
        return @bank_address_line_1 = nil
      end
      _bank_address_line_1 = bank_address_line_1.not_nil!
      @bank_address_line_1 = _bank_address_line_1
    end

    # Custom attribute writer method checking allowed values (enum).
    # @param [Object] bank_address_line_2 Object to be assigned
    def bank_address_line_2=(bank_address_line_2 : String?)
      if bank_address_line_2.nil?
        return @bank_address_line_2 = nil
      end
      _bank_address_line_2 = bank_address_line_2.not_nil!
      @bank_address_line_2 = _bank_address_line_2
    end

    # Custom attribute writer method checking allowed values (enum).
    # @param [Object] bank_address_postal_code Object to be assigned
    def bank_address_postal_code=(bank_address_postal_code : String?)
      if bank_address_postal_code.nil?
        return @bank_address_postal_code = nil
      end
      _bank_address_postal_code = bank_address_postal_code.not_nil!
      @bank_address_postal_code = _bank_address_postal_code
    end

    # Custom attribute writer method checking allowed values (enum).
    # @param [Object] bank_name Object to be assigned
    def bank_name=(bank_name : String?)
      if bank_name.nil?
        return @bank_name = nil
      end
      _bank_name = bank_name.not_nil!
      @bank_name = _bank_name
    end

    # Custom attribute writer method checking allowed values (enum).
    # @param [Object] category Object to be assigned
    def category=(category : String?)
      if category.nil?
        return @category = nil
      end
      _category = category.not_nil!
      @category = _category
    end

    # Custom attribute writer method checking allowed values (enum).
    # @param [Object] country Object to be assigned
    def country=(country : String?)
      if country.nil?
        return @country = nil
      end
      _country = country.not_nil!
      @country = _country
    end

    # Custom attribute writer method checking allowed values (enum).
    # @param [Object] fingerprint Object to be assigned
    def fingerprint=(fingerprint : String?)
      if fingerprint.nil?
        return @fingerprint = nil
      end
      _fingerprint = fingerprint.not_nil!
      @fingerprint = _fingerprint
    end

    # Custom attribute writer method checking allowed values (enum).
    # @param [Object] last4 Object to be assigned
    def last4=(last4 : String?)
      if last4.nil?
        return @last4 = nil
      end
      _last4 = last4.not_nil!
      @last4 = _last4
    end

    # Custom attribute writer method checking allowed values (enum).
    # @param [Object] routing_number Object to be assigned
    def routing_number=(routing_number : String?)
      if routing_number.nil?
        return @routing_number = nil
      end
      _routing_number = routing_number.not_nil!
      @routing_number = _routing_number
    end

    # Generates #hash and #== methods from all fields
    # #== @return [Bool]
    # #hash calculates hash code according to all attributes.
    # #hash @return [UInt64] Hash code
    def_equals_and_hash(@bank_address_city, @bank_address_city_present, @bank_address_line_1, @bank_address_line_1_present, @bank_address_line_2, @bank_address_line_2_present, @bank_address_postal_code, @bank_address_postal_code_present, @bank_name, @bank_name_present, @category, @category_present, @country, @country_present, @fingerprint, @fingerprint_present, @last4, @last4_present, @routing_number, @routing_number_present)
  end
end
