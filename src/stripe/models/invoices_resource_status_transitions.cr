#  Stripe API
#
# The Stripe REST API. Please see https://stripe.com/docs/api for more details.
#
# The version of the OpenAPI document: 2024-06-20
# Contact: dev-platform@stripe.com
# Generated by: https://openapi-generator.tech
#

require "../../core"

module Stripe
  #
  class InvoicesResourceStatusTransitions
    include JSON::Serializable
    include JSON::Serializable::Unmapped
    include OpenApi::Validatable
    include OpenApi::Json

    # Required Properties

    # The time that the invoice draft was finalized.
    @[JSON::Field(key: "finalized_at", type: Int64?, default: nil, required: true, nullable: true, emit_null: true)]
    getter finalized_at : Int64? = nil

    # The time that the invoice was marked uncollectible.
    @[JSON::Field(key: "marked_uncollectible_at", type: Int64?, default: nil, required: true, nullable: true, emit_null: true)]
    getter marked_uncollectible_at : Int64? = nil

    # The time that the invoice was paid.
    @[JSON::Field(key: "paid_at", type: Int64?, default: nil, required: true, nullable: true, emit_null: true)]
    getter paid_at : Int64? = nil

    # The time that the invoice was voided.
    @[JSON::Field(key: "voided_at", type: Int64?, default: nil, required: true, nullable: true, emit_null: true)]
    getter voided_at : Int64? = nil

    # End of Required Properties

    # Initializes the object
    # @param [Hash] attributes Model attributes in the form of hash
    def initialize(
      *,
      # Required properties
      @finalized_at : Int64? = nil,
      @marked_uncollectible_at : Int64? = nil,
      @paid_at : Int64? = nil,
      @voided_at : Int64? = nil
    )
    end

    # Show invalid properties with the reasons. Usually used together with valid?
    # @return Array for valid properties with the reasons
    def list_invalid_properties : Array(String)
      invalid_properties = Array(String).new

      invalid_properties
    end

    # Check to see if the all the properties in the model are valid
    # @return true if the model is valid
    def valid? : Bool
      true
    end

    # Custom attribute writer method checking allowed values (enum).
    # @param [Object] finalized_at Object to be assigned
    def finalized_at=(new_value : Int64?)
      @finalized_at = new_value
    end

    # Custom attribute writer method checking allowed values (enum).
    # @param [Object] marked_uncollectible_at Object to be assigned
    def marked_uncollectible_at=(new_value : Int64?)
      @marked_uncollectible_at = new_value
    end

    # Custom attribute writer method checking allowed values (enum).
    # @param [Object] paid_at Object to be assigned
    def paid_at=(new_value : Int64?)
      @paid_at = new_value
    end

    # Custom attribute writer method checking allowed values (enum).
    # @param [Object] voided_at Object to be assigned
    def voided_at=(new_value : Int64?)
      @voided_at = new_value
    end

    # Generates #hash and #== methods from all fields
    # #== @return [Bool]
    # #hash calculates hash code according to all attributes.
    # #hash @return [UInt64] Hash code
    def_equals_and_hash(@finalized_at, @marked_uncollectible_at, @paid_at, @voided_at)
  end
end
