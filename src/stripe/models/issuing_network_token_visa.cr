#  Stripe API
#
# The Stripe REST API. Please see https://stripe.com/docs/api for more details.
#
# The version of the OpenAPI document: 2024-06-20
# Contact: dev-platform@stripe.com
# Generated by: https://openapi-generator.tech
#

require "../../core"

module Stripe
  #
  class IssuingNetworkTokenVisa
    include JSON::Serializable
    include JSON::Serializable::Unmapped
    include OpenApi::Validatable
    include OpenApi::Json

    # Required Properties

    # A unique reference ID from Visa to represent the card account number.
    @[JSON::Field(key: "card_reference_id", type: String?, default: nil, required: true, nullable: false, emit_null: false)]
    getter card_reference_id : String? = nil
    MAX_LENGTH_FOR_CARD_REFERENCE_ID = 5000

    # The network-unique identifier for the token.
    @[JSON::Field(key: "token_reference_id", type: String?, default: nil, required: true, nullable: false, emit_null: false)]
    getter token_reference_id : String? = nil
    MAX_LENGTH_FOR_TOKEN_REFERENCE_ID = 5000

    # The ID of the entity requesting tokenization, specific to Visa.
    @[JSON::Field(key: "token_requestor_id", type: String?, default: nil, required: true, nullable: false, emit_null: false)]
    getter token_requestor_id : String? = nil
    MAX_LENGTH_FOR_TOKEN_REQUESTOR_ID = 5000

    # End of Required Properties

    # Optional Properties

    # Degree of risk associated with the token between `01` and `99`, with higher number indicating higher risk. A `00` value indicates the token was not scored by Visa.
    @[JSON::Field(key: "token_risk_score", type: String?, default: nil, required: false, nullable: false, emit_null: false)]
    getter token_risk_score : String? = nil
    MAX_LENGTH_FOR_TOKEN_RISK_SCORE = 5000

    # Initializes the object
    # @param [Hash] attributes Model attributes in the form of hash
    def initialize(
      *,
      # Required properties
      @card_reference_id : String? = nil,
      @token_reference_id : String? = nil,
      @token_requestor_id : String? = nil,
      # Optional properties
      @token_risk_score : String? = nil
    )
    end

    # Show invalid properties with the reasons. Usually used together with valid?
    # @return Array for valid properties with the reasons
    def list_invalid_properties : Array(String)
      invalid_properties = Array(String).new

      invalid_properties.push("\"card_reference_id\" is required and cannot be null") if @card_reference_id.nil?

      unless (_card_reference_id = @card_reference_id).nil?
        if max_length_error = OpenApi::PrimitiveValidator.max_length_error("card_reference_id", _card_reference_id.to_s.size, MAX_LENGTH_FOR_CARD_REFERENCE_ID)
          invalid_properties.push(max_length_error)
        end
      end
      invalid_properties.push("\"token_reference_id\" is required and cannot be null") if @token_reference_id.nil?

      unless (_token_reference_id = @token_reference_id).nil?
        if max_length_error = OpenApi::PrimitiveValidator.max_length_error("token_reference_id", _token_reference_id.to_s.size, MAX_LENGTH_FOR_TOKEN_REFERENCE_ID)
          invalid_properties.push(max_length_error)
        end
      end
      invalid_properties.push("\"token_requestor_id\" is required and cannot be null") if @token_requestor_id.nil?

      unless (_token_requestor_id = @token_requestor_id).nil?
        if max_length_error = OpenApi::PrimitiveValidator.max_length_error("token_requestor_id", _token_requestor_id.to_s.size, MAX_LENGTH_FOR_TOKEN_REQUESTOR_ID)
          invalid_properties.push(max_length_error)
        end
      end
      unless (_token_risk_score = @token_risk_score).nil?
        if max_length_error = OpenApi::PrimitiveValidator.max_length_error("token_risk_score", _token_risk_score.to_s.size, MAX_LENGTH_FOR_TOKEN_RISK_SCORE)
          invalid_properties.push(max_length_error)
        end
      end
      invalid_properties
    end

    # Check to see if the all the properties in the model are valid
    # @return true if the model is valid
    def valid? : Bool
      return false if @card_reference_id.nil?
      unless (_card_reference_id = @card_reference_id).nil?
        return false if _card_reference_id.to_s.size > MAX_LENGTH_FOR_CARD_REFERENCE_ID
      end

      return false if @token_reference_id.nil?
      unless (_token_reference_id = @token_reference_id).nil?
        return false if _token_reference_id.to_s.size > MAX_LENGTH_FOR_TOKEN_REFERENCE_ID
      end

      return false if @token_requestor_id.nil?
      unless (_token_requestor_id = @token_requestor_id).nil?
        return false if _token_requestor_id.to_s.size > MAX_LENGTH_FOR_TOKEN_REQUESTOR_ID
      end

      unless (_token_risk_score = @token_risk_score).nil?
        return false if _token_risk_score.to_s.size > MAX_LENGTH_FOR_TOKEN_RISK_SCORE
      end

      true
    end

    # Custom attribute writer method checking allowed values (enum).
    # @param [Object] card_reference_id Object to be assigned
    def card_reference_id=(new_value : String?)
      raise ArgumentError.new("\"card_reference_id\" is required and cannot be null") if new_value.nil?
      unless new_value.nil?
        OpenApi::PrimitiveValidator.validate_max_length("card_reference_id", new_value.to_s.size, MAX_LENGTH_FOR_CARD_REFERENCE_ID)
      end

      @card_reference_id = new_value
    end

    # Custom attribute writer method checking allowed values (enum).
    # @param [Object] token_reference_id Object to be assigned
    def token_reference_id=(new_value : String?)
      raise ArgumentError.new("\"token_reference_id\" is required and cannot be null") if new_value.nil?
      unless new_value.nil?
        OpenApi::PrimitiveValidator.validate_max_length("token_reference_id", new_value.to_s.size, MAX_LENGTH_FOR_TOKEN_REFERENCE_ID)
      end

      @token_reference_id = new_value
    end

    # Custom attribute writer method checking allowed values (enum).
    # @param [Object] token_requestor_id Object to be assigned
    def token_requestor_id=(new_value : String?)
      raise ArgumentError.new("\"token_requestor_id\" is required and cannot be null") if new_value.nil?
      unless new_value.nil?
        OpenApi::PrimitiveValidator.validate_max_length("token_requestor_id", new_value.to_s.size, MAX_LENGTH_FOR_TOKEN_REQUESTOR_ID)
      end

      @token_requestor_id = new_value
    end

    # Custom attribute writer method checking allowed values (enum).
    # @param [Object] token_risk_score Object to be assigned
    def token_risk_score=(new_value : String?)
      unless new_value.nil?
        OpenApi::PrimitiveValidator.validate_max_length("token_risk_score", new_value.to_s.size, MAX_LENGTH_FOR_TOKEN_RISK_SCORE)
      end

      @token_risk_score = new_value
    end

    # Generates #hash and #== methods from all fields
    # #== @return [Bool]
    # #hash calculates hash code according to all attributes.
    # #hash @return [UInt64] Hash code
    def_equals_and_hash(@card_reference_id, @token_reference_id, @token_requestor_id, @token_risk_score)
  end
end
