#  Stripe API
#
# The Stripe REST API. Please see https://stripe.com/docs/api for more details.
#
# The version of the OpenAPI document: 2024-06-20
# Contact: dev-platform@stripe.com
# Generated by: https://openapi-generator.tech
#

require "../../core"

require "./coupon"
require "./promotion_code"
require "./promotion_code_customer"
require "./promotion_codes_resource_restrictions"

module Stripe
  # The promotion code applied to create this discount.
  class DeletedDiscountPromotionCode
    include JSON::Serializable
    include JSON::Serializable::Unmapped
    include OpenApi::Validatable
    include OpenApi::Json

    # Required Properties

    # Whether the promotion code is currently active. A promotion code is only active if the coupon is also valid.
    @[JSON::Field(key: "active", type: Bool?, default: nil, required: true, nullable: false, emit_null: false)]
    property active : Bool? = nil

    # The customer-facing code. Regardless of case, this code must be unique across all active promotion codes for each customer.
    @[JSON::Field(key: "code", type: String?, default: nil, required: true, nullable: false, emit_null: false)]
    property code : String? = nil
    MAX_LENGTH_FOR_CODE = 5000

    @[JSON::Field(key: "coupon", type: Stripe::Coupon?, default: nil, required: true, nullable: false, emit_null: false)]
    property coupon : Stripe::Coupon? = nil

    # Time at which the object was created. Measured in seconds since the Unix epoch.
    @[JSON::Field(key: "created", type: Int64?, default: nil, required: true, nullable: false, emit_null: false)]
    property created : Int64? = nil

    @[JSON::Field(key: "customer", type: Stripe::PromotionCodeCustomer?, default: nil, required: true, nullable: true, emit_null: true)]
    property customer : Stripe::PromotionCodeCustomer? = nil

    # Date at which the promotion code can no longer be redeemed.
    @[JSON::Field(key: "expires_at", type: Int64?, default: nil, required: true, nullable: true, emit_null: true)]
    property expires_at : Int64? = nil

    # Unique identifier for the object.
    @[JSON::Field(key: "id", type: String?, default: nil, required: true, nullable: false, emit_null: false)]
    property id : String? = nil
    MAX_LENGTH_FOR_ID = 5000

    # Has the value `true` if the object exists in live mode or the value `false` if the object exists in test mode.
    @[JSON::Field(key: "livemode", type: Bool?, default: nil, required: true, nullable: false, emit_null: false)]
    property livemode : Bool? = nil

    # Maximum number of times this promotion code can be redeemed.
    @[JSON::Field(key: "max_redemptions", type: Int64?, default: nil, required: true, nullable: true, emit_null: true)]
    property max_redemptions : Int64? = nil

    @[JSON::Field(key: "metadata", type: Hash(String, String)?, default: nil, required: true, nullable: true, emit_null: true)]
    property metadata : Hash(String, String)? = nil

    # String representing the object's type. Objects of the same type share the same value.
    @[JSON::Field(key: "object", type: String?, default: nil, required: true, nullable: false, emit_null: false)]
    property object : String? = nil
    ERROR_MESSAGE_FOR_OBJECT = "invalid value for \"object\", must be one of [promotion_code]."
    VALID_VALUES_FOR_OBJECT  = String.static_array("promotion_code")

    @[JSON::Field(key: "restrictions", type: Stripe::PromotionCodesResourceRestrictions?, default: nil, required: true, nullable: false, emit_null: false)]
    property restrictions : Stripe::PromotionCodesResourceRestrictions? = nil

    # Number of times this promotion code has been used.
    @[JSON::Field(key: "times_redeemed", type: Int64?, default: nil, required: true, nullable: false, emit_null: false)]
    property times_redeemed : Int64? = nil

    # End of Required Properties
    # List of class defined in anyOf (OpenAPI v3)
    def self.openapi_any_of
      [
        Stripe::PromotionCode,
        String,
      ]
    end

    # Initializes the object
    # @param [Hash] attributes Model attributes in the form of hash
    def initialize(
      *,
      # Required properties
      @active : Bool? = nil,
      @code : String? = nil,
      @coupon : Stripe::Coupon? = nil,
      @created : Int64? = nil,
      @customer : Stripe::PromotionCodeCustomer? = nil,
      @expires_at : Int64? = nil,
      @id : String? = nil,
      @livemode : Bool? = nil,
      @max_redemptions : Int64? = nil,
      @metadata : Hash(String, String)? = nil,
      @object : String? = nil,
      @restrictions : Stripe::PromotionCodesResourceRestrictions? = nil,
      @times_redeemed : Int64? = nil
    )
    end

    # Show invalid properties with the reasons. Usually used together with valid?
    # @return Array for valid properties with the reasons
    def list_invalid_properties : Array(String)
      invalid_properties = Array(String).new
      invalid_properties
    end

    # Check to see if the all the properties in the model are valid
    # @return true if the model is valid
    def valid? : Bool
      _any_of_found = false
      json_string : String = self.to_json
      _any_of_found = self.class.openapi_any_of.any? do |_class|
        _any_of = begin
          _class.from_json(json_string)
        rescue
          nil
        end

        !_any_of.nil? && _any_of.not_nil!.valid?
      end
      return false if !_any_of_found

      true
    end

    # Generates #hash and #== methods from all fields
    # #== @return [Bool]
    # #hash calculates hash code according to all attributes.
    # #hash @return [UInt64] Hash code
    def_equals_and_hash(@active, @code, @coupon, @created, @customer, @expires_at, @id, @livemode, @max_redemptions, @metadata, @object, @restrictions, @times_redeemed)
  end
end
