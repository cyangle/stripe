#  Stripe API
#
# The Stripe REST API. Please see https://stripe.com/docs/api for more details.
#
# The version of the OpenAPI document: 2024-06-20
# Contact: dev-platform@stripe.com
# Generated by: https://openapi-generator.tech
#

require "../../core"

module Stripe
  class AmountDetailsSpecs
    include JSON::Serializable
    include JSON::Serializable::Unmapped
    include OpenApi::Validatable
    include OpenApi::Json

    # Optional Properties

    # The ATM withdrawal fee.
    @[JSON::Field(key: "atm_fee", type: Int64?, default: nil, required: false, nullable: false, emit_null: false)]
    getter atm_fee : Int64? = nil

    # The amount of cash requested by the cardholder.
    @[JSON::Field(key: "cashback_amount", type: Int64?, default: nil, required: false, nullable: false, emit_null: false)]
    getter cashback_amount : Int64? = nil

    # Initializes the object
    # @param [Hash] attributes Model attributes in the form of hash
    def initialize(
      *,
      # Optional properties
      @atm_fee : Int64? = nil,
      @cashback_amount : Int64? = nil
    )
    end

    # Show invalid properties with the reasons. Usually used together with valid?
    # @return Array for valid properties with the reasons
    def list_invalid_properties : Array(String)
      invalid_properties = Array(String).new

      invalid_properties
    end

    # Check to see if the all the properties in the model are valid
    # @return true if the model is valid
    def valid? : Bool
      true
    end

    # Custom attribute writer method checking allowed values (enum).
    # @param [Object] atm_fee Object to be assigned
    def atm_fee=(new_value : Int64?)
      @atm_fee = new_value
    end

    # Custom attribute writer method checking allowed values (enum).
    # @param [Object] cashback_amount Object to be assigned
    def cashback_amount=(new_value : Int64?)
      @cashback_amount = new_value
    end

    # Generates #hash and #== methods from all fields
    # #== @return [Bool]
    # #hash calculates hash code according to all attributes.
    # #hash @return [UInt64] Hash code
    def_equals_and_hash(@atm_fee, @cashback_amount)
  end
end
