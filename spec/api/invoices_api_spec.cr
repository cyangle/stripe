#  Stripe API
#
# The Stripe REST API. Please see https://stripe.com/docs/api for more details.
#
# The version of the OpenAPI document: 2022-08-01
# Contact: dev-platform@stripe.com
# Generated by: https://openapi-generator.tech
#

require "../spec_helper"

# Unit tests for Stripe::InvoicesApi
# Automatically generated by openapi-generator (https://openapi-generator.tech)
# Please update as you see appropriate
describe "InvoicesApi" do
  describe "test an instance of InvoicesApi" do
    it "should create an instance of InvoicesApi" do
      api_instance = Stripe::InvoicesApi.new
      api_instance.should be_a(Stripe::InvoicesApi)
    end
  end

  # unit tests for delete_invoices_invoice
  # &lt;p&gt;Permanently deletes a one-off invoice draft. This cannot be undone. Attempts to delete invoices that are no longer in a draft state will fail; once an invoice has been finalized or if an invoice is for a subscription, it must be &lt;a href&#x3D;\&quot;#void_invoice\&quot;&gt;voided&lt;/a&gt;.&lt;/p&gt;
  # @param invoice
  # @param [Hash] opts the optional parameters
  # @return [DeletedInvoice]
  describe "delete_invoices_invoice test" do
    it "should work" do
      # assertion here. ref: https://crystal-lang.org/reference/guides/testing.html
    end
  end

  # unit tests for get_invoices
  # &lt;p&gt;You can list all invoices, or list the invoices for a specific customer. The invoices are returned sorted by creation date, with the most recently created invoices appearing first.&lt;/p&gt;
  # @param [Hash] opts the optional parameters
  # @option opts [String] :ending_before A cursor for use in pagination. &#x60;ending_before&#x60; is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, starting with &#x60;obj_bar&#x60;, your subsequent call can include &#x60;ending_before&#x3D;obj_bar&#x60; in order to fetch the previous page of the list.
  # @option opts [String] :starting_after A cursor for use in pagination. &#x60;starting_after&#x60; is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, ending with &#x60;obj_foo&#x60;, your subsequent call can include &#x60;starting_after&#x3D;obj_foo&#x60; in order to fetch the next page of the list.
  # @option opts [Int32] :limit A limit on the number of objects to be returned. Limit can range between 1 and 100, and the default is 10.
  # @option opts [String] :customer Only return invoices for the customer specified by this customer ID.
  # @option opts [String] :subscription Only return invoices for the subscription specified by this subscription ID.
  # @option opts [Array(String)] :expand Specifies which fields in the response should be expanded.
  # @option opts [String] :collection_method The collection method of the invoice to retrieve. Either &#x60;charge_automatically&#x60; or &#x60;send_invoice&#x60;.
  # @option opts [String] :status The status of the invoice, one of &#x60;draft&#x60;, &#x60;open&#x60;, &#x60;paid&#x60;, &#x60;uncollectible&#x60;, or &#x60;void&#x60;. [Learn more](https://stripe.com/docs/billing/invoices/workflow#workflow-overview)
  # @option opts [GetAccountsCreatedParameter] :created
  # @option opts [GetAccountsCreatedParameter] :due_date
  # @return [InvoicesList]
  describe "get_invoices test" do
    it "should work" do
      # assertion here. ref: https://crystal-lang.org/reference/guides/testing.html
    end
  end

  # unit tests for get_invoices_invoice
  # &lt;p&gt;Retrieves the invoice with the given ID.&lt;/p&gt;
  # @param invoice
  # @param [Hash] opts the optional parameters
  # @option opts [Array(String)] :expand Specifies which fields in the response should be expanded.
  # @return [Invoice]
  describe "get_invoices_invoice test" do
    it "should work" do
      # assertion here. ref: https://crystal-lang.org/reference/guides/testing.html
    end
  end

  # unit tests for get_invoices_invoice_lines
  # &lt;p&gt;When retrieving an invoice, you’ll get a &lt;strong&gt;lines&lt;/strong&gt; property containing the total count of line items and the first handful of those items. There is also a URL where you can retrieve the full (paginated) list of line items.&lt;/p&gt;
  # @param invoice
  # @param [Hash] opts the optional parameters
  # @option opts [String] :ending_before A cursor for use in pagination. &#x60;ending_before&#x60; is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, starting with &#x60;obj_bar&#x60;, your subsequent call can include &#x60;ending_before&#x3D;obj_bar&#x60; in order to fetch the previous page of the list.
  # @option opts [String] :starting_after A cursor for use in pagination. &#x60;starting_after&#x60; is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, ending with &#x60;obj_foo&#x60;, your subsequent call can include &#x60;starting_after&#x3D;obj_foo&#x60; in order to fetch the next page of the list.
  # @option opts [Int32] :limit A limit on the number of objects to be returned. Limit can range between 1 and 100, and the default is 10.
  # @option opts [Array(String)] :expand Specifies which fields in the response should be expanded.
  # @return [InvoiceLinesList]
  describe "get_invoices_invoice_lines test" do
    it "should work" do
      # assertion here. ref: https://crystal-lang.org/reference/guides/testing.html
    end
  end

  # unit tests for get_invoices_search
  # &lt;p&gt;Search for invoices you’ve previously created using Stripe’s &lt;a href&#x3D;\&quot;/docs/search#search-query-language\&quot;&gt;Search Query Language&lt;/a&gt;. Don’t use search in read-after-write flows where strict consistency is necessary. Under normal operating conditions, data is searchable in less than a minute. Occasionally, propagation of new or updated data can be up to an hour behind during outages. Search functionality is not available to merchants in India.&lt;/p&gt;
  # @param query The search query string. See [search query language](https://stripe.com/docs/search#search-query-language) and the list of supported [query fields for invoices](https://stripe.com/docs/search#query-fields-for-invoices).
  # @param [Hash] opts the optional parameters
  # @option opts [String] :page A cursor for pagination across multiple pages of results. Don&#39;t include this parameter on the first call. Use the next_page value returned in a previous response to request subsequent results.
  # @option opts [Int32] :limit A limit on the number of objects to be returned. Limit can range between 1 and 100, and the default is 10.
  # @option opts [Array(String)] :expand Specifies which fields in the response should be expanded.
  # @return [SearchResult]
  describe "get_invoices_search test" do
    it "should work" do
      # assertion here. ref: https://crystal-lang.org/reference/guides/testing.html
    end
  end

  # unit tests for get_invoices_upcoming
  # &lt;p&gt;At any time, you can preview the upcoming invoice for a customer. This will show you all the charges that are pending, including subscription renewal charges, invoice item charges, etc. It will also show you any discounts that are applicable to the invoice.&lt;/p&gt;  &lt;p&gt;Note that when you are viewing an upcoming invoice, you are simply viewing a preview – the invoice has not yet been created. As such, the upcoming invoice will not show up in invoice listing calls, and you cannot use the API to pay or edit the invoice. If you want to change the amount that your customer will be billed, you can add, remove, or update pending invoice items, or update the customer’s discount.&lt;/p&gt;  &lt;p&gt;You can preview the effects of updating a subscription, including a preview of what proration will take place. To ensure that the actual proration is calculated exactly the same as the previewed proration, you should pass a &lt;code&gt;proration_date&lt;/code&gt; parameter when doing the actual subscription update. The value passed in should be the same as the &lt;code&gt;subscription_proration_date&lt;/code&gt; returned on the upcoming invoice resource. The recommended way to get only the prorations being previewed is to consider only proration line items where &lt;code&gt;period[start]&lt;/code&gt; is equal to the &lt;code&gt;subscription_proration_date&lt;/code&gt; on the upcoming invoice resource.&lt;/p&gt;
  # @param [Hash] opts the optional parameters
  # @option opts [Array(SubscriptionItemUpdateParams)] :subscription_items A list of up to 20 subscription items, each with an attached price.
  # @option opts [Bool] :subscription_cancel_at_period_end Boolean indicating whether this subscription should cancel at the end of the current period.
  # @option opts [Int32] :subscription_start_date Date a subscription is intended to start (can be future or past)
  # @option opts [CustomerDetailsParam] :customer_details Details about the customer you want to invoice or overrides for an existing customer.
  # @option opts [String] :subscription_proration_behavior Determines how to handle [prorations](https://stripe.com/docs/subscriptions/billing-cycle#prorations) when the billing cycle changes (e.g., when switching plans, resetting &#x60;billing_cycle_anchor&#x3D;now&#x60;, or starting a trial), or if an item&#39;s &#x60;quantity&#x60; changes.
  # @option opts [GetInvoicesUpcomingSubscriptionBillingCycleAnchorParameter] :subscription_billing_cycle_anchor For new subscriptions, a future timestamp to anchor the subscription&#39;s [billing cycle](https://stripe.com/docs/subscriptions/billing-cycle). This is used to determine the date of the first full invoice, and, for plans with &#x60;month&#x60; or &#x60;year&#x60; intervals, the day of the month for subsequent invoices. For existing subscriptions, the value can only be set to &#x60;now&#x60; or &#x60;unchanged&#x60;.
  # @option opts [Int32] :subscription_proration_date If previewing an update to a subscription, and doing proration, &#x60;subscription_proration_date&#x60; forces the proration to be calculated as though the update was done at the specified time. The time given must be within the current subscription period, and cannot be before the subscription was on its current plan. If set, &#x60;subscription&#x60;, and one of &#x60;subscription_items&#x60;, or &#x60;subscription_trial_end&#x60; are required. Also, &#x60;subscription_proration_behavior&#x60; cannot be set to &#39;none&#39;.
  # @option opts [GetInvoicesUpcomingSubscriptionTrialEndParameter] :subscription_trial_end If provided, the invoice returned will preview updating or creating a subscription with that trial end. If set, one of &#x60;subscription_items&#x60; or &#x60;subscription&#x60; is required.
  # @option opts [GetInvoicesUpcomingSubscriptionDefaultTaxRatesParameter] :subscription_default_tax_rates If provided, the invoice returned will preview updating or creating a subscription with these default tax rates. The default tax rates will apply to any line item that does not have &#x60;tax_rates&#x60; set.
  # @option opts [Bool] :subscription_trial_from_plan Indicates if a plan&#39;s &#x60;trial_period_days&#x60; should be applied to the subscription. Setting &#x60;subscription_trial_end&#x60; per subscription is preferred, and this defaults to &#x60;false&#x60;. Setting this flag to &#x60;true&#x60; together with &#x60;subscription_trial_end&#x60; is not allowed. See [Using trial periods on subscriptions](https://stripe.com/docs/billing/subscriptions/trials) to learn more.
  # @option opts [Array(InvoiceItemPreviewParams)] :invoice_items List of invoice items to add or update in the upcoming invoice preview.
  # @option opts [AutomaticTaxParam] :automatic_tax Settings for automatic tax lookup for this invoice preview.
  # @option opts [Array(String)] :expand Specifies which fields in the response should be expanded.
  # @option opts [String] :coupon The code of the coupon to apply. If &#x60;subscription&#x60; or &#x60;subscription_items&#x60; is provided, the invoice returned will preview updating or creating a subscription with that coupon. Otherwise, it will preview applying that coupon to the customer for the next upcoming invoice from among the customer&#39;s subscriptions. The invoice can be previewed without a coupon by passing this value as an empty string.
  # @option opts [GetInvoicesUpcomingDiscountsParameter] :discounts The coupons to redeem into discounts for the invoice preview. If not specified, inherits the discount from the customer or subscription. This only works for coupons directly applied to the invoice. To apply a coupon to a subscription, you must use the &#x60;coupon&#x60; parameter instead. Pass an empty string to avoid inheriting any discounts. To preview the upcoming invoice for a subscription that hasn&#39;t been created, use &#x60;coupon&#x60; instead.
  # @option opts [String] :currency The currency to preview this invoice in. Defaults to that of &#x60;customer&#x60; if not specified.
  # @option opts [String] :customer The identifier of the customer whose upcoming invoice you&#39;d like to retrieve.
  # @option opts [String] :subscription The identifier of the subscription for which you&#39;d like to retrieve the upcoming invoice. If not provided, but a &#x60;subscription_items&#x60; is provided, you will preview creating a subscription with those items. If neither &#x60;subscription&#x60; nor &#x60;subscription_items&#x60; is provided, you will retrieve the next upcoming invoice from among the customer&#39;s subscriptions.
  # @option opts [String] :schedule The identifier of the unstarted schedule whose upcoming invoice you&#39;d like to retrieve. Cannot be used with subscription or subscription fields.
  # @option opts [Bool] :subscription_cancel_now This simulates the subscription being canceled or expired immediately.
  # @option opts [GetInvoicesUpcomingSubscriptionCancelAtParameter] :subscription_cancel_at Timestamp indicating when the subscription should be scheduled to cancel. Will prorate if within the current period and prorations have been enabled using &#x60;proration_behavior&#x60;.
  # @return [Invoice]
  describe "get_invoices_upcoming test" do
    it "should work" do
      # assertion here. ref: https://crystal-lang.org/reference/guides/testing.html
    end
  end

  # unit tests for get_invoices_upcoming_lines
  # &lt;p&gt;When retrieving an upcoming invoice, you’ll get a &lt;strong&gt;lines&lt;/strong&gt; property containing the total count of line items and the first handful of those items. There is also a URL where you can retrieve the full (paginated) list of line items.&lt;/p&gt;
  # @param [Hash] opts the optional parameters
  # @option opts [String] :ending_before A cursor for use in pagination. &#x60;ending_before&#x60; is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, starting with &#x60;obj_bar&#x60;, your subsequent call can include &#x60;ending_before&#x3D;obj_bar&#x60; in order to fetch the previous page of the list.
  # @option opts [String] :starting_after A cursor for use in pagination. &#x60;starting_after&#x60; is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, ending with &#x60;obj_foo&#x60;, your subsequent call can include &#x60;starting_after&#x3D;obj_foo&#x60; in order to fetch the next page of the list.
  # @option opts [Int32] :limit A limit on the number of objects to be returned. Limit can range between 1 and 100, and the default is 10.
  # @option opts [Array(SubscriptionItemUpdateParams)] :subscription_items A list of up to 20 subscription items, each with an attached price.
  # @option opts [Bool] :subscription_cancel_at_period_end Boolean indicating whether this subscription should cancel at the end of the current period.
  # @option opts [Int32] :subscription_start_date Date a subscription is intended to start (can be future or past)
  # @option opts [CustomerDetailsParam] :customer_details Details about the customer you want to invoice or overrides for an existing customer.
  # @option opts [String] :subscription_proration_behavior Determines how to handle [prorations](https://stripe.com/docs/subscriptions/billing-cycle#prorations) when the billing cycle changes (e.g., when switching plans, resetting &#x60;billing_cycle_anchor&#x3D;now&#x60;, or starting a trial), or if an item&#39;s &#x60;quantity&#x60; changes.
  # @option opts [GetInvoicesUpcomingSubscriptionBillingCycleAnchorParameter] :subscription_billing_cycle_anchor For new subscriptions, a future timestamp to anchor the subscription&#39;s [billing cycle](https://stripe.com/docs/subscriptions/billing-cycle). This is used to determine the date of the first full invoice, and, for plans with &#x60;month&#x60; or &#x60;year&#x60; intervals, the day of the month for subsequent invoices. For existing subscriptions, the value can only be set to &#x60;now&#x60; or &#x60;unchanged&#x60;.
  # @option opts [Int32] :subscription_proration_date If previewing an update to a subscription, and doing proration, &#x60;subscription_proration_date&#x60; forces the proration to be calculated as though the update was done at the specified time. The time given must be within the current subscription period, and cannot be before the subscription was on its current plan. If set, &#x60;subscription&#x60;, and one of &#x60;subscription_items&#x60;, or &#x60;subscription_trial_end&#x60; are required. Also, &#x60;subscription_proration_behavior&#x60; cannot be set to &#39;none&#39;.
  # @option opts [GetInvoicesUpcomingSubscriptionTrialEndParameter] :subscription_trial_end If provided, the invoice returned will preview updating or creating a subscription with that trial end. If set, one of &#x60;subscription_items&#x60; or &#x60;subscription&#x60; is required.
  # @option opts [GetInvoicesUpcomingSubscriptionDefaultTaxRatesParameter] :subscription_default_tax_rates If provided, the invoice returned will preview updating or creating a subscription with these default tax rates. The default tax rates will apply to any line item that does not have &#x60;tax_rates&#x60; set.
  # @option opts [Bool] :subscription_trial_from_plan Indicates if a plan&#39;s &#x60;trial_period_days&#x60; should be applied to the subscription. Setting &#x60;subscription_trial_end&#x60; per subscription is preferred, and this defaults to &#x60;false&#x60;. Setting this flag to &#x60;true&#x60; together with &#x60;subscription_trial_end&#x60; is not allowed. See [Using trial periods on subscriptions](https://stripe.com/docs/billing/subscriptions/trials) to learn more.
  # @option opts [Array(InvoiceItemPreviewParams)] :invoice_items List of invoice items to add or update in the upcoming invoice preview.
  # @option opts [AutomaticTaxParam] :automatic_tax Settings for automatic tax lookup for this invoice preview.
  # @option opts [Array(String)] :expand Specifies which fields in the response should be expanded.
  # @option opts [String] :coupon The code of the coupon to apply. If &#x60;subscription&#x60; or &#x60;subscription_items&#x60; is provided, the invoice returned will preview updating or creating a subscription with that coupon. Otherwise, it will preview applying that coupon to the customer for the next upcoming invoice from among the customer&#39;s subscriptions. The invoice can be previewed without a coupon by passing this value as an empty string.
  # @option opts [GetInvoicesUpcomingDiscountsParameter] :discounts The coupons to redeem into discounts for the invoice preview. If not specified, inherits the discount from the customer or subscription. This only works for coupons directly applied to the invoice. To apply a coupon to a subscription, you must use the &#x60;coupon&#x60; parameter instead. Pass an empty string to avoid inheriting any discounts. To preview the upcoming invoice for a subscription that hasn&#39;t been created, use &#x60;coupon&#x60; instead.
  # @option opts [String] :currency The currency to preview this invoice in. Defaults to that of &#x60;customer&#x60; if not specified.
  # @option opts [String] :customer The identifier of the customer whose upcoming invoice you&#39;d like to retrieve.
  # @option opts [String] :subscription The identifier of the subscription for which you&#39;d like to retrieve the upcoming invoice. If not provided, but a &#x60;subscription_items&#x60; is provided, you will preview creating a subscription with those items. If neither &#x60;subscription&#x60; nor &#x60;subscription_items&#x60; is provided, you will retrieve the next upcoming invoice from among the customer&#39;s subscriptions.
  # @option opts [String] :schedule The identifier of the unstarted schedule whose upcoming invoice you&#39;d like to retrieve. Cannot be used with subscription or subscription fields.
  # @option opts [Bool] :subscription_cancel_now This simulates the subscription being canceled or expired immediately.
  # @option opts [GetInvoicesUpcomingSubscriptionCancelAtParameter] :subscription_cancel_at Timestamp indicating when the subscription should be scheduled to cancel. Will prorate if within the current period and prorations have been enabled using &#x60;proration_behavior&#x60;.
  # @return [InvoiceLinesList]
  describe "get_invoices_upcoming_lines test" do
    it "should work" do
      # assertion here. ref: https://crystal-lang.org/reference/guides/testing.html
    end
  end

  # unit tests for post_invoices
  # &lt;p&gt;This endpoint creates a draft invoice for a given customer. The invoice remains a draft until you &lt;a href&#x3D;\&quot;#finalize_invoice\&quot;&gt;finalize&lt;/a&gt; the invoice, which allows you to &lt;a href&#x3D;\&quot;#pay_invoice\&quot;&gt;pay&lt;/a&gt; or &lt;a href&#x3D;\&quot;#send_invoice\&quot;&gt;send&lt;/a&gt; the invoice to your customers.&lt;/p&gt;
  # @param [Hash] opts the optional parameters
  # @option opts [PostInvoicesRequestAccountTaxIds] :account_tax_ids
  # @option opts [Int32] :application_fee_amount A fee in cents (or local equivalent) that will be applied to the invoice and transferred to the application owner&#39;s Stripe account. The request must be made with an OAuth key or the Stripe-Account header in order to take an application fee. For more information, see the application fees [documentation](https://stripe.com/docs/billing/invoices/connect#collecting-fees).
  # @option opts [Bool] :auto_advance Controls whether Stripe will perform [automatic collection](https://stripe.com/docs/billing/invoices/workflow/#auto_advance) of the invoice. When &#x60;false&#x60;, the invoice&#39;s state will not automatically advance without an explicit action.
  # @option opts [AutomaticTaxParam] :automatic_tax
  # @option opts [String] :collection_method Either &#x60;charge_automatically&#x60;, or &#x60;send_invoice&#x60;. When charging automatically, Stripe will attempt to pay this invoice using the default source attached to the customer. When sending an invoice, Stripe will email this invoice to the customer with payment instructions. Defaults to &#x60;charge_automatically&#x60;.
  # @option opts [String] :currency The currency to create this invoice in. Defaults to that of &#x60;customer&#x60; if not specified.
  # @option opts [PostInvoicesRequestCustomFields] :custom_fields
  # @option opts [String] :customer The ID of the customer who will be billed.
  # @option opts [Int32] :days_until_due The number of days from when the invoice is created until it is due. Valid only for invoices where &#x60;collection_method&#x3D;send_invoice&#x60;.
  # @option opts [String] :default_payment_method ID of the default payment method for the invoice. It must belong to the customer associated with the invoice. If not set, defaults to the subscription&#39;s default payment method, if any, or to the default payment method in the customer&#39;s invoice settings.
  # @option opts [String] :default_source ID of the default payment source for the invoice. It must belong to the customer associated with the invoice and be in a chargeable state. If not set, defaults to the subscription&#39;s default source, if any, or to the customer&#39;s default source.
  # @option opts [Array(String)] :default_tax_rates The tax rates that will apply to any line item that does not have &#x60;tax_rates&#x60; set.
  # @option opts [String] :description An arbitrary string attached to the object. Often useful for displaying to users. Referenced as &#39;memo&#39; in the Dashboard.
  # @option opts [PostInvoicesRequestDiscounts] :discounts
  # @option opts [Int32] :due_date The date on which payment for this invoice is due. Valid only for invoices where &#x60;collection_method&#x3D;send_invoice&#x60;.
  # @option opts [Array(String)] :expand Specifies which fields in the response should be expanded.
  # @option opts [String] :footer Footer to be displayed on the invoice.
  # @option opts [FromInvoice] :from_invoice
  # @option opts [PostAccountsRequestMetadata] :metadata
  # @option opts [String] :on_behalf_of The account (if any) for which the funds of the invoice payment are intended. If set, the invoice will be presented with the branding and support information of the specified account. See the [Invoices with Connect](https://stripe.com/docs/billing/invoices/connect) documentation for details.
  # @option opts [PaymentSettings] :payment_settings
  # @option opts [String] :pending_invoice_items_behavior How to handle pending invoice items on invoice creation. One of &#x60;include&#x60; or &#x60;exclude&#x60;. &#x60;include&#x60; will include any pending invoice items, and will create an empty draft invoice if no pending invoice items exist. &#x60;exclude&#x60; will always create an empty invoice draft regardless if there are pending invoice items or not. Defaults to &#x60;exclude&#x60; if the parameter is omitted.
  # @option opts [PostInvoicesRequestRenderingOptions] :rendering_options
  # @option opts [String] :statement_descriptor Extra information about a charge for the customer&#39;s credit card statement. It must contain at least one letter. If not specified and this invoice is part of a subscription, the default &#x60;statement_descriptor&#x60; will be set to the first subscription item&#39;s product&#39;s &#x60;statement_descriptor&#x60;.
  # @option opts [String] :subscription The ID of the subscription to invoice, if any. If set, the created invoice will only include pending invoice items for that subscription and pending invoice items not associated with any subscription if &#x60;pending_invoice_items_behavior&#x60; is &#x60;include&#x60;. The subscription&#39;s billing cycle and regular subscription events won&#39;t be affected.
  # @option opts [TransferDataSpecs] :transfer_data
  # @return [Invoice]
  describe "post_invoices test" do
    it "should work" do
      # assertion here. ref: https://crystal-lang.org/reference/guides/testing.html
    end
  end

  # unit tests for post_invoices_invoice
  # &lt;p&gt;Draft invoices are fully editable. Once an invoice is &lt;a href&#x3D;\&quot;/docs/billing/invoices/workflow#finalized\&quot;&gt;finalized&lt;/a&gt;, monetary values, as well as &lt;code&gt;collection_method&lt;/code&gt;, become uneditable.&lt;/p&gt;  &lt;p&gt;If you would like to stop the Stripe Billing engine from automatically finalizing, reattempting payments on, sending reminders for, or &lt;a href&#x3D;\&quot;/docs/billing/invoices/reconciliation\&quot;&gt;automatically reconciling&lt;/a&gt; invoices, pass &lt;code&gt;auto_advance&#x3D;false&lt;/code&gt;.&lt;/p&gt;
  # @param invoice
  # @param [Hash] opts the optional parameters
  # @option opts [PostInvoicesRequestAccountTaxIds] :account_tax_ids
  # @option opts [Int32] :application_fee_amount A fee in cents (or local equivalent) that will be applied to the invoice and transferred to the application owner&#39;s Stripe account. The request must be made with an OAuth key or the Stripe-Account header in order to take an application fee. For more information, see the application fees [documentation](https://stripe.com/docs/billing/invoices/connect#collecting-fees).
  # @option opts [Bool] :auto_advance Controls whether Stripe will perform [automatic collection](https://stripe.com/docs/billing/invoices/workflow/#auto_advance) of the invoice.
  # @option opts [AutomaticTaxParam] :automatic_tax
  # @option opts [String] :collection_method Either &#x60;charge_automatically&#x60; or &#x60;send_invoice&#x60;. This field can be updated only on &#x60;draft&#x60; invoices.
  # @option opts [PostInvoicesInvoiceRequestCustomFields] :custom_fields
  # @option opts [Int32] :days_until_due The number of days from which the invoice is created until it is due. Only valid for invoices where &#x60;collection_method&#x3D;send_invoice&#x60;. This field can only be updated on &#x60;draft&#x60; invoices.
  # @option opts [String] :default_payment_method ID of the default payment method for the invoice. It must belong to the customer associated with the invoice. If not set, defaults to the subscription&#39;s default payment method, if any, or to the default payment method in the customer&#39;s invoice settings.
  # @option opts [String] :default_source ID of the default payment source for the invoice. It must belong to the customer associated with the invoice and be in a chargeable state. If not set, defaults to the subscription&#39;s default source, if any, or to the customer&#39;s default source.
  # @option opts [PostInvoicesInvoiceRequestDefaultTaxRates] :default_tax_rates
  # @option opts [String] :description An arbitrary string attached to the object. Often useful for displaying to users. Referenced as &#39;memo&#39; in the Dashboard.
  # @option opts [PostInvoicesInvoiceRequestDiscounts] :discounts
  # @option opts [Int32] :due_date The date on which payment for this invoice is due. Only valid for invoices where &#x60;collection_method&#x3D;send_invoice&#x60;. This field can only be updated on &#x60;draft&#x60; invoices.
  # @option opts [Array(String)] :expand Specifies which fields in the response should be expanded.
  # @option opts [String] :footer Footer to be displayed on the invoice.
  # @option opts [PostAccountsRequestMetadata] :metadata
  # @option opts [PostInvoicesInvoiceRequestOnBehalfOf] :on_behalf_of
  # @option opts [PaymentSettings] :payment_settings
  # @option opts [PostInvoicesRequestRenderingOptions] :rendering_options
  # @option opts [String] :statement_descriptor Extra information about a charge for the customer&#39;s credit card statement. It must contain at least one letter. If not specified and this invoice is part of a subscription, the default &#x60;statement_descriptor&#x60; will be set to the first subscription item&#39;s product&#39;s &#x60;statement_descriptor&#x60;.
  # @option opts [PostInvoicesInvoiceRequestTransferData] :transfer_data
  # @return [Invoice]
  describe "post_invoices_invoice test" do
    it "should work" do
      # assertion here. ref: https://crystal-lang.org/reference/guides/testing.html
    end
  end

  # unit tests for post_invoices_invoice_finalize
  # &lt;p&gt;Stripe automatically finalizes drafts before sending and attempting payment on invoices. However, if you’d like to finalize a draft invoice manually, you can do so using this method.&lt;/p&gt;
  # @param invoice
  # @param [Hash] opts the optional parameters
  # @option opts [Bool] :auto_advance Controls whether Stripe will perform [automatic collection](https://stripe.com/docs/invoicing/automatic-charging) of the invoice. When &#x60;false&#x60;, the invoice&#39;s state will not automatically advance without an explicit action.
  # @option opts [Array(String)] :expand Specifies which fields in the response should be expanded.
  # @return [Invoice]
  describe "post_invoices_invoice_finalize test" do
    it "should work" do
      # assertion here. ref: https://crystal-lang.org/reference/guides/testing.html
    end
  end

  # unit tests for post_invoices_invoice_mark_uncollectible
  # &lt;p&gt;Marking an invoice as uncollectible is useful for keeping track of bad debts that can be written off for accounting purposes.&lt;/p&gt;
  # @param invoice
  # @param [Hash] opts the optional parameters
  # @option opts [Array(String)] :expand Specifies which fields in the response should be expanded.
  # @return [Invoice]
  describe "post_invoices_invoice_mark_uncollectible test" do
    it "should work" do
      # assertion here. ref: https://crystal-lang.org/reference/guides/testing.html
    end
  end

  # unit tests for post_invoices_invoice_pay
  # &lt;p&gt;Stripe automatically creates and then attempts to collect payment on invoices for customers on subscriptions according to your &lt;a href&#x3D;\&quot;https://dashboard.stripe.com/account/billing/automatic\&quot;&gt;subscriptions settings&lt;/a&gt;. However, if you’d like to attempt payment on an invoice out of the normal collection schedule or for some other reason, you can do so.&lt;/p&gt;
  # @param invoice
  # @param [Hash] opts the optional parameters
  # @option opts [Array(String)] :expand Specifies which fields in the response should be expanded.
  # @option opts [Bool] :forgive In cases where the source used to pay the invoice has insufficient funds, passing &#x60;forgive&#x3D;true&#x60; controls whether a charge should be attempted for the full amount available on the source, up to the amount to fully pay the invoice. This effectively forgives the difference between the amount available on the source and the amount due.   Passing &#x60;forgive&#x3D;false&#x60; will fail the charge if the source hasn&#39;t been pre-funded with the right amount. An example for this case is with ACH Credit Transfers and wires: if the amount wired is less than the amount due by a small amount, you might want to forgive the difference. Defaults to &#x60;false&#x60;.
  # @option opts [String] :mandate ID of the mandate to be used for this invoice. It must correspond to the payment method used to pay the invoice, including the payment_method param or the invoice&#39;s default_payment_method or default_source, if set.
  # @option opts [Bool] :off_session Indicates if a customer is on or off-session while an invoice payment is attempted. Defaults to &#x60;true&#x60; (off-session).
  # @option opts [Bool] :paid_out_of_band Boolean representing whether an invoice is paid outside of Stripe. This will result in no charge being made. Defaults to &#x60;false&#x60;.
  # @option opts [String] :payment_method A PaymentMethod to be charged. The PaymentMethod must be the ID of a PaymentMethod belonging to the customer associated with the invoice being paid.
  # @option opts [String] :source A payment source to be charged. The source must be the ID of a source belonging to the customer associated with the invoice being paid.
  # @return [Invoice]
  describe "post_invoices_invoice_pay test" do
    it "should work" do
      # assertion here. ref: https://crystal-lang.org/reference/guides/testing.html
    end
  end

  # unit tests for post_invoices_invoice_send
  # &lt;p&gt;Stripe will automatically send invoices to customers according to your &lt;a href&#x3D;\&quot;https://dashboard.stripe.com/account/billing/automatic\&quot;&gt;subscriptions settings&lt;/a&gt;. However, if you’d like to manually send an invoice to your customer out of the normal schedule, you can do so. When sending invoices that have already been paid, there will be no reference to the payment in the email.&lt;/p&gt;  &lt;p&gt;Requests made in test-mode result in no emails being sent, despite sending an &lt;code&gt;invoice.sent&lt;/code&gt; event.&lt;/p&gt;
  # @param invoice
  # @param [Hash] opts the optional parameters
  # @option opts [Array(String)] :expand Specifies which fields in the response should be expanded.
  # @return [Invoice]
  describe "post_invoices_invoice_send test" do
    it "should work" do
      # assertion here. ref: https://crystal-lang.org/reference/guides/testing.html
    end
  end

  # unit tests for post_invoices_invoice_void
  # &lt;p&gt;Mark a finalized invoice as void. This cannot be undone. Voiding an invoice is similar to &lt;a href&#x3D;\&quot;#delete_invoice\&quot;&gt;deletion&lt;/a&gt;, however it only applies to finalized invoices and maintains a papertrail where the invoice can still be found.&lt;/p&gt;
  # @param invoice
  # @param [Hash] opts the optional parameters
  # @option opts [Array(String)] :expand Specifies which fields in the response should be expanded.
  # @return [Invoice]
  describe "post_invoices_invoice_void test" do
    it "should work" do
      # assertion here. ref: https://crystal-lang.org/reference/guides/testing.html
    end
  end
end
