#  Stripe API
#
# The Stripe REST API. Please see https://stripe.com/docs/api for more details.
#
# The version of the OpenAPI document: 2022-11-15
# Contact: dev-platform@stripe.com
# Generated by: https://openapi-generator.tech
#

require "../spec_helper"

# Unit tests for Stripe::PromotionCodesApi
# Automatically generated by openapi-generator (https://openapi-generator.tech)
# Please update as you see appropriate
describe "PromotionCodesApi" do
  describe "test an instance of PromotionCodesApi" do
    it "should create an instance of PromotionCodesApi" do
      api_instance = Stripe::PromotionCodesApi.new
      api_instance.should be_a(Stripe::PromotionCodesApi)
    end
  end

  # unit tests for get_promotion_codes
  # &lt;p&gt;Returns a list of your promotion codes.&lt;/p&gt;
  # @param [Hash] opts the optional parameters
  # @option opts [String] :ending_before A cursor for use in pagination. &#x60;ending_before&#x60; is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, starting with &#x60;obj_bar&#x60;, your subsequent call can include &#x60;ending_before&#x3D;obj_bar&#x60; in order to fetch the previous page of the list.
  # @option opts [String] :starting_after A cursor for use in pagination. &#x60;starting_after&#x60; is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, ending with &#x60;obj_foo&#x60;, your subsequent call can include &#x60;starting_after&#x3D;obj_foo&#x60; in order to fetch the next page of the list.
  # @option opts [GetAccountsCreatedParameter] :created A filter on the list, based on the object &#x60;created&#x60; field. The value can be a string with an integer Unix timestamp, or it can be a dictionary with a number of different query options.
  # @option opts [Int32] :limit A limit on the number of objects to be returned. Limit can range between 1 and 100, and the default is 10.
  # @option opts [Bool] :active Filter promotion codes by whether they are active.
  # @option opts [String] :coupon Only return promotion codes for this coupon.
  # @option opts [String] :customer Only return promotion codes that are restricted to this customer.
  # @option opts [String] :code Only return promotion codes that have this case-insensitive code.
  # @option opts [Array(String)] :expand Specifies which fields in the response should be expanded.
  # @return [PromotionCodesResourcePromotionCodeList]
  describe "get_promotion_codes test" do
    it "should work" do
      # assertion here. ref: https://crystal-lang.org/reference/guides/testing.html
    end
  end

  # unit tests for get_promotion_codes_promotion_code
  # &lt;p&gt;Retrieves the promotion code with the given ID. In order to retrieve a promotion code by the customer-facing &lt;code&gt;code&lt;/code&gt; use &lt;a href&#x3D;\&quot;/docs/api/promotion_codes/list\&quot;&gt;list&lt;/a&gt; with the desired &lt;code&gt;code&lt;/code&gt;.&lt;/p&gt;
  # @param promotion_code
  # @param [Hash] opts the optional parameters
  # @option opts [Array(String)] :expand Specifies which fields in the response should be expanded.
  # @return [PromotionCode]
  describe "get_promotion_codes_promotion_code test" do
    it "should work" do
      # assertion here. ref: https://crystal-lang.org/reference/guides/testing.html
    end
  end

  # unit tests for post_promotion_codes
  # &lt;p&gt;A promotion code points to a coupon. You can optionally restrict the code to a specific customer, redemption limit, and expiration date.&lt;/p&gt;
  # @param post_promotion_codes_request
  # @param [Hash] opts the optional parameters
  # @return [PromotionCode]
  describe "post_promotion_codes test" do
    it "should work" do
      # assertion here. ref: https://crystal-lang.org/reference/guides/testing.html
    end
  end

  # unit tests for post_promotion_codes_promotion_code
  # &lt;p&gt;Updates the specified promotion code by setting the values of the parameters passed. Most fields are, by design, not editable.&lt;/p&gt;
  # @param promotion_code
  # @param [Hash] opts the optional parameters
  # @option opts [PostPromotionCodesPromotionCodeRequest] :post_promotion_codes_promotion_code_request
  # @return [PromotionCode]
  describe "post_promotion_codes_promotion_code test" do
    it "should work" do
      # assertion here. ref: https://crystal-lang.org/reference/guides/testing.html
    end
  end
end
