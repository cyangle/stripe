#  Stripe API
#
# The Stripe REST API. Please see https://stripe.com/docs/api for more details.
#
# The version of the OpenAPI document: 2024-06-20
# Contact: dev-platform@stripe.com
# Generated by: https://openapi-generator.tech
#

require "../spec_helper"
require "../../src/stripe/api/payment_method_domains_api"

# Unit tests for Stripe::PaymentMethodDomainsApi
# Automatically generated by openapi-generator (https://openapi-generator.tech)
# Please update as you see appropriate
describe "PaymentMethodDomainsApi" do
  describe "test an instance of PaymentMethodDomainsApi" do
    it "should create an instance of PaymentMethodDomainsApi" do
      api_instance = Stripe::PaymentMethodDomainsApi.new
      api_instance.should be_a(Stripe::PaymentMethodDomainsApi)
    end
  end

  # unit tests for get_payment_method_domains
  # &lt;p&gt;Lists the details of existing payment method domains.&lt;/p&gt;
  # @param [Hash] opts the optional parameters
  # @option opts [String] :ending_before A cursor for use in pagination. &#x60;ending_before&#x60; is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, starting with &#x60;obj_bar&#x60;, your subsequent call can include &#x60;ending_before&#x3D;obj_bar&#x60; in order to fetch the previous page of the list.
  # @option opts [String] :starting_after A cursor for use in pagination. &#x60;starting_after&#x60; is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, ending with &#x60;obj_foo&#x60;, your subsequent call can include &#x60;starting_after&#x3D;obj_foo&#x60; in order to fetch the next page of the list.
  # @option opts [Int32] :limit A limit on the number of objects to be returned. Limit can range between 1 and 100, and the default is 10.
  # @option opts [Array(String)] :expand Specifies which fields in the response should be expanded.
  # @option opts [String] :domain_name The domain name that this payment method domain object represents.
  # @option opts [Bool] :enabled Whether this payment method domain is enabled. If the domain is not enabled, payment methods will not appear in Elements
  # @return [PaymentMethodDomainResourcePaymentMethodDomainList]
  describe "get_payment_method_domains test" do
    it "should work" do
      # assertion here. ref: https://crystal-lang.org/reference/guides/testing.html
    end
  end

  # unit tests for get_payment_method_domains_payment_method_domain
  # &lt;p&gt;Retrieves the details of an existing payment method domain.&lt;/p&gt;
  # @param payment_method_domain
  # @param [Hash] opts the optional parameters
  # @option opts [Array(String)] :expand Specifies which fields in the response should be expanded.
  # @return [PaymentMethodDomain]
  describe "get_payment_method_domains_payment_method_domain test" do
    it "should work" do
      # assertion here. ref: https://crystal-lang.org/reference/guides/testing.html
    end
  end

  # unit tests for post_payment_method_domains
  # &lt;p&gt;Creates a payment method domain.&lt;/p&gt;
  # @param domain_name The domain name that this payment method domain object represents.
  # @param [Hash] opts the optional parameters
  # @option opts [Bool] :enabled Whether this payment method domain is enabled. If the domain is not enabled, payment methods that require a payment method domain will not appear in Elements.
  # @option opts [Array(String)] :expand Specifies which fields in the response should be expanded.
  # @return [PaymentMethodDomain]
  describe "post_payment_method_domains test" do
    it "should work" do
      # assertion here. ref: https://crystal-lang.org/reference/guides/testing.html
    end
  end

  # unit tests for post_payment_method_domains_payment_method_domain
  # &lt;p&gt;Updates an existing payment method domain.&lt;/p&gt;
  # @param payment_method_domain
  # @param [Hash] opts the optional parameters
  # @option opts [Bool] :enabled Whether this payment method domain is enabled. If the domain is not enabled, payment methods that require a payment method domain will not appear in Elements.
  # @option opts [Array(String)] :expand Specifies which fields in the response should be expanded.
  # @return [PaymentMethodDomain]
  describe "post_payment_method_domains_payment_method_domain test" do
    it "should work" do
      # assertion here. ref: https://crystal-lang.org/reference/guides/testing.html
    end
  end

  # unit tests for post_payment_method_domains_payment_method_domain_validate
  # &lt;p&gt;Some payment methods such as Apple Pay require additional steps to verify a domain. If the requirements weren’t satisfied when the domain was created, the payment method will be inactive on the domain. The payment method doesn’t appear in Elements for this domain until it is active.&lt;/p&gt;  &lt;p&gt;To activate a payment method on an existing payment method domain, complete the required validation steps specific to the payment method, and then validate the payment method domain with this endpoint.&lt;/p&gt;  &lt;p&gt;Related guides: &lt;a href&#x3D;\&quot;/docs/payments/payment-methods/pmd-registration\&quot;&gt;Payment method domains&lt;/a&gt;.&lt;/p&gt;
  # @param payment_method_domain
  # @param [Hash] opts the optional parameters
  # @option opts [Array(String)] :expand Specifies which fields in the response should be expanded.
  # @return [PaymentMethodDomain]
  describe "post_payment_method_domains_payment_method_domain_validate test" do
    it "should work" do
      # assertion here. ref: https://crystal-lang.org/reference/guides/testing.html
    end
  end
end
