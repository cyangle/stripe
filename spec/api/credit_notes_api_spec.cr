#  Stripe API
#
# The Stripe REST API. Please see https://stripe.com/docs/api for more details.
#
# The version of the OpenAPI document: 2022-08-01
# Contact: dev-platform@stripe.com
# Generated by: https://openapi-generator.tech
#

require "../spec_helper"

# Unit tests for Stripe::CreditNotesApi
# Automatically generated by openapi-generator (https://openapi-generator.tech)
# Please update as you see appropriate
describe "CreditNotesApi" do
  describe "test an instance of CreditNotesApi" do
    it "should create an instance of CreditNotesApi" do
      api_instance = Stripe::CreditNotesApi.new
      api_instance.should be_a(Stripe::CreditNotesApi)
    end
  end

  # unit tests for get_credit_notes
  # &lt;p&gt;Returns a list of credit notes.&lt;/p&gt;
  # @param [Hash] opts the optional parameters
  # @option opts [String] :ending_before A cursor for use in pagination. &#x60;ending_before&#x60; is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, starting with &#x60;obj_bar&#x60;, your subsequent call can include &#x60;ending_before&#x3D;obj_bar&#x60; in order to fetch the previous page of the list.
  # @option opts [String] :starting_after A cursor for use in pagination. &#x60;starting_after&#x60; is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, ending with &#x60;obj_foo&#x60;, your subsequent call can include &#x60;starting_after&#x3D;obj_foo&#x60; in order to fetch the next page of the list.
  # @option opts [Int32] :limit A limit on the number of objects to be returned. Limit can range between 1 and 100, and the default is 10.
  # @option opts [String] :customer Only return credit notes for the customer specified by this customer ID.
  # @option opts [String] :invoice Only return credit notes for the invoice specified by this invoice ID.
  # @option opts [Array(String)] :expand Specifies which fields in the response should be expanded.
  # @return [CreditNotesList]
  describe "get_credit_notes test" do
    it "should work" do
      # assertion here. ref: https://crystal-lang.org/reference/guides/testing.html
    end
  end

  # unit tests for get_credit_notes_credit_note_lines
  # &lt;p&gt;When retrieving a credit note, you’ll get a &lt;strong&gt;lines&lt;/strong&gt; property containing the the first handful of those items. There is also a URL where you can retrieve the full (paginated) list of line items.&lt;/p&gt;
  # @param credit_note
  # @param [Hash] opts the optional parameters
  # @option opts [String] :ending_before A cursor for use in pagination. &#x60;ending_before&#x60; is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, starting with &#x60;obj_bar&#x60;, your subsequent call can include &#x60;ending_before&#x3D;obj_bar&#x60; in order to fetch the previous page of the list.
  # @option opts [String] :starting_after A cursor for use in pagination. &#x60;starting_after&#x60; is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, ending with &#x60;obj_foo&#x60;, your subsequent call can include &#x60;starting_after&#x3D;obj_foo&#x60; in order to fetch the next page of the list.
  # @option opts [Int32] :limit A limit on the number of objects to be returned. Limit can range between 1 and 100, and the default is 10.
  # @option opts [Array(String)] :expand Specifies which fields in the response should be expanded.
  # @return [CreditNoteLinesList]
  describe "get_credit_notes_credit_note_lines test" do
    it "should work" do
      # assertion here. ref: https://crystal-lang.org/reference/guides/testing.html
    end
  end

  # unit tests for get_credit_notes_id
  # &lt;p&gt;Retrieves the credit note object with the given identifier.&lt;/p&gt;
  # @param id
  # @param [Hash] opts the optional parameters
  # @option opts [Array(String)] :expand Specifies which fields in the response should be expanded.
  # @return [CreditNote]
  describe "get_credit_notes_id test" do
    it "should work" do
      # assertion here. ref: https://crystal-lang.org/reference/guides/testing.html
    end
  end

  # unit tests for get_credit_notes_preview
  # &lt;p&gt;Get a preview of a credit note without creating it.&lt;/p&gt;
  # @param invoice ID of the invoice.
  # @param [Hash] opts the optional parameters
  # @option opts [String] :refund ID of an existing refund to link this credit note to.
  # @option opts [Array(CreditNoteLineItemParams)] :lines Line items that make up the credit note.
  # @option opts [String] :reason Reason for issuing this credit note, one of &#x60;duplicate&#x60;, &#x60;fraudulent&#x60;, &#x60;order_change&#x60;, or &#x60;product_unsatisfactory&#x60;
  # @option opts [Hash(String, String)] :metadata Set of [key-value pairs](https://stripe.com/docs/api/metadata) that you can attach to an object. This can be useful for storing additional information about the object in a structured format. Individual keys can be unset by posting an empty value to them. All keys can be unset by posting an empty value to &#x60;metadata&#x60;.
  # @option opts [Array(String)] :expand Specifies which fields in the response should be expanded.
  # @option opts [String] :memo The credit note&#39;s memo appears on the credit note PDF.
  # @option opts [Int32] :out_of_band_amount The integer amount in cents (or local equivalent) representing the amount that is credited outside of Stripe.
  # @option opts [Int32] :credit_amount The integer amount in cents (or local equivalent) representing the amount to credit the customer&#39;s balance, which will be automatically applied to their next invoice.
  # @option opts [Int32] :refund_amount The integer amount in cents (or local equivalent) representing the amount to refund. If set, a refund will be created for the charge associated with the invoice.
  # @option opts [Int32] :amount The integer amount in cents (or local equivalent) representing the total amount of the credit note.
  # @return [CreditNote]
  describe "get_credit_notes_preview test" do
    it "should work" do
      # assertion here. ref: https://crystal-lang.org/reference/guides/testing.html
    end
  end

  # unit tests for get_credit_notes_preview_lines
  # &lt;p&gt;When retrieving a credit note preview, you’ll get a &lt;strong&gt;lines&lt;/strong&gt; property containing the first handful of those items. This URL you can retrieve the full (paginated) list of line items.&lt;/p&gt;
  # @param invoice ID of the invoice.
  # @param [Hash] opts the optional parameters
  # @option opts [String] :ending_before A cursor for use in pagination. &#x60;ending_before&#x60; is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, starting with &#x60;obj_bar&#x60;, your subsequent call can include &#x60;ending_before&#x3D;obj_bar&#x60; in order to fetch the previous page of the list.
  # @option opts [String] :starting_after A cursor for use in pagination. &#x60;starting_after&#x60; is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, ending with &#x60;obj_foo&#x60;, your subsequent call can include &#x60;starting_after&#x3D;obj_foo&#x60; in order to fetch the next page of the list.
  # @option opts [Int32] :limit A limit on the number of objects to be returned. Limit can range between 1 and 100, and the default is 10.
  # @option opts [String] :refund ID of an existing refund to link this credit note to.
  # @option opts [Array(CreditNoteLineItemParams)] :lines Line items that make up the credit note.
  # @option opts [String] :reason Reason for issuing this credit note, one of &#x60;duplicate&#x60;, &#x60;fraudulent&#x60;, &#x60;order_change&#x60;, or &#x60;product_unsatisfactory&#x60;
  # @option opts [Hash(String, String)] :metadata Set of [key-value pairs](https://stripe.com/docs/api/metadata) that you can attach to an object. This can be useful for storing additional information about the object in a structured format. Individual keys can be unset by posting an empty value to them. All keys can be unset by posting an empty value to &#x60;metadata&#x60;.
  # @option opts [Array(String)] :expand Specifies which fields in the response should be expanded.
  # @option opts [String] :memo The credit note&#39;s memo appears on the credit note PDF.
  # @option opts [Int32] :out_of_band_amount The integer amount in cents (or local equivalent) representing the amount that is credited outside of Stripe.
  # @option opts [Int32] :credit_amount The integer amount in cents (or local equivalent) representing the amount to credit the customer&#39;s balance, which will be automatically applied to their next invoice.
  # @option opts [Int32] :refund_amount The integer amount in cents (or local equivalent) representing the amount to refund. If set, a refund will be created for the charge associated with the invoice.
  # @option opts [Int32] :amount The integer amount in cents (or local equivalent) representing the total amount of the credit note.
  # @return [CreditNoteLinesList]
  describe "get_credit_notes_preview_lines test" do
    it "should work" do
      # assertion here. ref: https://crystal-lang.org/reference/guides/testing.html
    end
  end

  # unit tests for post_credit_notes
  # &lt;p&gt;Issue a credit note to adjust the amount of a finalized invoice. For a &lt;code&gt;status&#x3D;open&lt;/code&gt; invoice, a credit note reduces its &lt;code&gt;amount_due&lt;/code&gt;. For a &lt;code&gt;status&#x3D;paid&lt;/code&gt; invoice, a credit note does not affect its &lt;code&gt;amount_due&lt;/code&gt;. Instead, it can result in any combination of the following:&lt;/p&gt;  &lt;ul&gt; &lt;li&gt;Refund: create a new refund (using &lt;code&gt;refund_amount&lt;/code&gt;) or link an existing refund (using &lt;code&gt;refund&lt;/code&gt;).&lt;/li&gt; &lt;li&gt;Customer balance credit: credit the customer’s balance (using &lt;code&gt;credit_amount&lt;/code&gt;) which will be automatically applied to their next invoice when it’s finalized.&lt;/li&gt; &lt;li&gt;Outside of Stripe credit: record the amount that is or will be credited outside of Stripe (using &lt;code&gt;out_of_band_amount&lt;/code&gt;).&lt;/li&gt; &lt;/ul&gt;  &lt;p&gt;For post-payment credit notes the sum of the refund, credit and outside of Stripe amounts must equal the credit note total.&lt;/p&gt;  &lt;p&gt;You may issue multiple credit notes for an invoice. Each credit note will increment the invoice’s &lt;code&gt;pre_payment_credit_notes_amount&lt;/code&gt; or &lt;code&gt;post_payment_credit_notes_amount&lt;/code&gt; depending on its &lt;code&gt;status&lt;/code&gt; at the time of credit note creation.&lt;/p&gt;
  # @param post_credit_notes_request
  # @param [Hash] opts the optional parameters
  # @return [CreditNote]
  describe "post_credit_notes test" do
    it "should work" do
      # assertion here. ref: https://crystal-lang.org/reference/guides/testing.html
    end
  end

  # unit tests for post_credit_notes_id
  # &lt;p&gt;Updates an existing credit note.&lt;/p&gt;
  # @param id
  # @param [Hash] opts the optional parameters
  # @option opts [PostCreditNotesIdRequest] :post_credit_notes_id_request
  # @return [CreditNote]
  describe "post_credit_notes_id test" do
    it "should work" do
      # assertion here. ref: https://crystal-lang.org/reference/guides/testing.html
    end
  end

  # unit tests for post_credit_notes_id_void
  # &lt;p&gt;Marks a credit note as void. Learn more about &lt;a href&#x3D;\&quot;/docs/billing/invoices/credit-notes#voiding\&quot;&gt;voiding credit notes&lt;/a&gt;.&lt;/p&gt;
  # @param id
  # @param [Hash] opts the optional parameters
  # @option opts [PostAccountsAccountLoginLinksRequest] :post_accounts_account_login_links_request
  # @return [CreditNote]
  describe "post_credit_notes_id_void test" do
    it "should work" do
      # assertion here. ref: https://crystal-lang.org/reference/guides/testing.html
    end
  end
end
