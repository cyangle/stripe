#  Stripe API
#
# The Stripe REST API. Please see https://stripe.com/docs/api for more details.
#
# The version of the OpenAPI document: 2022-08-01
# Contact: dev-platform@stripe.com
# Generated by: https://openapi-generator.tech
#

require "../spec_helper"

# Unit tests for Stripe::ProductsApi
# Automatically generated by openapi-generator (https://openapi-generator.tech)
# Please update as you see appropriate
describe "ProductsApi" do
  describe "test an instance of ProductsApi" do
    it "should create an instance of ProductsApi" do
      api_instance = Stripe::ProductsApi.new
      api_instance.should be_a(Stripe::ProductsApi)
    end
  end

  # unit tests for delete_products_id
  # &lt;p&gt;Delete a product. Deleting a product is only possible if it has no prices associated with it. Additionally, deleting a product with &lt;code&gt;type&#x3D;good&lt;/code&gt; is only possible if it has no SKUs associated with it.&lt;/p&gt;
  # @param id
  # @param [Hash] opts the optional parameters
  # @return [DeletedProduct]
  describe "delete_products_id test" do
    it "should work" do
      # assertion here. ref: https://crystal-lang.org/reference/guides/testing.html
    end
  end

  # unit tests for get_products
  # &lt;p&gt;Returns a list of your products. The products are returned sorted by creation date, with the most recently created products appearing first.&lt;/p&gt;
  # @param [Hash] opts the optional parameters
  # @option opts [String] :ending_before A cursor for use in pagination. &#x60;ending_before&#x60; is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, starting with &#x60;obj_bar&#x60;, your subsequent call can include &#x60;ending_before&#x3D;obj_bar&#x60; in order to fetch the previous page of the list.
  # @option opts [String] :starting_after A cursor for use in pagination. &#x60;starting_after&#x60; is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, ending with &#x60;obj_foo&#x60;, your subsequent call can include &#x60;starting_after&#x3D;obj_foo&#x60; in order to fetch the next page of the list.
  # @option opts [Int32] :limit A limit on the number of objects to be returned. Limit can range between 1 and 100, and the default is 10.
  # @option opts [Bool] :active Only return products that are active or inactive (e.g., pass &#x60;false&#x60; to list all inactive products).
  # @option opts [Bool] :shippable Only return products that can be shipped (i.e., physical, not digital products).
  # @option opts [GetAccountsCreatedParameter] :created Only return products that were created during the given date interval.
  # @option opts [Array(String)] :ids Only return products with the given IDs. Cannot be used with [starting_after](https://stripe.com/docs/api#list_products-starting_after) or [ending_before](https://stripe.com/docs/api#list_products-ending_before).
  # @option opts [String] :url Only return products with the given url.
  # @option opts [Array(String)] :expand Specifies which fields in the response should be expanded.
  # @return [ProductList]
  describe "get_products test" do
    it "should work" do
      # assertion here. ref: https://crystal-lang.org/reference/guides/testing.html
    end
  end

  # unit tests for get_products_id
  # &lt;p&gt;Retrieves the details of an existing product. Supply the unique product ID from either a product creation request or the product list, and Stripe will return the corresponding product information.&lt;/p&gt;
  # @param id
  # @param [Hash] opts the optional parameters
  # @option opts [Array(String)] :expand Specifies which fields in the response should be expanded.
  # @return [Product]
  describe "get_products_id test" do
    it "should work" do
      # assertion here. ref: https://crystal-lang.org/reference/guides/testing.html
    end
  end

  # unit tests for get_products_search
  # &lt;p&gt;Search for products you’ve previously created using Stripe’s &lt;a href&#x3D;\&quot;/docs/search#search-query-language\&quot;&gt;Search Query Language&lt;/a&gt;. Don’t use search in read-after-write flows where strict consistency is necessary. Under normal operating conditions, data is searchable in less than a minute. Occasionally, propagation of new or updated data can be up to an hour behind during outages. Search functionality is not available to merchants in India.&lt;/p&gt;
  # @param query The search query string. See [search query language](https://stripe.com/docs/search#search-query-language) and the list of supported [query fields for products](https://stripe.com/docs/search#query-fields-for-products).
  # @param [Hash] opts the optional parameters
  # @option opts [String] :page A cursor for pagination across multiple pages of results. Don&#39;t include this parameter on the first call. Use the next_page value returned in a previous response to request subsequent results.
  # @option opts [Int32] :limit A limit on the number of objects to be returned. Limit can range between 1 and 100, and the default is 10.
  # @option opts [Array(String)] :expand Specifies which fields in the response should be expanded.
  # @return [SearchResult]
  describe "get_products_search test" do
    it "should work" do
      # assertion here. ref: https://crystal-lang.org/reference/guides/testing.html
    end
  end

  # unit tests for post_products
  # &lt;p&gt;Creates a new product object.&lt;/p&gt;
  # @param name The product&#39;s name, meant to be displayable to the customer.
  # @param [Hash] opts the optional parameters
  # @option opts [Bool] :active Whether the product is currently available for purchase. Defaults to &#x60;true&#x60;.
  # @option opts [PriceDataWithoutProduct] :default_price_data
  # @option opts [String] :description The product&#39;s description, meant to be displayable to the customer. Use this field to optionally store a long form explanation of the product being sold for your own rendering purposes.
  # @option opts [Array(String)] :expand Specifies which fields in the response should be expanded.
  # @option opts [String] :id An identifier will be randomly generated by Stripe. You can optionally override this ID, but the ID must be unique across all products in your Stripe account.
  # @option opts [Array(String)] :images A list of up to 8 URLs of images for this product, meant to be displayable to the customer.
  # @option opts [PackageDimensionsSpecs] :package_dimensions
  # @option opts [Bool] :shippable Whether this product is shipped (i.e., physical goods).
  # @option opts [String] :statement_descriptor An arbitrary string to be displayed on your customer&#39;s credit card or bank statement. While most banks display this information consistently, some may display it incorrectly or not at all.  This may be up to 22 characters. The statement description may not include &#x60;&lt;&#x60;, &#x60;&gt;&#x60;, &#x60;\\\\&#x60;, &#x60;\\\&quot;&#x60;, &#x60;&#39;&#x60; characters, and will appear on your customer&#39;s statement in capital letters. Non-ASCII characters are automatically stripped.  It must contain at least one letter.
  # @option opts [String] :tax_code A [tax code](https://stripe.com/docs/tax/tax-categories) ID.
  # @option opts [String] :unit_label A label that represents units of this product in Stripe and on customers’ receipts and invoices. When set, this will be included in associated invoice line item descriptions.
  # @option opts [String] :url A URL of a publicly-accessible webpage for this product.
  # @return [Product]
  describe "post_products test" do
    it "should work" do
      # assertion here. ref: https://crystal-lang.org/reference/guides/testing.html
    end
  end

  # unit tests for post_products_id
  # &lt;p&gt;Updates the specific product by setting the values of the parameters passed. Any parameters not provided will be left unchanged.&lt;/p&gt;
  # @param id
  # @param [Hash] opts the optional parameters
  # @option opts [Bool] :active Whether the product is available for purchase.
  # @option opts [String] :default_price The ID of the [Price](https://stripe.com/docs/api/prices) object that is the default price for this product.
  # @option opts [String] :description The product&#39;s description, meant to be displayable to the customer. Use this field to optionally store a long form explanation of the product being sold for your own rendering purposes.
  # @option opts [Array(String)] :expand Specifies which fields in the response should be expanded.
  # @option opts [PostProductsIdRequestImages] :images
  # @option opts [PostAccountsRequestMetadata] :metadata
  # @option opts [String] :name The product&#39;s name, meant to be displayable to the customer.
  # @option opts [PostProductsIdRequestPackageDimensions] :package_dimensions
  # @option opts [Bool] :shippable Whether this product is shipped (i.e., physical goods).
  # @option opts [String] :statement_descriptor An arbitrary string to be displayed on your customer&#39;s credit card or bank statement. While most banks display this information consistently, some may display it incorrectly or not at all.  This may be up to 22 characters. The statement description may not include &#x60;&lt;&#x60;, &#x60;&gt;&#x60;, &#x60;\\\\&#x60;, &#x60;\\\&quot;&#x60;, &#x60;&#39;&#x60; characters, and will appear on your customer&#39;s statement in capital letters. Non-ASCII characters are automatically stripped.  It must contain at least one letter. May only be set if &#x60;type&#x3D;service&#x60;.
  # @option opts [PostProductsIdRequestTaxCode] :tax_code
  # @option opts [String] :unit_label A label that represents units of this product in Stripe and on customers’ receipts and invoices. When set, this will be included in associated invoice line item descriptions. May only be set if &#x60;type&#x3D;service&#x60;.
  # @option opts [PostProductsIdRequestUrl] :url
  # @return [Product]
  describe "post_products_id test" do
    it "should work" do
      # assertion here. ref: https://crystal-lang.org/reference/guides/testing.html
    end
  end
end
