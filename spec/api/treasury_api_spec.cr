#  Stripe API
#
# The Stripe REST API. Please see https://stripe.com/docs/api for more details.
#
# The version of the OpenAPI document: 2022-08-01
# Contact: dev-platform@stripe.com
# Generated by: https://openapi-generator.tech
#

require "../spec_helper"

# Unit tests for Stripe::TreasuryApi
# Automatically generated by openapi-generator (https://openapi-generator.tech)
# Please update as you see appropriate
describe "TreasuryApi" do
  describe "test an instance of TreasuryApi" do
    it "should create an instance of TreasuryApi" do
      api_instance = Stripe::TreasuryApi.new
      api_instance.should be_a(Stripe::TreasuryApi)
    end
  end

  # unit tests for get_treasury_credit_reversals
  # &lt;p&gt;Returns a list of CreditReversals.&lt;/p&gt;
  # @param financial_account Returns objects associated with this FinancialAccount.
  # @param [Hash] opts the optional parameters
  # @option opts [String] :ending_before A cursor for use in pagination. &#x60;ending_before&#x60; is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, starting with &#x60;obj_bar&#x60;, your subsequent call can include &#x60;ending_before&#x3D;obj_bar&#x60; in order to fetch the previous page of the list.
  # @option opts [String] :starting_after A cursor for use in pagination. &#x60;starting_after&#x60; is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, ending with &#x60;obj_foo&#x60;, your subsequent call can include &#x60;starting_after&#x3D;obj_foo&#x60; in order to fetch the next page of the list.
  # @option opts [Int32] :limit A limit on the number of objects to be returned. Limit can range between 1 and 100, and the default is 10.
  # @option opts [String] :status Only return CreditReversals for a given status.
  # @option opts [String] :received_credit Only return CreditReversals for the ReceivedCredit ID.
  # @option opts [Array(String)] :expand Specifies which fields in the response should be expanded.
  # @return [TreasuryReceivedCreditsResourceCreditReversalList]
  describe "get_treasury_credit_reversals test" do
    it "should work" do
      # assertion here. ref: https://crystal-lang.org/reference/guides/testing.html
    end
  end

  # unit tests for get_treasury_credit_reversals_credit_reversal
  # &lt;p&gt;Retrieves the details of an existing CreditReversal by passing the unique CreditReversal ID from either the CreditReversal creation request or CreditReversal list&lt;/p&gt;
  # @param credit_reversal
  # @param [Hash] opts the optional parameters
  # @option opts [Array(String)] :expand Specifies which fields in the response should be expanded.
  # @return [TreasuryCreditReversal]
  describe "get_treasury_credit_reversals_credit_reversal test" do
    it "should work" do
      # assertion here. ref: https://crystal-lang.org/reference/guides/testing.html
    end
  end

  # unit tests for get_treasury_debit_reversals
  # &lt;p&gt;Returns a list of DebitReversals.&lt;/p&gt;
  # @param financial_account Returns objects associated with this FinancialAccount.
  # @param [Hash] opts the optional parameters
  # @option opts [String] :ending_before A cursor for use in pagination. &#x60;ending_before&#x60; is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, starting with &#x60;obj_bar&#x60;, your subsequent call can include &#x60;ending_before&#x3D;obj_bar&#x60; in order to fetch the previous page of the list.
  # @option opts [String] :starting_after A cursor for use in pagination. &#x60;starting_after&#x60; is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, ending with &#x60;obj_foo&#x60;, your subsequent call can include &#x60;starting_after&#x3D;obj_foo&#x60; in order to fetch the next page of the list.
  # @option opts [Int32] :limit A limit on the number of objects to be returned. Limit can range between 1 and 100, and the default is 10.
  # @option opts [String] :resolution Only return DebitReversals for a given resolution.
  # @option opts [String] :status Only return DebitReversals for a given status.
  # @option opts [String] :received_debit Only return DebitReversals for the ReceivedDebit ID.
  # @option opts [Array(String)] :expand Specifies which fields in the response should be expanded.
  # @return [TreasuryReceivedDebitsResourceDebitReversalList]
  describe "get_treasury_debit_reversals test" do
    it "should work" do
      # assertion here. ref: https://crystal-lang.org/reference/guides/testing.html
    end
  end

  # unit tests for get_treasury_debit_reversals_debit_reversal
  # &lt;p&gt;Retrieves a DebitReversal object.&lt;/p&gt;
  # @param debit_reversal
  # @param [Hash] opts the optional parameters
  # @option opts [Array(String)] :expand Specifies which fields in the response should be expanded.
  # @return [TreasuryDebitReversal]
  describe "get_treasury_debit_reversals_debit_reversal test" do
    it "should work" do
      # assertion here. ref: https://crystal-lang.org/reference/guides/testing.html
    end
  end

  # unit tests for get_treasury_financial_accounts
  # &lt;p&gt;Returns a list of FinancialAccounts.&lt;/p&gt;
  # @param [Hash] opts the optional parameters
  # @option opts [Int32] :limit A limit ranging from 1 to 100 (defaults to 10).
  # @option opts [String] :ending_before An object ID cursor for use in pagination.
  # @option opts [String] :starting_after An object ID cursor for use in pagination.
  # @option opts [Array(String)] :expand Specifies which fields in the response should be expanded.
  # @option opts [GetAccountsCreatedParameter] :created
  # @return [TreasuryFinancialAccountsResourceFinancialAccountList]
  describe "get_treasury_financial_accounts test" do
    it "should work" do
      # assertion here. ref: https://crystal-lang.org/reference/guides/testing.html
    end
  end

  # unit tests for get_treasury_financial_accounts_financial_account
  # &lt;p&gt;Retrieves the details of a FinancialAccount.&lt;/p&gt;
  # @param financial_account
  # @param [Hash] opts the optional parameters
  # @option opts [Array(String)] :expand Specifies which fields in the response should be expanded.
  # @return [TreasuryFinancialAccount]
  describe "get_treasury_financial_accounts_financial_account test" do
    it "should work" do
      # assertion here. ref: https://crystal-lang.org/reference/guides/testing.html
    end
  end

  # unit tests for get_treasury_financial_accounts_financial_account_features
  # &lt;p&gt;Retrieves Features information associated with the FinancialAccount.&lt;/p&gt;
  # @param financial_account
  # @param [Hash] opts the optional parameters
  # @option opts [Array(String)] :expand Specifies which fields in the response should be expanded.
  # @return [TreasuryFinancialAccountFeatures]
  describe "get_treasury_financial_accounts_financial_account_features test" do
    it "should work" do
      # assertion here. ref: https://crystal-lang.org/reference/guides/testing.html
    end
  end

  # unit tests for get_treasury_inbound_transfers
  # &lt;p&gt;Returns a list of InboundTransfers sent from the specified FinancialAccount.&lt;/p&gt;
  # @param financial_account Returns objects associated with this FinancialAccount.
  # @param [Hash] opts the optional parameters
  # @option opts [String] :ending_before A cursor for use in pagination. &#x60;ending_before&#x60; is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, starting with &#x60;obj_bar&#x60;, your subsequent call can include &#x60;ending_before&#x3D;obj_bar&#x60; in order to fetch the previous page of the list.
  # @option opts [String] :starting_after A cursor for use in pagination. &#x60;starting_after&#x60; is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, ending with &#x60;obj_foo&#x60;, your subsequent call can include &#x60;starting_after&#x3D;obj_foo&#x60; in order to fetch the next page of the list.
  # @option opts [Int32] :limit A limit on the number of objects to be returned. Limit can range between 1 and 100, and the default is 10.
  # @option opts [String] :status Only return InboundTransfers that have the given status: &#x60;processing&#x60;, &#x60;succeeded&#x60;, &#x60;failed&#x60; or &#x60;canceled&#x60;.
  # @option opts [Array(String)] :expand Specifies which fields in the response should be expanded.
  # @return [TreasuryInboundTransfersResourceInboundTransferList]
  describe "get_treasury_inbound_transfers test" do
    it "should work" do
      # assertion here. ref: https://crystal-lang.org/reference/guides/testing.html
    end
  end

  # unit tests for get_treasury_inbound_transfers_id
  # &lt;p&gt;Retrieves the details of an existing InboundTransfer.&lt;/p&gt;
  # @param id
  # @param [Hash] opts the optional parameters
  # @option opts [Array(String)] :expand Specifies which fields in the response should be expanded.
  # @return [TreasuryInboundTransfer]
  describe "get_treasury_inbound_transfers_id test" do
    it "should work" do
      # assertion here. ref: https://crystal-lang.org/reference/guides/testing.html
    end
  end

  # unit tests for get_treasury_outbound_payments
  # &lt;p&gt;Returns a list of OutboundPayments sent from the specified FinancialAccount.&lt;/p&gt;
  # @param financial_account Returns objects associated with this FinancialAccount.
  # @param [Hash] opts the optional parameters
  # @option opts [String] :ending_before A cursor for use in pagination. &#x60;ending_before&#x60; is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, starting with &#x60;obj_bar&#x60;, your subsequent call can include &#x60;ending_before&#x3D;obj_bar&#x60; in order to fetch the previous page of the list.
  # @option opts [String] :starting_after A cursor for use in pagination. &#x60;starting_after&#x60; is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, ending with &#x60;obj_foo&#x60;, your subsequent call can include &#x60;starting_after&#x3D;obj_foo&#x60; in order to fetch the next page of the list.
  # @option opts [Int32] :limit A limit on the number of objects to be returned. Limit can range between 1 and 100, and the default is 10.
  # @option opts [String] :customer Only return OutboundPayments sent to this customer.
  # @option opts [String] :status Only return OutboundPayments that have the given status: &#x60;processing&#x60;, &#x60;failed&#x60;, &#x60;posted&#x60;, &#x60;returned&#x60;, or &#x60;canceled&#x60;.
  # @option opts [Array(String)] :expand Specifies which fields in the response should be expanded.
  # @return [TreasuryOutboundPaymentsResourceOutboundPaymentList]
  describe "get_treasury_outbound_payments test" do
    it "should work" do
      # assertion here. ref: https://crystal-lang.org/reference/guides/testing.html
    end
  end

  # unit tests for get_treasury_outbound_payments_id
  # &lt;p&gt;Retrieves the details of an existing OutboundPayment by passing the unique OutboundPayment ID from either the OutboundPayment creation request or OutboundPayment list.&lt;/p&gt;
  # @param id
  # @param [Hash] opts the optional parameters
  # @option opts [Array(String)] :expand Specifies which fields in the response should be expanded.
  # @return [TreasuryOutboundPayment]
  describe "get_treasury_outbound_payments_id test" do
    it "should work" do
      # assertion here. ref: https://crystal-lang.org/reference/guides/testing.html
    end
  end

  # unit tests for get_treasury_outbound_transfers
  # &lt;p&gt;Returns a list of OutboundTransfers sent from the specified FinancialAccount.&lt;/p&gt;
  # @param financial_account Returns objects associated with this FinancialAccount.
  # @param [Hash] opts the optional parameters
  # @option opts [String] :ending_before A cursor for use in pagination. &#x60;ending_before&#x60; is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, starting with &#x60;obj_bar&#x60;, your subsequent call can include &#x60;ending_before&#x3D;obj_bar&#x60; in order to fetch the previous page of the list.
  # @option opts [String] :starting_after A cursor for use in pagination. &#x60;starting_after&#x60; is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, ending with &#x60;obj_foo&#x60;, your subsequent call can include &#x60;starting_after&#x3D;obj_foo&#x60; in order to fetch the next page of the list.
  # @option opts [Int32] :limit A limit on the number of objects to be returned. Limit can range between 1 and 100, and the default is 10.
  # @option opts [String] :status Only return OutboundTransfers that have the given status: &#x60;processing&#x60;, &#x60;canceled&#x60;, &#x60;failed&#x60;, &#x60;posted&#x60;, or &#x60;returned&#x60;.
  # @option opts [Array(String)] :expand Specifies which fields in the response should be expanded.
  # @return [TreasuryOutboundTransfersResourceOutboundTransferList]
  describe "get_treasury_outbound_transfers test" do
    it "should work" do
      # assertion here. ref: https://crystal-lang.org/reference/guides/testing.html
    end
  end

  # unit tests for get_treasury_outbound_transfers_outbound_transfer
  # &lt;p&gt;Retrieves the details of an existing OutboundTransfer by passing the unique OutboundTransfer ID from either the OutboundTransfer creation request or OutboundTransfer list.&lt;/p&gt;
  # @param outbound_transfer
  # @param [Hash] opts the optional parameters
  # @option opts [Array(String)] :expand Specifies which fields in the response should be expanded.
  # @return [TreasuryOutboundTransfer]
  describe "get_treasury_outbound_transfers_outbound_transfer test" do
    it "should work" do
      # assertion here. ref: https://crystal-lang.org/reference/guides/testing.html
    end
  end

  # unit tests for get_treasury_received_credits
  # &lt;p&gt;Returns a list of ReceivedCredits.&lt;/p&gt;
  # @param financial_account The FinancialAccount that received the funds.
  # @param [Hash] opts the optional parameters
  # @option opts [String] :ending_before A cursor for use in pagination. &#x60;ending_before&#x60; is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, starting with &#x60;obj_bar&#x60;, your subsequent call can include &#x60;ending_before&#x3D;obj_bar&#x60; in order to fetch the previous page of the list.
  # @option opts [String] :starting_after A cursor for use in pagination. &#x60;starting_after&#x60; is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, ending with &#x60;obj_foo&#x60;, your subsequent call can include &#x60;starting_after&#x3D;obj_foo&#x60; in order to fetch the next page of the list.
  # @option opts [Int32] :limit A limit on the number of objects to be returned. Limit can range between 1 and 100, and the default is 10.
  # @option opts [LinkedFlowsParam] :linked_flows Only return ReceivedCredits described by the flow.
  # @option opts [String] :status Only return ReceivedCredits that have the given status: &#x60;succeeded&#x60; or &#x60;failed&#x60;.
  # @option opts [Array(String)] :expand Specifies which fields in the response should be expanded.
  # @return [TreasuryReceivedCreditsResourceReceivedCreditList]
  describe "get_treasury_received_credits test" do
    it "should work" do
      # assertion here. ref: https://crystal-lang.org/reference/guides/testing.html
    end
  end

  # unit tests for get_treasury_received_credits_id
  # &lt;p&gt;Retrieves the details of an existing ReceivedCredit by passing the unique ReceivedCredit ID from the ReceivedCredit list.&lt;/p&gt;
  # @param id
  # @param [Hash] opts the optional parameters
  # @option opts [Array(String)] :expand Specifies which fields in the response should be expanded.
  # @return [TreasuryReceivedCredit]
  describe "get_treasury_received_credits_id test" do
    it "should work" do
      # assertion here. ref: https://crystal-lang.org/reference/guides/testing.html
    end
  end

  # unit tests for get_treasury_received_debits
  # &lt;p&gt;Returns a list of ReceivedDebits.&lt;/p&gt;
  # @param financial_account The FinancialAccount that funds were pulled from.
  # @param [Hash] opts the optional parameters
  # @option opts [String] :ending_before A cursor for use in pagination. &#x60;ending_before&#x60; is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, starting with &#x60;obj_bar&#x60;, your subsequent call can include &#x60;ending_before&#x3D;obj_bar&#x60; in order to fetch the previous page of the list.
  # @option opts [String] :starting_after A cursor for use in pagination. &#x60;starting_after&#x60; is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, ending with &#x60;obj_foo&#x60;, your subsequent call can include &#x60;starting_after&#x3D;obj_foo&#x60; in order to fetch the next page of the list.
  # @option opts [Int32] :limit A limit on the number of objects to be returned. Limit can range between 1 and 100, and the default is 10.
  # @option opts [String] :status Only return ReceivedDebits that have the given status: &#x60;succeeded&#x60; or &#x60;failed&#x60;.
  # @option opts [Array(String)] :expand Specifies which fields in the response should be expanded.
  # @return [TreasuryReceivedDebitsResourceReceivedDebitList]
  describe "get_treasury_received_debits test" do
    it "should work" do
      # assertion here. ref: https://crystal-lang.org/reference/guides/testing.html
    end
  end

  # unit tests for get_treasury_received_debits_id
  # &lt;p&gt;Retrieves the details of an existing ReceivedDebit by passing the unique ReceivedDebit ID from the ReceivedDebit list&lt;/p&gt;
  # @param id
  # @param [Hash] opts the optional parameters
  # @option opts [Array(String)] :expand Specifies which fields in the response should be expanded.
  # @return [TreasuryReceivedDebit]
  describe "get_treasury_received_debits_id test" do
    it "should work" do
      # assertion here. ref: https://crystal-lang.org/reference/guides/testing.html
    end
  end

  # unit tests for get_treasury_transaction_entries
  # &lt;p&gt;Retrieves a list of TransactionEntry objects.&lt;/p&gt;
  # @param financial_account Returns objects associated with this FinancialAccount.
  # @param [Hash] opts the optional parameters
  # @option opts [String] :ending_before A cursor for use in pagination. &#x60;ending_before&#x60; is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, starting with &#x60;obj_bar&#x60;, your subsequent call can include &#x60;ending_before&#x3D;obj_bar&#x60; in order to fetch the previous page of the list.
  # @option opts [String] :starting_after A cursor for use in pagination. &#x60;starting_after&#x60; is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, ending with &#x60;obj_foo&#x60;, your subsequent call can include &#x60;starting_after&#x3D;obj_foo&#x60; in order to fetch the next page of the list.
  # @option opts [Int32] :limit A limit on the number of objects to be returned. Limit can range between 1 and 100, and the default is 10.
  # @option opts [String] :transaction Only return TransactionEntries associated with this Transaction.
  # @option opts [Array(String)] :expand Specifies which fields in the response should be expanded.
  # @option opts [String] :order_by The results are in reverse chronological order by &#x60;created&#x60; or &#x60;effective_at&#x60;. The default is &#x60;created&#x60;.
  # @option opts [GetAccountsCreatedParameter] :created
  # @option opts [GetAccountsCreatedParameter] :effective_at
  # @return [TreasuryTransactionsResourceTransactionEntryList]
  describe "get_treasury_transaction_entries test" do
    it "should work" do
      # assertion here. ref: https://crystal-lang.org/reference/guides/testing.html
    end
  end

  # unit tests for get_treasury_transaction_entries_id
  # &lt;p&gt;Retrieves a TransactionEntry object.&lt;/p&gt;
  # @param id
  # @param [Hash] opts the optional parameters
  # @option opts [Array(String)] :expand Specifies which fields in the response should be expanded.
  # @return [TreasuryTransactionEntry]
  describe "get_treasury_transaction_entries_id test" do
    it "should work" do
      # assertion here. ref: https://crystal-lang.org/reference/guides/testing.html
    end
  end

  # unit tests for get_treasury_transactions
  # &lt;p&gt;Retrieves a list of Transaction objects.&lt;/p&gt;
  # @param financial_account Returns objects associated with this FinancialAccount.
  # @param [Hash] opts the optional parameters
  # @option opts [String] :ending_before A cursor for use in pagination. &#x60;ending_before&#x60; is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, starting with &#x60;obj_bar&#x60;, your subsequent call can include &#x60;ending_before&#x3D;obj_bar&#x60; in order to fetch the previous page of the list.
  # @option opts [String] :starting_after A cursor for use in pagination. &#x60;starting_after&#x60; is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, ending with &#x60;obj_foo&#x60;, your subsequent call can include &#x60;starting_after&#x3D;obj_foo&#x60; in order to fetch the next page of the list.
  # @option opts [StatusTransitionTimestampSpecs] :status_transitions A filter for the &#x60;status_transitions.posted_at&#x60; timestamp. When using this filter, &#x60;status&#x3D;posted&#x60; and &#x60;order_by&#x3D;posted_at&#x60; must also be specified.
  # @option opts [Int32] :limit A limit on the number of objects to be returned. Limit can range between 1 and 100, and the default is 10.
  # @option opts [String] :status Only return Transactions that have the given status: &#x60;open&#x60;, &#x60;posted&#x60;, or &#x60;void&#x60;.
  # @option opts [Array(String)] :expand Specifies which fields in the response should be expanded.
  # @option opts [String] :order_by The results are in reverse chronological order by &#x60;created&#x60; or &#x60;posted_at&#x60;. The default is &#x60;created&#x60;.
  # @option opts [GetAccountsCreatedParameter] :created
  # @return [TreasuryTransactionsResourceTransactionList]
  describe "get_treasury_transactions test" do
    it "should work" do
      # assertion here. ref: https://crystal-lang.org/reference/guides/testing.html
    end
  end

  # unit tests for get_treasury_transactions_id
  # &lt;p&gt;Retrieves the details of an existing Transaction.&lt;/p&gt;
  # @param id
  # @param [Hash] opts the optional parameters
  # @option opts [Array(String)] :expand Specifies which fields in the response should be expanded.
  # @return [TreasuryTransaction]
  describe "get_treasury_transactions_id test" do
    it "should work" do
      # assertion here. ref: https://crystal-lang.org/reference/guides/testing.html
    end
  end

  # unit tests for post_treasury_credit_reversals
  # &lt;p&gt;Reverses a ReceivedCredit and creates a CreditReversal object.&lt;/p&gt;
  # @param received_credit The ReceivedCredit to reverse.
  # @param [Hash] opts the optional parameters
  # @option opts [Array(String)] :expand Specifies which fields in the response should be expanded.
  # @return [TreasuryCreditReversal]
  describe "post_treasury_credit_reversals test" do
    it "should work" do
      # assertion here. ref: https://crystal-lang.org/reference/guides/testing.html
    end
  end

  # unit tests for post_treasury_debit_reversals
  # &lt;p&gt;Reverses a ReceivedDebit and creates a DebitReversal object.&lt;/p&gt;
  # @param received_debit The ReceivedDebit to reverse.
  # @param [Hash] opts the optional parameters
  # @option opts [Array(String)] :expand Specifies which fields in the response should be expanded.
  # @return [TreasuryDebitReversal]
  describe "post_treasury_debit_reversals test" do
    it "should work" do
      # assertion here. ref: https://crystal-lang.org/reference/guides/testing.html
    end
  end

  # unit tests for post_treasury_financial_accounts
  # &lt;p&gt;Creates a new FinancialAccount. For now, each connected account can only have one FinancialAccount.&lt;/p&gt;
  # @param supported_currencies The currencies the FinancialAccount can hold a balance in.
  # @param [Hash] opts the optional parameters
  # @option opts [Array(String)] :expand Specifies which fields in the response should be expanded.
  # @option opts [FeatureAccess] :features
  # @option opts [PlatformRestrictions] :platform_restrictions
  # @return [TreasuryFinancialAccount]
  describe "post_treasury_financial_accounts test" do
    it "should work" do
      # assertion here. ref: https://crystal-lang.org/reference/guides/testing.html
    end
  end

  # unit tests for post_treasury_financial_accounts_financial_account
  # &lt;p&gt;Updates the details of a FinancialAccount.&lt;/p&gt;
  # @param financial_account
  # @param [Hash] opts the optional parameters
  # @option opts [Array(String)] :expand Specifies which fields in the response should be expanded.
  # @option opts [FeatureAccess] :features
  # @option opts [PlatformRestrictions] :platform_restrictions
  # @return [TreasuryFinancialAccount]
  describe "post_treasury_financial_accounts_financial_account test" do
    it "should work" do
      # assertion here. ref: https://crystal-lang.org/reference/guides/testing.html
    end
  end

  # unit tests for post_treasury_financial_accounts_financial_account_features
  # &lt;p&gt;Updates the Features associated with a FinancialAccount.&lt;/p&gt;
  # @param financial_account
  # @param [Hash] opts the optional parameters
  # @option opts [Access] :card_issuing
  # @option opts [Access] :deposit_insurance
  # @option opts [Array(String)] :expand Specifies which fields in the response should be expanded.
  # @option opts [FinancialAddresses] :financial_addresses
  # @option opts [InboundTransfers] :inbound_transfers
  # @option opts [Access] :intra_stripe_flows
  # @option opts [OutboundPayments] :outbound_payments
  # @option opts [OutboundTransfers] :outbound_transfers
  # @return [TreasuryFinancialAccountFeatures]
  describe "post_treasury_financial_accounts_financial_account_features test" do
    it "should work" do
      # assertion here. ref: https://crystal-lang.org/reference/guides/testing.html
    end
  end

  # unit tests for post_treasury_inbound_transfers
  # &lt;p&gt;Creates an InboundTransfer.&lt;/p&gt;
  # @param amount Amount (in cents) to be transferred.
  # @param currency Three-letter [ISO currency code](https://www.iso.org/iso-4217-currency-codes.html), in lowercase. Must be a [supported currency](https://stripe.com/docs/currencies).
  # @param financial_account The FinancialAccount to send funds to.
  # @param origin_payment_method The origin payment method to be debited for the InboundTransfer.
  # @param [Hash] opts the optional parameters
  # @option opts [String] :description An arbitrary string attached to the object. Often useful for displaying to users.
  # @option opts [Array(String)] :expand Specifies which fields in the response should be expanded.
  # @option opts [String] :statement_descriptor The complete description that appears on your customers&#39; statements. Maximum 10 characters.
  # @return [TreasuryInboundTransfer]
  describe "post_treasury_inbound_transfers test" do
    it "should work" do
      # assertion here. ref: https://crystal-lang.org/reference/guides/testing.html
    end
  end

  # unit tests for post_treasury_inbound_transfers_inbound_transfer_cancel
  # &lt;p&gt;Cancels an InboundTransfer.&lt;/p&gt;
  # @param inbound_transfer
  # @param [Hash] opts the optional parameters
  # @option opts [Array(String)] :expand Specifies which fields in the response should be expanded.
  # @return [TreasuryInboundTransfer]
  describe "post_treasury_inbound_transfers_inbound_transfer_cancel test" do
    it "should work" do
      # assertion here. ref: https://crystal-lang.org/reference/guides/testing.html
    end
  end

  # unit tests for post_treasury_outbound_payments
  # &lt;p&gt;Creates an OutboundPayment.&lt;/p&gt;
  # @param amount Amount (in cents) to be transferred.
  # @param currency Three-letter [ISO currency code](https://www.iso.org/iso-4217-currency-codes.html), in lowercase. Must be a [supported currency](https://stripe.com/docs/currencies).
  # @param financial_account The FinancialAccount to pull funds from.
  # @param [Hash] opts the optional parameters
  # @option opts [String] :customer ID of the customer to whom the OutboundPayment is sent. Must match the Customer attached to the &#x60;destination_payment_method&#x60; passed in.
  # @option opts [String] :description An arbitrary string attached to the object. Often useful for displaying to users.
  # @option opts [String] :destination_payment_method The PaymentMethod to use as the payment instrument for the OutboundPayment. Exclusive with &#x60;destination_payment_method_data&#x60;.
  # @option opts [PaymentMethodData] :destination_payment_method_data
  # @option opts [PaymentMethodOptions] :destination_payment_method_options
  # @option opts [EndUserDetailsParams] :end_user_details
  # @option opts [Array(String)] :expand Specifies which fields in the response should be expanded.
  # @option opts [String] :statement_descriptor The description that appears on the receiving end for this OutboundPayment (for example, bank statement for external bank transfer). Maximum 10 characters for &#x60;ach&#x60; payments, 140 characters for &#x60;wire&#x60; payments, or 500 characters for &#x60;stripe&#x60; network transfers. The default value is &#x60;payment&#x60;.
  # @return [TreasuryOutboundPayment]
  describe "post_treasury_outbound_payments test" do
    it "should work" do
      # assertion here. ref: https://crystal-lang.org/reference/guides/testing.html
    end
  end

  # unit tests for post_treasury_outbound_payments_id_cancel
  # &lt;p&gt;Cancel an OutboundPayment.&lt;/p&gt;
  # @param id
  # @param [Hash] opts the optional parameters
  # @option opts [Array(String)] :expand Specifies which fields in the response should be expanded.
  # @return [TreasuryOutboundPayment]
  describe "post_treasury_outbound_payments_id_cancel test" do
    it "should work" do
      # assertion here. ref: https://crystal-lang.org/reference/guides/testing.html
    end
  end

  # unit tests for post_treasury_outbound_transfers
  # &lt;p&gt;Creates an OutboundTransfer.&lt;/p&gt;
  # @param amount Amount (in cents) to be transferred.
  # @param currency Three-letter [ISO currency code](https://www.iso.org/iso-4217-currency-codes.html), in lowercase. Must be a [supported currency](https://stripe.com/docs/currencies).
  # @param financial_account The FinancialAccount to pull funds from.
  # @param [Hash] opts the optional parameters
  # @option opts [String] :description An arbitrary string attached to the object. Often useful for displaying to users.
  # @option opts [String] :destination_payment_method The PaymentMethod to use as the payment instrument for the OutboundTransfer.
  # @option opts [PaymentMethodOptions] :destination_payment_method_options
  # @option opts [Array(String)] :expand Specifies which fields in the response should be expanded.
  # @option opts [String] :statement_descriptor Statement descriptor to be shown on the receiving end of an OutboundTransfer. Maximum 10 characters for &#x60;ach&#x60; transfers or 140 characters for &#x60;wire&#x60; transfers. The default value is &#x60;transfer&#x60;.
  # @return [TreasuryOutboundTransfer]
  describe "post_treasury_outbound_transfers test" do
    it "should work" do
      # assertion here. ref: https://crystal-lang.org/reference/guides/testing.html
    end
  end

  # unit tests for post_treasury_outbound_transfers_outbound_transfer_cancel
  # &lt;p&gt;An OutboundTransfer can be canceled if the funds have not yet been paid out.&lt;/p&gt;
  # @param outbound_transfer
  # @param [Hash] opts the optional parameters
  # @option opts [Array(String)] :expand Specifies which fields in the response should be expanded.
  # @return [TreasuryOutboundTransfer]
  describe "post_treasury_outbound_transfers_outbound_transfer_cancel test" do
    it "should work" do
      # assertion here. ref: https://crystal-lang.org/reference/guides/testing.html
    end
  end
end
