#  Stripe API
#
# The Stripe REST API. Please see https://stripe.com/docs/api for more details.
#
# The version of the OpenAPI document: 2024-06-20
# Contact: dev-platform@stripe.com
# Generated by: https://openapi-generator.tech
#

require "../spec_helper"
require "../../src/stripe/api/tax_ids_api"

# Unit tests for Stripe::TaxIdsApi
# Automatically generated by openapi-generator (https://openapi-generator.tech)
# Please update as you see appropriate
describe "TaxIdsApi" do
  describe "test an instance of TaxIdsApi" do
    it "should create an instance of TaxIdsApi" do
      api_instance = Stripe::TaxIdsApi.new
      api_instance.should be_a(Stripe::TaxIdsApi)
    end
  end

  # unit tests for delete_tax_ids_id
  # &lt;p&gt;Deletes an existing account or customer &lt;code&gt;tax_id&lt;/code&gt; object.&lt;/p&gt;
  # @param id
  # @param [Hash] opts the optional parameters
  # @return [DeletedTaxId]
  describe "delete_tax_ids_id test" do
    it "should work" do
      # assertion here. ref: https://crystal-lang.org/reference/guides/testing.html
    end
  end

  # unit tests for get_tax_ids
  # &lt;p&gt;Returns a list of tax IDs.&lt;/p&gt;
  # @param [Hash] opts the optional parameters
  # @option opts [String] :ending_before A cursor for use in pagination. &#x60;ending_before&#x60; is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, starting with &#x60;obj_bar&#x60;, your subsequent call can include &#x60;ending_before&#x3D;obj_bar&#x60; in order to fetch the previous page of the list.
  # @option opts [String] :starting_after A cursor for use in pagination. &#x60;starting_after&#x60; is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, ending with &#x60;obj_foo&#x60;, your subsequent call can include &#x60;starting_after&#x3D;obj_foo&#x60; in order to fetch the next page of the list.
  # @option opts [Int32] :limit A limit on the number of objects to be returned. Limit can range between 1 and 100, and the default is 10.
  # @option opts [Array(String)] :expand Specifies which fields in the response should be expanded.
  # @option opts [OwnerParams] :owner The account or customer the tax ID belongs to. Defaults to &#x60;owner[type]&#x3D;self&#x60;.
  # @return [TaxIDsList]
  describe "get_tax_ids test" do
    it "should work" do
      # assertion here. ref: https://crystal-lang.org/reference/guides/testing.html
    end
  end

  # unit tests for get_tax_ids_id
  # &lt;p&gt;Retrieves an account or customer &lt;code&gt;tax_id&lt;/code&gt; object.&lt;/p&gt;
  # @param id
  # @param [Hash] opts the optional parameters
  # @option opts [Array(String)] :expand Specifies which fields in the response should be expanded.
  # @return [TaxId]
  describe "get_tax_ids_id test" do
    it "should work" do
      # assertion here. ref: https://crystal-lang.org/reference/guides/testing.html
    end
  end

  # unit tests for post_tax_ids
  # &lt;p&gt;Creates a new account or customer &lt;code&gt;tax_id&lt;/code&gt; object.&lt;/p&gt;
  # @param _type Type of the tax ID, one of &#x60;ad_nrt&#x60;, &#x60;ae_trn&#x60;, &#x60;ar_cuit&#x60;, &#x60;au_abn&#x60;, &#x60;au_arn&#x60;, &#x60;bg_uic&#x60;, &#x60;bh_vat&#x60;, &#x60;bo_tin&#x60;, &#x60;br_cnpj&#x60;, &#x60;br_cpf&#x60;, &#x60;ca_bn&#x60;, &#x60;ca_gst_hst&#x60;, &#x60;ca_pst_bc&#x60;, &#x60;ca_pst_mb&#x60;, &#x60;ca_pst_sk&#x60;, &#x60;ca_qst&#x60;, &#x60;ch_uid&#x60;, &#x60;ch_vat&#x60;, &#x60;cl_tin&#x60;, &#x60;cn_tin&#x60;, &#x60;co_nit&#x60;, &#x60;cr_tin&#x60;, &#x60;de_stn&#x60;, &#x60;do_rcn&#x60;, &#x60;ec_ruc&#x60;, &#x60;eg_tin&#x60;, &#x60;es_cif&#x60;, &#x60;eu_oss_vat&#x60;, &#x60;eu_vat&#x60;, &#x60;gb_vat&#x60;, &#x60;ge_vat&#x60;, &#x60;hk_br&#x60;, &#x60;hr_oib&#x60;, &#x60;hu_tin&#x60;, &#x60;id_npwp&#x60;, &#x60;il_vat&#x60;, &#x60;in_gst&#x60;, &#x60;is_vat&#x60;, &#x60;jp_cn&#x60;, &#x60;jp_rn&#x60;, &#x60;jp_trn&#x60;, &#x60;ke_pin&#x60;, &#x60;kr_brn&#x60;, &#x60;kz_bin&#x60;, &#x60;li_uid&#x60;, &#x60;mx_rfc&#x60;, &#x60;my_frp&#x60;, &#x60;my_itn&#x60;, &#x60;my_sst&#x60;, &#x60;ng_tin&#x60;, &#x60;no_vat&#x60;, &#x60;no_voec&#x60;, &#x60;nz_gst&#x60;, &#x60;om_vat&#x60;, &#x60;pe_ruc&#x60;, &#x60;ph_tin&#x60;, &#x60;ro_tin&#x60;, &#x60;rs_pib&#x60;, &#x60;ru_inn&#x60;, &#x60;ru_kpp&#x60;, &#x60;sa_vat&#x60;, &#x60;sg_gst&#x60;, &#x60;sg_uen&#x60;, &#x60;si_tin&#x60;, &#x60;sv_nit&#x60;, &#x60;th_vat&#x60;, &#x60;tr_tin&#x60;, &#x60;tw_vat&#x60;, &#x60;ua_vat&#x60;, &#x60;us_ein&#x60;, &#x60;uy_ruc&#x60;, &#x60;ve_rif&#x60;, &#x60;vn_tin&#x60;, or &#x60;za_vat&#x60;
  # @param value Value of the tax ID.
  # @param [Hash] opts the optional parameters
  # @option opts [Array(String)] :expand Specifies which fields in the response should be expanded.
  # @option opts [OwnerParams] :owner
  # @return [TaxId]
  describe "post_tax_ids test" do
    it "should work" do
      # assertion here. ref: https://crystal-lang.org/reference/guides/testing.html
    end
  end
end
