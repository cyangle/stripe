#  Stripe API
#
# The Stripe REST API. Please see https://stripe.com/docs/api for more details.
#
# The version of the OpenAPI document: 2022-08-01
# Contact: dev-platform@stripe.com
# Generated by: https://openapi-generator.tech
#

require "../spec_helper"

# Unit tests for Stripe::FileLinksApi
# Automatically generated by openapi-generator (https://openapi-generator.tech)
# Please update as you see appropriate
describe "FileLinksApi" do
  describe "test an instance of FileLinksApi" do
    it "should create an instance of FileLinksApi" do
      api_instance = Stripe::FileLinksApi.new
      api_instance.should be_a(Stripe::FileLinksApi)
    end
  end

  # unit tests for get_file_links
  # &lt;p&gt;Returns a list of file links.&lt;/p&gt;
  # @param [Hash] opts the optional parameters
  # @option opts [String] :ending_before A cursor for use in pagination. &#x60;ending_before&#x60; is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, starting with &#x60;obj_bar&#x60;, your subsequent call can include &#x60;ending_before&#x3D;obj_bar&#x60; in order to fetch the previous page of the list.
  # @option opts [String] :starting_after A cursor for use in pagination. &#x60;starting_after&#x60; is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, ending with &#x60;obj_foo&#x60;, your subsequent call can include &#x60;starting_after&#x3D;obj_foo&#x60; in order to fetch the next page of the list.
  # @option opts [Int32] :limit A limit on the number of objects to be returned. Limit can range between 1 and 100, and the default is 10.
  # @option opts [Bool] :expired Filter links by their expiration status. By default, all links are returned.
  # @option opts [String] :file Only return links for the given file.
  # @option opts [Array(String)] :expand Specifies which fields in the response should be expanded.
  # @option opts [GetAccountsCreatedParameter] :created
  # @return [FileFileLinkList]
  describe "get_file_links test" do
    it "should work" do
      # assertion here. ref: https://crystal-lang.org/reference/guides/testing.html
    end
  end

  # unit tests for get_file_links_link
  # &lt;p&gt;Retrieves the file link with the given ID.&lt;/p&gt;
  # @param link
  # @param [Hash] opts the optional parameters
  # @option opts [Array(String)] :expand Specifies which fields in the response should be expanded.
  # @return [FileLink]
  describe "get_file_links_link test" do
    it "should work" do
      # assertion here. ref: https://crystal-lang.org/reference/guides/testing.html
    end
  end

  # unit tests for post_file_links
  # &lt;p&gt;Creates a new file link object.&lt;/p&gt;
  # @param post_file_links_request
  # @param [Hash] opts the optional parameters
  # @return [FileLink]
  describe "post_file_links test" do
    it "should work" do
      # assertion here. ref: https://crystal-lang.org/reference/guides/testing.html
    end
  end

  # unit tests for post_file_links_link
  # &lt;p&gt;Updates an existing file link object. Expired links can no longer be updated.&lt;/p&gt;
  # @param link
  # @param [Hash] opts the optional parameters
  # @option opts [PostFileLinksLinkRequest] :post_file_links_link_request
  # @return [FileLink]
  describe "post_file_links_link test" do
    it "should work" do
      # assertion here. ref: https://crystal-lang.org/reference/guides/testing.html
    end
  end
end
