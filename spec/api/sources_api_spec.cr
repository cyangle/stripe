#  Stripe API
#
# The Stripe REST API. Please see https://stripe.com/docs/api for more details.
#
# The version of the OpenAPI document: 2024-06-20
# Contact: dev-platform@stripe.com
# Generated by: https://openapi-generator.tech
#

require "../spec_helper"
require "../../src/stripe/api/sources_api"

# Unit tests for Stripe::SourcesApi
# Automatically generated by openapi-generator (https://openapi-generator.tech)
# Please update as you see appropriate
describe "SourcesApi" do
  describe "test an instance of SourcesApi" do
    it "should create an instance of SourcesApi" do
      api_instance = Stripe::SourcesApi.new
      api_instance.should be_a(Stripe::SourcesApi)
    end
  end

  # unit tests for get_sources_source
  # &lt;p&gt;Retrieves an existing source object. Supply the unique source ID from a source creation request and Stripe will return the corresponding up-to-date source object information.&lt;/p&gt;
  # @param source
  # @param [Hash] opts the optional parameters
  # @option opts [Array(String)] :expand Specifies which fields in the response should be expanded.
  # @option opts [String] :client_secret The client secret of the source. Required if a publishable key is used to retrieve the source.
  # @return [Source]
  describe "get_sources_source test" do
    it "should work" do
      # assertion here. ref: https://crystal-lang.org/reference/guides/testing.html
    end
  end

  # unit tests for post_sources
  # &lt;p&gt;Creates a new source object.&lt;/p&gt;
  # @param [Hash] opts the optional parameters
  # @option opts [Int32] :amount Amount associated with the source. This is the amount for which the source will be chargeable once ready. Required for &#x60;single_use&#x60; sources. Not supported for &#x60;receiver&#x60; type sources, where charge amount may not be specified until funds land.
  # @option opts [String] :currency Three-letter [ISO code for the currency](https://stripe.com/docs/currencies) associated with the source. This is the currency for which the source will be chargeable once ready.
  # @option opts [String] :customer The &#x60;Customer&#x60; to whom the original source is attached to. Must be set when the original source is not a &#x60;Source&#x60; (e.g., &#x60;Card&#x60;).
  # @option opts [Array(String)] :expand Specifies which fields in the response should be expanded.
  # @option opts [String] :flow The authentication &#x60;flow&#x60; of the source to create. &#x60;flow&#x60; is one of &#x60;redirect&#x60;, &#x60;receiver&#x60;, &#x60;code_verification&#x60;, &#x60;none&#x60;. It is generally inferred unless a type supports multiple flows.
  # @option opts [MandateParams] :mandate
  # @option opts [Hash(String, String)] :metadata
  # @option opts [String] :original_source The source to share.
  # @option opts [Owner] :owner
  # @option opts [ReceiverParams] :receiver
  # @option opts [RedirectParams] :redirect
  # @option opts [ShallowOrderSpecs] :source_order
  # @option opts [String] :statement_descriptor An arbitrary string to be displayed on your customer&#39;s statement. As an example, if your website is &#x60;RunClub&#x60; and the item you&#39;re charging for is a race ticket, you may want to specify a &#x60;statement_descriptor&#x60; of &#x60;RunClub 5K race ticket.&#x60; While many payment types will display this information, some may not display it at all.
  # @option opts [String] :token An optional token used to create the source. When passed, token properties will override source parameters.
  # @option opts [String] :_type The &#x60;type&#x60; of the source to create. Required unless &#x60;customer&#x60; and &#x60;original_source&#x60; are specified (see the [Cloning card Sources](https://stripe.com/docs/sources/connect#cloning-card-sources) guide)
  # @option opts [String] :usage
  # @return [Source]
  describe "post_sources test" do
    it "should work" do
      # assertion here. ref: https://crystal-lang.org/reference/guides/testing.html
    end
  end

  # unit tests for post_sources_source
  # &lt;p&gt;Updates the specified source by setting the values of the parameters passed. Any parameters not provided will be left unchanged.&lt;/p&gt;  &lt;p&gt;This request accepts the &lt;code&gt;metadata&lt;/code&gt; and &lt;code&gt;owner&lt;/code&gt; as arguments. It is also possible to update type specific information for selected payment methods. Please refer to our &lt;a href&#x3D;\&quot;/docs/sources\&quot;&gt;payment method guides&lt;/a&gt; for more detail.&lt;/p&gt;
  # @param source
  # @param [Hash] opts the optional parameters
  # @option opts [Int32] :amount Amount associated with the source.
  # @option opts [Array(String)] :expand Specifies which fields in the response should be expanded.
  # @option opts [MandateParams] :mandate
  # @option opts [PostAccountsRequestMetadata] :metadata
  # @option opts [Owner] :owner
  # @option opts [OrderParams] :source_order
  # @return [Source]
  describe "post_sources_source test" do
    it "should work" do
      # assertion here. ref: https://crystal-lang.org/reference/guides/testing.html
    end
  end
end
