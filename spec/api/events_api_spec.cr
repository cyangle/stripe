#  Stripe API
#
# The Stripe REST API. Please see https://stripe.com/docs/api for more details.
#
# The version of the OpenAPI document: 2024-06-20
# Contact: dev-platform@stripe.com
# Generated by: https://openapi-generator.tech
#

require "../spec_helper"
require "../../src/stripe/api/events_api"

# Unit tests for Stripe::EventsApi
# Automatically generated by openapi-generator (https://openapi-generator.tech)
# Please update as you see appropriate
describe "EventsApi" do
  describe "test an instance of EventsApi" do
    it "should create an instance of EventsApi" do
      api_instance = Stripe::EventsApi.new
      api_instance.should be_a(Stripe::EventsApi)
    end
  end

  # unit tests for get_events
  # &lt;p&gt;List events, going back up to 30 days. Each event data is rendered according to Stripe API version at its creation time, specified in &lt;a href&#x3D;\&quot;https://docs.stripe.com/api/events/object\&quot;&gt;event object&lt;/a&gt; &lt;code&gt;api_version&lt;/code&gt; attribute (not according to your current Stripe API version or &lt;code&gt;Stripe-Version&lt;/code&gt; header).&lt;/p&gt;
  # @param [Hash] opts the optional parameters
  # @option opts [String] :ending_before A cursor for use in pagination. &#x60;ending_before&#x60; is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, starting with &#x60;obj_bar&#x60;, your subsequent call can include &#x60;ending_before&#x3D;obj_bar&#x60; in order to fetch the previous page of the list.
  # @option opts [String] :starting_after A cursor for use in pagination. &#x60;starting_after&#x60; is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, ending with &#x60;obj_foo&#x60;, your subsequent call can include &#x60;starting_after&#x3D;obj_foo&#x60; in order to fetch the next page of the list.
  # @option opts [Int32] :limit A limit on the number of objects to be returned. Limit can range between 1 and 100, and the default is 10.
  # @option opts [String] :_type A string containing a specific event name, or group of events using * as a wildcard. The list will be filtered to include only events with a matching event property.
  # @option opts [Array(String)] :types An array of up to 20 strings containing specific event names. The list will be filtered to include only events with a matching event property. You may pass either &#x60;type&#x60; or &#x60;types&#x60;, but not both.
  # @option opts [Bool] :delivery_success Filter events by whether all webhooks were successfully delivered. If false, events which are still pending or have failed all delivery attempts to a webhook endpoint will be returned.
  # @option opts [GetAccountsCreatedParameter] :created Only return events that were created during the given date interval.
  # @option opts [Array(String)] :expand Specifies which fields in the response should be expanded.
  # @return [NotificationEventList]
  describe "get_events test" do
    it "should work" do
      # assertion here. ref: https://crystal-lang.org/reference/guides/testing.html
    end
  end

  # unit tests for get_events_id
  # &lt;p&gt;Retrieves the details of an event if it was created in the last 30 days. Supply the unique identifier of the event, which you might have received in a webhook.&lt;/p&gt;
  # @param id
  # @param [Hash] opts the optional parameters
  # @option opts [Array(String)] :expand Specifies which fields in the response should be expanded.
  # @return [Event]
  describe "get_events_id test" do
    it "should work" do
      # assertion here. ref: https://crystal-lang.org/reference/guides/testing.html
    end
  end
end
