#  Stripe API
#
# The Stripe REST API. Please see https://stripe.com/docs/api for more details.
#
# The version of the OpenAPI document: 2024-06-20
# Contact: dev-platform@stripe.com
# Generated by: https://openapi-generator.tech
#

require "../spec_helper"
require "../../src/stripe/api/apps_api"

# Unit tests for Stripe::AppsApi
# Automatically generated by openapi-generator (https://openapi-generator.tech)
# Please update as you see appropriate
describe "AppsApi" do
  describe "test an instance of AppsApi" do
    it "should create an instance of AppsApi" do
      api_instance = Stripe::AppsApi.new
      api_instance.should be_a(Stripe::AppsApi)
    end
  end

  # unit tests for get_apps_secrets
  # &lt;p&gt;List all secrets stored on the given scope.&lt;/p&gt;
  # @param scope Specifies the scoping of the secret. Requests originating from UI extensions can only access account-scoped secrets or secrets scoped to their own user.
  # @param [Hash] opts the optional parameters
  # @option opts [String] :ending_before A cursor for use in pagination. &#x60;ending_before&#x60; is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, starting with &#x60;obj_bar&#x60;, your subsequent call can include &#x60;ending_before&#x3D;obj_bar&#x60; in order to fetch the previous page of the list.
  # @option opts [String] :starting_after A cursor for use in pagination. &#x60;starting_after&#x60; is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, ending with &#x60;obj_foo&#x60;, your subsequent call can include &#x60;starting_after&#x3D;obj_foo&#x60; in order to fetch the next page of the list.
  # @option opts [Int32] :limit A limit on the number of objects to be returned. Limit can range between 1 and 100, and the default is 10.
  # @option opts [Array(String)] :expand Specifies which fields in the response should be expanded.
  # @return [SecretServiceResourceSecretList]
  describe "get_apps_secrets test" do
    it "should work" do
      # assertion here. ref: https://crystal-lang.org/reference/guides/testing.html
    end
  end

  # unit tests for get_apps_secrets_find
  # &lt;p&gt;Finds a secret in the secret store by name and scope.&lt;/p&gt;
  # @param name A name for the secret that&#39;s unique within the scope.
  # @param scope Specifies the scoping of the secret. Requests originating from UI extensions can only access account-scoped secrets or secrets scoped to their own user.
  # @param [Hash] opts the optional parameters
  # @option opts [Array(String)] :expand Specifies which fields in the response should be expanded.
  # @return [AppsSecret]
  describe "get_apps_secrets_find test" do
    it "should work" do
      # assertion here. ref: https://crystal-lang.org/reference/guides/testing.html
    end
  end

  # unit tests for post_apps_secrets
  # &lt;p&gt;Create or replace a secret in the secret store.&lt;/p&gt;
  # @param name A name for the secret that&#39;s unique within the scope.
  # @param payload The plaintext secret value to be stored.
  # @param scope
  # @param [Hash] opts the optional parameters
  # @option opts [Array(String)] :expand Specifies which fields in the response should be expanded.
  # @option opts [Int32] :expires_at The Unix timestamp for the expiry time of the secret, after which the secret deletes.
  # @return [AppsSecret]
  describe "post_apps_secrets test" do
    it "should work" do
      # assertion here. ref: https://crystal-lang.org/reference/guides/testing.html
    end
  end

  # unit tests for post_apps_secrets_delete
  # &lt;p&gt;Deletes a secret from the secret store by name and scope.&lt;/p&gt;
  # @param name A name for the secret that&#39;s unique within the scope.
  # @param scope
  # @param [Hash] opts the optional parameters
  # @option opts [Array(String)] :expand Specifies which fields in the response should be expanded.
  # @return [AppsSecret]
  describe "post_apps_secrets_delete test" do
    it "should work" do
      # assertion here. ref: https://crystal-lang.org/reference/guides/testing.html
    end
  end
end
