#  Stripe API
#
# The Stripe REST API. Please see https://stripe.com/docs/api for more details.
#
# The version of the OpenAPI document: 2024-06-20
# Contact: dev-platform@stripe.com
# Generated by: https://openapi-generator.tech
#

require "../spec_helper"
require "../../src/stripe/api/refunds_api"

# Unit tests for Stripe::RefundsApi
# Automatically generated by openapi-generator (https://openapi-generator.tech)
# Please update as you see appropriate
describe "RefundsApi" do
  describe "test an instance of RefundsApi" do
    it "should create an instance of RefundsApi" do
      api_instance = Stripe::RefundsApi.new
      api_instance.should be_a(Stripe::RefundsApi)
    end
  end

  # unit tests for get_refunds
  # &lt;p&gt;Returns a list of all refunds you created. We return the refunds in sorted order, with the most recent refunds appearing first. The 10 most recent refunds are always available by default on the Charge object.&lt;/p&gt;
  # @param [Hash] opts the optional parameters
  # @option opts [String] :ending_before A cursor for use in pagination. &#x60;ending_before&#x60; is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, starting with &#x60;obj_bar&#x60;, your subsequent call can include &#x60;ending_before&#x3D;obj_bar&#x60; in order to fetch the previous page of the list.
  # @option opts [String] :starting_after A cursor for use in pagination. &#x60;starting_after&#x60; is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, ending with &#x60;obj_foo&#x60;, your subsequent call can include &#x60;starting_after&#x3D;obj_foo&#x60; in order to fetch the next page of the list.
  # @option opts [Int32] :limit A limit on the number of objects to be returned. Limit can range between 1 and 100, and the default is 10.
  # @option opts [String] :payment_intent Only return refunds for the PaymentIntent specified by this ID.
  # @option opts [String] :charge Only return refunds for the charge specified by this charge ID.
  # @option opts [GetAccountsCreatedParameter] :created Only return refunds that were created during the given date interval.
  # @option opts [Array(String)] :expand Specifies which fields in the response should be expanded.
  # @return [ApiMethodRefundList]
  describe "get_refunds test" do
    it "should work" do
      # assertion here. ref: https://crystal-lang.org/reference/guides/testing.html
    end
  end

  # unit tests for get_refunds_refund
  # &lt;p&gt;Retrieves the details of an existing refund.&lt;/p&gt;
  # @param refund
  # @param [Hash] opts the optional parameters
  # @option opts [Array(String)] :expand Specifies which fields in the response should be expanded.
  # @return [Refund]
  describe "get_refunds_refund test" do
    it "should work" do
      # assertion here. ref: https://crystal-lang.org/reference/guides/testing.html
    end
  end

  # unit tests for post_refunds
  # &lt;p&gt;When you create a new refund, you must specify a Charge or a PaymentIntent object on which to create it.&lt;/p&gt;  &lt;p&gt;Creating a new refund will refund a charge that has previously been created but not yet refunded. Funds will be refunded to the credit or debit card that was originally charged.&lt;/p&gt;  &lt;p&gt;You can optionally refund only part of a charge. You can do so multiple times, until the entire charge has been refunded.&lt;/p&gt;  &lt;p&gt;Once entirely refunded, a charge can’t be refunded again. This method will raise an error when called on an already-refunded charge, or when trying to refund more money than is left on a charge.&lt;/p&gt;
  # @param [Hash] opts the optional parameters
  # @option opts [Int32] :amount
  # @option opts [String] :charge The identifier of the charge to refund.
  # @option opts [String] :currency Three-letter [ISO currency code](https://www.iso.org/iso-4217-currency-codes.html), in lowercase. Must be a [supported currency](https://stripe.com/docs/currencies).
  # @option opts [String] :customer Customer whose customer balance to refund from.
  # @option opts [Array(String)] :expand Specifies which fields in the response should be expanded.
  # @option opts [String] :instructions_email For payment methods without native refund support (e.g., Konbini, PromptPay), use this email from the customer to receive refund instructions.
  # @option opts [PostAccountsRequestMetadata] :metadata
  # @option opts [String] :origin Origin of the refund
  # @option opts [String] :payment_intent The identifier of the PaymentIntent to refund.
  # @option opts [String] :reason String indicating the reason for the refund. If set, possible values are &#x60;duplicate&#x60;, &#x60;fraudulent&#x60;, and &#x60;requested_by_customer&#x60;. If you believe the charge to be fraudulent, specifying &#x60;fraudulent&#x60; as the reason will add the associated card and email to your [block lists](https://stripe.com/docs/radar/lists), and will also help us improve our fraud detection algorithms.
  # @option opts [Bool] :refund_application_fee Boolean indicating whether the application fee should be refunded when refunding this charge. If a full charge refund is given, the full application fee will be refunded. Otherwise, the application fee will be refunded in an amount proportional to the amount of the charge refunded. An application fee can be refunded only by the application that created the charge.
  # @option opts [Bool] :reverse_transfer Boolean indicating whether the transfer should be reversed when refunding this charge. The transfer will be reversed proportionally to the amount being refunded (either the entire or partial amount).&lt;br&gt;&lt;br&gt;A transfer can be reversed only by the application that created the charge.
  # @return [Refund]
  describe "post_refunds test" do
    it "should work" do
      # assertion here. ref: https://crystal-lang.org/reference/guides/testing.html
    end
  end

  # unit tests for post_refunds_refund
  # &lt;p&gt;Updates the refund that you specify by setting the values of the passed parameters. Any parameters that you don’t provide remain unchanged.&lt;/p&gt;  &lt;p&gt;This request only accepts &lt;code&gt;metadata&lt;/code&gt; as an argument.&lt;/p&gt;
  # @param refund
  # @param [Hash] opts the optional parameters
  # @option opts [Array(String)] :expand Specifies which fields in the response should be expanded.
  # @option opts [PostAccountsRequestMetadata] :metadata
  # @return [Refund]
  describe "post_refunds_refund test" do
    it "should work" do
      # assertion here. ref: https://crystal-lang.org/reference/guides/testing.html
    end
  end
end
