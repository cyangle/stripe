#  Stripe API
#
# The Stripe REST API. Please see https://stripe.com/docs/api for more details.
#
# The version of the OpenAPI document: 2024-06-20
# Contact: dev-platform@stripe.com
# Generated by: https://openapi-generator.tech
#

require "../spec_helper"
require "../../src/stripe/api/quotes_api"

# Unit tests for Stripe::QuotesApi
# Automatically generated by openapi-generator (https://openapi-generator.tech)
# Please update as you see appropriate
describe "QuotesApi" do
  describe "test an instance of QuotesApi" do
    it "should create an instance of QuotesApi" do
      api_instance = Stripe::QuotesApi.new
      api_instance.should be_a(Stripe::QuotesApi)
    end
  end

  # unit tests for get_quotes
  # &lt;p&gt;Returns a list of your quotes.&lt;/p&gt;
  # @param [Hash] opts the optional parameters
  # @option opts [String] :ending_before A cursor for use in pagination. &#x60;ending_before&#x60; is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, starting with &#x60;obj_bar&#x60;, your subsequent call can include &#x60;ending_before&#x3D;obj_bar&#x60; in order to fetch the previous page of the list.
  # @option opts [String] :starting_after A cursor for use in pagination. &#x60;starting_after&#x60; is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, ending with &#x60;obj_foo&#x60;, your subsequent call can include &#x60;starting_after&#x3D;obj_foo&#x60; in order to fetch the next page of the list.
  # @option opts [Int32] :limit A limit on the number of objects to be returned. Limit can range between 1 and 100, and the default is 10.
  # @option opts [String] :test_clock Provides a list of quotes that are associated with the specified test clock. The response will not include quotes with test clocks if this and the customer parameter is not set.
  # @option opts [Array(String)] :expand Specifies which fields in the response should be expanded.
  # @option opts [String] :customer The ID of the customer whose quotes will be retrieved.
  # @option opts [String] :status The status of the quote.
  # @return [QuotesResourceQuoteList]
  describe "get_quotes test" do
    it "should work" do
      # assertion here. ref: https://crystal-lang.org/reference/guides/testing.html
    end
  end

  # unit tests for get_quotes_quote
  # &lt;p&gt;Retrieves the quote with the given ID.&lt;/p&gt;
  # @param quote
  # @param [Hash] opts the optional parameters
  # @option opts [Array(String)] :expand Specifies which fields in the response should be expanded.
  # @return [Quote]
  describe "get_quotes_quote test" do
    it "should work" do
      # assertion here. ref: https://crystal-lang.org/reference/guides/testing.html
    end
  end

  # unit tests for get_quotes_quote_computed_upfront_line_items
  # &lt;p&gt;When retrieving a quote, there is an includable &lt;a href&#x3D;\&quot;https://stripe.com/docs/api/quotes/object#quote_object-computed-upfront-line_items\&quot;&gt;&lt;strong&gt;computed.upfront.line_items&lt;/strong&gt;&lt;/a&gt; property containing the first handful of those items. There is also a URL where you can retrieve the full (paginated) list of upfront line items.&lt;/p&gt;
  # @param quote
  # @param [Hash] opts the optional parameters
  # @option opts [String] :ending_before A cursor for use in pagination. &#x60;ending_before&#x60; is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, starting with &#x60;obj_bar&#x60;, your subsequent call can include &#x60;ending_before&#x3D;obj_bar&#x60; in order to fetch the previous page of the list.
  # @option opts [String] :starting_after A cursor for use in pagination. &#x60;starting_after&#x60; is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, ending with &#x60;obj_foo&#x60;, your subsequent call can include &#x60;starting_after&#x3D;obj_foo&#x60; in order to fetch the next page of the list.
  # @option opts [Int32] :limit A limit on the number of objects to be returned. Limit can range between 1 and 100, and the default is 10.
  # @option opts [Array(String)] :expand Specifies which fields in the response should be expanded.
  # @return [QuotesResourceListLineItems]
  describe "get_quotes_quote_computed_upfront_line_items test" do
    it "should work" do
      # assertion here. ref: https://crystal-lang.org/reference/guides/testing.html
    end
  end

  # unit tests for get_quotes_quote_line_items
  # &lt;p&gt;When retrieving a quote, there is an includable &lt;strong&gt;line_items&lt;/strong&gt; property containing the first handful of those items. There is also a URL where you can retrieve the full (paginated) list of line items.&lt;/p&gt;
  # @param quote
  # @param [Hash] opts the optional parameters
  # @option opts [String] :ending_before A cursor for use in pagination. &#x60;ending_before&#x60; is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, starting with &#x60;obj_bar&#x60;, your subsequent call can include &#x60;ending_before&#x3D;obj_bar&#x60; in order to fetch the previous page of the list.
  # @option opts [String] :starting_after A cursor for use in pagination. &#x60;starting_after&#x60; is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, ending with &#x60;obj_foo&#x60;, your subsequent call can include &#x60;starting_after&#x3D;obj_foo&#x60; in order to fetch the next page of the list.
  # @option opts [Int32] :limit A limit on the number of objects to be returned. Limit can range between 1 and 100, and the default is 10.
  # @option opts [Array(String)] :expand Specifies which fields in the response should be expanded.
  # @return [QuotesResourceListLineItems]
  describe "get_quotes_quote_line_items test" do
    it "should work" do
      # assertion here. ref: https://crystal-lang.org/reference/guides/testing.html
    end
  end

  # unit tests for get_quotes_quote_pdf
  # &lt;p&gt;Download the PDF for a finalized quote. Explanation for special handling can be found &lt;a href&#x3D;\&quot;https://docs.stripe.com/quotes/overview#quote_pdf\&quot;&gt;here&lt;/a&gt;&lt;/p&gt;
  # @param quote
  # @param [Hash] opts the optional parameters
  # @option opts [Array(String)] :expand Specifies which fields in the response should be expanded.
  # @return [::File]
  describe "get_quotes_quote_pdf test" do
    it "should work" do
      # assertion here. ref: https://crystal-lang.org/reference/guides/testing.html
    end
  end

  # unit tests for post_quotes
  # &lt;p&gt;A quote models prices and services for a customer. Default options for &lt;code&gt;header&lt;/code&gt;, &lt;code&gt;description&lt;/code&gt;, &lt;code&gt;footer&lt;/code&gt;, and &lt;code&gt;expires_at&lt;/code&gt; can be set in the dashboard via the &lt;a href&#x3D;\&quot;https://dashboard.stripe.com/settings/billing/quote\&quot;&gt;quote template&lt;/a&gt;.&lt;/p&gt;
  # @param [Hash] opts the optional parameters
  # @option opts [PostQuotesRequestApplicationFeeAmount] :application_fee_amount
  # @option opts [PostQuotesRequestApplicationFeePercent] :application_fee_percent
  # @option opts [AutomaticTaxParam] :automatic_tax
  # @option opts [String] :collection_method Either &#x60;charge_automatically&#x60;, or &#x60;send_invoice&#x60;. When charging automatically, Stripe will attempt to pay invoices at the end of the subscription cycle or at invoice finalization using the default payment method attached to the subscription or customer. When sending an invoice, Stripe will email your customer an invoice with payment instructions and mark the subscription as &#x60;active&#x60;. Defaults to &#x60;charge_automatically&#x60;.
  # @option opts [String] :customer The customer for which this quote belongs to. A customer is required before finalizing the quote. Once specified, it cannot be changed.
  # @option opts [PostQuotesRequestDefaultTaxRates] :default_tax_rates
  # @option opts [PostQuotesRequestDescription] :description
  # @option opts [PostQuotesRequestDiscounts] :discounts
  # @option opts [Array(String)] :expand Specifies which fields in the response should be expanded.
  # @option opts [Int32] :expires_at A future timestamp on which the quote will be canceled if in &#x60;open&#x60; or &#x60;draft&#x60; status. Measured in seconds since the Unix epoch. If no value is passed, the default expiration date configured in your [quote template settings](https://dashboard.stripe.com/settings/billing/quote) will be used.
  # @option opts [PostQuotesRequestFooter] :footer
  # @option opts [FromQuoteParams] :from_quote
  # @option opts [PostQuotesRequestHeader] :header
  # @option opts [QuoteParam] :invoice_settings
  # @option opts [Array(LineItemCreateParams)] :line_items A list of line items the customer is being quoted for. Each line item includes information about the product, the quantity, and the resulting cost.
  # @option opts [Hash(String, String)] :metadata
  # @option opts [PostQuotesRequestOnBehalfOf] :on_behalf_of
  # @option opts [SubscriptionDataCreateParams] :subscription_data
  # @option opts [String] :test_clock ID of the test clock to attach to the quote.
  # @option opts [PostQuotesRequestTransferData] :transfer_data
  # @return [Quote]
  describe "post_quotes test" do
    it "should work" do
      # assertion here. ref: https://crystal-lang.org/reference/guides/testing.html
    end
  end

  # unit tests for post_quotes_quote
  # &lt;p&gt;A quote models prices and services for a customer.&lt;/p&gt;
  # @param quote
  # @param [Hash] opts the optional parameters
  # @option opts [PostQuotesRequestApplicationFeeAmount] :application_fee_amount
  # @option opts [PostQuotesRequestApplicationFeePercent] :application_fee_percent
  # @option opts [AutomaticTaxParam] :automatic_tax
  # @option opts [String] :collection_method Either &#x60;charge_automatically&#x60;, or &#x60;send_invoice&#x60;. When charging automatically, Stripe will attempt to pay invoices at the end of the subscription cycle or at invoice finalization using the default payment method attached to the subscription or customer. When sending an invoice, Stripe will email your customer an invoice with payment instructions and mark the subscription as &#x60;active&#x60;. Defaults to &#x60;charge_automatically&#x60;.
  # @option opts [String] :customer The customer for which this quote belongs to. A customer is required before finalizing the quote. Once specified, it cannot be changed.
  # @option opts [PostQuotesRequestDefaultTaxRates] :default_tax_rates
  # @option opts [PostQuotesQuoteRequestDescription] :description
  # @option opts [PostQuotesRequestDiscounts] :discounts
  # @option opts [Array(String)] :expand Specifies which fields in the response should be expanded.
  # @option opts [Int32] :expires_at A future timestamp on which the quote will be canceled if in &#x60;open&#x60; or &#x60;draft&#x60; status. Measured in seconds since the Unix epoch.
  # @option opts [PostQuotesQuoteRequestFooter] :footer
  # @option opts [PostQuotesQuoteRequestHeader] :header
  # @option opts [QuoteParam] :invoice_settings
  # @option opts [Array(LineItemUpdateParams)] :line_items A list of line items the customer is being quoted for. Each line item includes information about the product, the quantity, and the resulting cost.
  # @option opts [Hash(String, String)] :metadata
  # @option opts [PostQuotesRequestOnBehalfOf] :on_behalf_of
  # @option opts [SubscriptionDataUpdateParams] :subscription_data
  # @option opts [PostQuotesRequestTransferData] :transfer_data
  # @return [Quote]
  describe "post_quotes_quote test" do
    it "should work" do
      # assertion here. ref: https://crystal-lang.org/reference/guides/testing.html
    end
  end

  # unit tests for post_quotes_quote_accept
  # &lt;p&gt;Accepts the specified quote.&lt;/p&gt;
  # @param quote
  # @param [Hash] opts the optional parameters
  # @option opts [Array(String)] :expand Specifies which fields in the response should be expanded.
  # @return [Quote]
  describe "post_quotes_quote_accept test" do
    it "should work" do
      # assertion here. ref: https://crystal-lang.org/reference/guides/testing.html
    end
  end

  # unit tests for post_quotes_quote_cancel
  # &lt;p&gt;Cancels the quote.&lt;/p&gt;
  # @param quote
  # @param [Hash] opts the optional parameters
  # @option opts [Array(String)] :expand Specifies which fields in the response should be expanded.
  # @return [Quote]
  describe "post_quotes_quote_cancel test" do
    it "should work" do
      # assertion here. ref: https://crystal-lang.org/reference/guides/testing.html
    end
  end

  # unit tests for post_quotes_quote_finalize
  # &lt;p&gt;Finalizes the quote.&lt;/p&gt;
  # @param quote
  # @param [Hash] opts the optional parameters
  # @option opts [Array(String)] :expand Specifies which fields in the response should be expanded.
  # @option opts [Int32] :expires_at A future timestamp on which the quote will be canceled if in &#x60;open&#x60; or &#x60;draft&#x60; status. Measured in seconds since the Unix epoch.
  # @return [Quote]
  describe "post_quotes_quote_finalize test" do
    it "should work" do
      # assertion here. ref: https://crystal-lang.org/reference/guides/testing.html
    end
  end
end
