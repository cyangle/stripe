#  Stripe API
#
# The Stripe REST API. Please see https://stripe.com/docs/api for more details.
#
# The version of the OpenAPI document: 2022-08-01
# Contact: dev-platform@stripe.com
# Generated by: https://openapi-generator.tech
#

require "../spec_helper"

# Unit tests for Stripe::AccountCapabilities
# Automatically generated by openapi-generator (https://openapi-generator.tech)
# Please update as you see appropriate
describe Stripe::AccountCapabilities do
  describe "test an instance of AccountCapabilities" do
    it "should create an instance of AccountCapabilities" do
      # instance = Stripe::AccountCapabilities.new
      # (instance).should be_a(Stripe::AccountCapabilities)
    end
  end

  describe "test attribute 'acss_debit_payments'" do
    it "should work" do
      # instance = Stripe::AccountCapabilities.new
      # assertion here. ref: https://crystal-lang.org/reference/guides/testing.html
      # validator = Stripe::AccountCapabilities::ENUM_VALIDATOR_FOR_ACSS_DEBIT_PAYMENTS
      # validator.allowable_values.each do |value|
      #   instance.acss_debit_payments = value.as(String)
      # end
    end
  end

  describe "test attribute 'affirm_payments'" do
    it "should work" do
      # instance = Stripe::AccountCapabilities.new
      # assertion here. ref: https://crystal-lang.org/reference/guides/testing.html
      # validator = Stripe::AccountCapabilities::ENUM_VALIDATOR_FOR_AFFIRM_PAYMENTS
      # validator.allowable_values.each do |value|
      #   instance.affirm_payments = value.as(String)
      # end
    end
  end

  describe "test attribute 'afterpay_clearpay_payments'" do
    it "should work" do
      # instance = Stripe::AccountCapabilities.new
      # assertion here. ref: https://crystal-lang.org/reference/guides/testing.html
      # validator = Stripe::AccountCapabilities::ENUM_VALIDATOR_FOR_AFTERPAY_CLEARPAY_PAYMENTS
      # validator.allowable_values.each do |value|
      #   instance.afterpay_clearpay_payments = value.as(String)
      # end
    end
  end

  describe "test attribute 'au_becs_debit_payments'" do
    it "should work" do
      # instance = Stripe::AccountCapabilities.new
      # assertion here. ref: https://crystal-lang.org/reference/guides/testing.html
      # validator = Stripe::AccountCapabilities::ENUM_VALIDATOR_FOR_AU_BECS_DEBIT_PAYMENTS
      # validator.allowable_values.each do |value|
      #   instance.au_becs_debit_payments = value.as(String)
      # end
    end
  end

  describe "test attribute 'bacs_debit_payments'" do
    it "should work" do
      # instance = Stripe::AccountCapabilities.new
      # assertion here. ref: https://crystal-lang.org/reference/guides/testing.html
      # validator = Stripe::AccountCapabilities::ENUM_VALIDATOR_FOR_BACS_DEBIT_PAYMENTS
      # validator.allowable_values.each do |value|
      #   instance.bacs_debit_payments = value.as(String)
      # end
    end
  end

  describe "test attribute 'bancontact_payments'" do
    it "should work" do
      # instance = Stripe::AccountCapabilities.new
      # assertion here. ref: https://crystal-lang.org/reference/guides/testing.html
      # validator = Stripe::AccountCapabilities::ENUM_VALIDATOR_FOR_BANCONTACT_PAYMENTS
      # validator.allowable_values.each do |value|
      #   instance.bancontact_payments = value.as(String)
      # end
    end
  end

  describe "test attribute 'bank_transfer_payments'" do
    it "should work" do
      # instance = Stripe::AccountCapabilities.new
      # assertion here. ref: https://crystal-lang.org/reference/guides/testing.html
      # validator = Stripe::AccountCapabilities::ENUM_VALIDATOR_FOR_BANK_TRANSFER_PAYMENTS
      # validator.allowable_values.each do |value|
      #   instance.bank_transfer_payments = value.as(String)
      # end
    end
  end

  describe "test attribute 'blik_payments'" do
    it "should work" do
      # instance = Stripe::AccountCapabilities.new
      # assertion here. ref: https://crystal-lang.org/reference/guides/testing.html
      # validator = Stripe::AccountCapabilities::ENUM_VALIDATOR_FOR_BLIK_PAYMENTS
      # validator.allowable_values.each do |value|
      #   instance.blik_payments = value.as(String)
      # end
    end
  end

  describe "test attribute 'boleto_payments'" do
    it "should work" do
      # instance = Stripe::AccountCapabilities.new
      # assertion here. ref: https://crystal-lang.org/reference/guides/testing.html
      # validator = Stripe::AccountCapabilities::ENUM_VALIDATOR_FOR_BOLETO_PAYMENTS
      # validator.allowable_values.each do |value|
      #   instance.boleto_payments = value.as(String)
      # end
    end
  end

  describe "test attribute 'card_issuing'" do
    it "should work" do
      # instance = Stripe::AccountCapabilities.new
      # assertion here. ref: https://crystal-lang.org/reference/guides/testing.html
      # validator = Stripe::AccountCapabilities::ENUM_VALIDATOR_FOR_CARD_ISSUING
      # validator.allowable_values.each do |value|
      #   instance.card_issuing = value.as(String)
      # end
    end
  end

  describe "test attribute 'card_payments'" do
    it "should work" do
      # instance = Stripe::AccountCapabilities.new
      # assertion here. ref: https://crystal-lang.org/reference/guides/testing.html
      # validator = Stripe::AccountCapabilities::ENUM_VALIDATOR_FOR_CARD_PAYMENTS
      # validator.allowable_values.each do |value|
      #   instance.card_payments = value.as(String)
      # end
    end
  end

  describe "test attribute 'cartes_bancaires_payments'" do
    it "should work" do
      # instance = Stripe::AccountCapabilities.new
      # assertion here. ref: https://crystal-lang.org/reference/guides/testing.html
      # validator = Stripe::AccountCapabilities::ENUM_VALIDATOR_FOR_CARTES_BANCAIRES_PAYMENTS
      # validator.allowable_values.each do |value|
      #   instance.cartes_bancaires_payments = value.as(String)
      # end
    end
  end

  describe "test attribute 'eps_payments'" do
    it "should work" do
      # instance = Stripe::AccountCapabilities.new
      # assertion here. ref: https://crystal-lang.org/reference/guides/testing.html
      # validator = Stripe::AccountCapabilities::ENUM_VALIDATOR_FOR_EPS_PAYMENTS
      # validator.allowable_values.each do |value|
      #   instance.eps_payments = value.as(String)
      # end
    end
  end

  describe "test attribute 'fpx_payments'" do
    it "should work" do
      # instance = Stripe::AccountCapabilities.new
      # assertion here. ref: https://crystal-lang.org/reference/guides/testing.html
      # validator = Stripe::AccountCapabilities::ENUM_VALIDATOR_FOR_FPX_PAYMENTS
      # validator.allowable_values.each do |value|
      #   instance.fpx_payments = value.as(String)
      # end
    end
  end

  describe "test attribute 'giropay_payments'" do
    it "should work" do
      # instance = Stripe::AccountCapabilities.new
      # assertion here. ref: https://crystal-lang.org/reference/guides/testing.html
      # validator = Stripe::AccountCapabilities::ENUM_VALIDATOR_FOR_GIROPAY_PAYMENTS
      # validator.allowable_values.each do |value|
      #   instance.giropay_payments = value.as(String)
      # end
    end
  end

  describe "test attribute 'grabpay_payments'" do
    it "should work" do
      # instance = Stripe::AccountCapabilities.new
      # assertion here. ref: https://crystal-lang.org/reference/guides/testing.html
      # validator = Stripe::AccountCapabilities::ENUM_VALIDATOR_FOR_GRABPAY_PAYMENTS
      # validator.allowable_values.each do |value|
      #   instance.grabpay_payments = value.as(String)
      # end
    end
  end

  describe "test attribute 'ideal_payments'" do
    it "should work" do
      # instance = Stripe::AccountCapabilities.new
      # assertion here. ref: https://crystal-lang.org/reference/guides/testing.html
      # validator = Stripe::AccountCapabilities::ENUM_VALIDATOR_FOR_IDEAL_PAYMENTS
      # validator.allowable_values.each do |value|
      #   instance.ideal_payments = value.as(String)
      # end
    end
  end

  describe "test attribute 'jcb_payments'" do
    it "should work" do
      # instance = Stripe::AccountCapabilities.new
      # assertion here. ref: https://crystal-lang.org/reference/guides/testing.html
      # validator = Stripe::AccountCapabilities::ENUM_VALIDATOR_FOR_JCB_PAYMENTS
      # validator.allowable_values.each do |value|
      #   instance.jcb_payments = value.as(String)
      # end
    end
  end

  describe "test attribute 'klarna_payments'" do
    it "should work" do
      # instance = Stripe::AccountCapabilities.new
      # assertion here. ref: https://crystal-lang.org/reference/guides/testing.html
      # validator = Stripe::AccountCapabilities::ENUM_VALIDATOR_FOR_KLARNA_PAYMENTS
      # validator.allowable_values.each do |value|
      #   instance.klarna_payments = value.as(String)
      # end
    end
  end

  describe "test attribute 'konbini_payments'" do
    it "should work" do
      # instance = Stripe::AccountCapabilities.new
      # assertion here. ref: https://crystal-lang.org/reference/guides/testing.html
      # validator = Stripe::AccountCapabilities::ENUM_VALIDATOR_FOR_KONBINI_PAYMENTS
      # validator.allowable_values.each do |value|
      #   instance.konbini_payments = value.as(String)
      # end
    end
  end

  describe "test attribute 'legacy_payments'" do
    it "should work" do
      # instance = Stripe::AccountCapabilities.new
      # assertion here. ref: https://crystal-lang.org/reference/guides/testing.html
      # validator = Stripe::AccountCapabilities::ENUM_VALIDATOR_FOR_LEGACY_PAYMENTS
      # validator.allowable_values.each do |value|
      #   instance.legacy_payments = value.as(String)
      # end
    end
  end

  describe "test attribute 'link_payments'" do
    it "should work" do
      # instance = Stripe::AccountCapabilities.new
      # assertion here. ref: https://crystal-lang.org/reference/guides/testing.html
      # validator = Stripe::AccountCapabilities::ENUM_VALIDATOR_FOR_LINK_PAYMENTS
      # validator.allowable_values.each do |value|
      #   instance.link_payments = value.as(String)
      # end
    end
  end

  describe "test attribute 'oxxo_payments'" do
    it "should work" do
      # instance = Stripe::AccountCapabilities.new
      # assertion here. ref: https://crystal-lang.org/reference/guides/testing.html
      # validator = Stripe::AccountCapabilities::ENUM_VALIDATOR_FOR_OXXO_PAYMENTS
      # validator.allowable_values.each do |value|
      #   instance.oxxo_payments = value.as(String)
      # end
    end
  end

  describe "test attribute 'p24_payments'" do
    it "should work" do
      # instance = Stripe::AccountCapabilities.new
      # assertion here. ref: https://crystal-lang.org/reference/guides/testing.html
      # validator = Stripe::AccountCapabilities::ENUM_VALIDATOR_FOR_P24_PAYMENTS
      # validator.allowable_values.each do |value|
      #   instance.p24_payments = value.as(String)
      # end
    end
  end

  describe "test attribute 'paynow_payments'" do
    it "should work" do
      # instance = Stripe::AccountCapabilities.new
      # assertion here. ref: https://crystal-lang.org/reference/guides/testing.html
      # validator = Stripe::AccountCapabilities::ENUM_VALIDATOR_FOR_PAYNOW_PAYMENTS
      # validator.allowable_values.each do |value|
      #   instance.paynow_payments = value.as(String)
      # end
    end
  end

  describe "test attribute 'promptpay_payments'" do
    it "should work" do
      # instance = Stripe::AccountCapabilities.new
      # assertion here. ref: https://crystal-lang.org/reference/guides/testing.html
      # validator = Stripe::AccountCapabilities::ENUM_VALIDATOR_FOR_PROMPTPAY_PAYMENTS
      # validator.allowable_values.each do |value|
      #   instance.promptpay_payments = value.as(String)
      # end
    end
  end

  describe "test attribute 'sepa_debit_payments'" do
    it "should work" do
      # instance = Stripe::AccountCapabilities.new
      # assertion here. ref: https://crystal-lang.org/reference/guides/testing.html
      # validator = Stripe::AccountCapabilities::ENUM_VALIDATOR_FOR_SEPA_DEBIT_PAYMENTS
      # validator.allowable_values.each do |value|
      #   instance.sepa_debit_payments = value.as(String)
      # end
    end
  end

  describe "test attribute 'sofort_payments'" do
    it "should work" do
      # instance = Stripe::AccountCapabilities.new
      # assertion here. ref: https://crystal-lang.org/reference/guides/testing.html
      # validator = Stripe::AccountCapabilities::ENUM_VALIDATOR_FOR_SOFORT_PAYMENTS
      # validator.allowable_values.each do |value|
      #   instance.sofort_payments = value.as(String)
      # end
    end
  end

  describe "test attribute 'tax_reporting_us_1099_k'" do
    it "should work" do
      # instance = Stripe::AccountCapabilities.new
      # assertion here. ref: https://crystal-lang.org/reference/guides/testing.html
      # validator = Stripe::AccountCapabilities::ENUM_VALIDATOR_FOR_TAX_REPORTING_US_1099_K
      # validator.allowable_values.each do |value|
      #   instance.tax_reporting_us_1099_k = value.as(String)
      # end
    end
  end

  describe "test attribute 'tax_reporting_us_1099_misc'" do
    it "should work" do
      # instance = Stripe::AccountCapabilities.new
      # assertion here. ref: https://crystal-lang.org/reference/guides/testing.html
      # validator = Stripe::AccountCapabilities::ENUM_VALIDATOR_FOR_TAX_REPORTING_US_1099_MISC
      # validator.allowable_values.each do |value|
      #   instance.tax_reporting_us_1099_misc = value.as(String)
      # end
    end
  end

  describe "test attribute 'transfers'" do
    it "should work" do
      # instance = Stripe::AccountCapabilities.new
      # assertion here. ref: https://crystal-lang.org/reference/guides/testing.html
      # validator = Stripe::AccountCapabilities::ENUM_VALIDATOR_FOR_TRANSFERS
      # validator.allowable_values.each do |value|
      #   instance.transfers = value.as(String)
      # end
    end
  end

  describe "test attribute 'treasury'" do
    it "should work" do
      # instance = Stripe::AccountCapabilities.new
      # assertion here. ref: https://crystal-lang.org/reference/guides/testing.html
      # validator = Stripe::AccountCapabilities::ENUM_VALIDATOR_FOR_TREASURY
      # validator.allowable_values.each do |value|
      #   instance.treasury = value.as(String)
      # end
    end
  end

  describe "test attribute 'us_bank_account_ach_payments'" do
    it "should work" do
      # instance = Stripe::AccountCapabilities.new
      # assertion here. ref: https://crystal-lang.org/reference/guides/testing.html
      # validator = Stripe::AccountCapabilities::ENUM_VALIDATOR_FOR_US_BANK_ACCOUNT_ACH_PAYMENTS
      # validator.allowable_values.each do |value|
      #   instance.us_bank_account_ach_payments = value.as(String)
      # end
    end
  end
end
