#  Stripe API
#
# The Stripe REST API. Please see https://stripe.com/docs/api for more details.
#
# The version of the OpenAPI document: 2020-08-27
# Contact: dev-platform@stripe.com
# Generated by: https://openapi-generator.tech
#

require "../spec_helper"

# Unit tests for Stripe::PaymentMethodDetailsCardThreeDSecure
# Automatically generated by openapi-generator (https://openapi-generator.tech)
# Please update as you see appropriate
describe Stripe::PaymentMethodDetailsCardThreeDSecure do
  describe "test an instance of PaymentMethodDetailsCardThreeDSecure" do
    it "should create an instance of PaymentMethodDetailsCardThreeDSecure" do
      # instance = Stripe::PaymentMethodDetailsCardThreeDSecure.new
      # expect(instance).to be_instance_of(Stripe::PaymentMethodDetailsCardThreeDSecure)
    end
  end

  describe "test attribute 'authentication_flow'" do
    it "should work" do
      # assertion here. ref: https://crystal-lang.org/reference/guides/testing.html
      # validator = EnumValidator.new("String", ["challenge", "frictionless"])
      # validator.allowable_values.each do |value|
      #   expect { instance.authentication_flow = value }.not_to raise_error
      # end
    end
  end

  describe "test attribute 'result'" do
    it "should work" do
      # assertion here. ref: https://crystal-lang.org/reference/guides/testing.html
      # validator = EnumValidator.new("String", ["attempt_acknowledged", "authenticated", "failed", "not_supported", "processing_error"])
      # validator.allowable_values.each do |value|
      #   expect { instance.result = value }.not_to raise_error
      # end
    end
  end

  describe "test attribute 'result_reason'" do
    it "should work" do
      # assertion here. ref: https://crystal-lang.org/reference/guides/testing.html
      # validator = EnumValidator.new("String", ["abandoned", "bypassed", "canceled", "card_not_enrolled", "network_not_supported", "protocol_error", "rejected"])
      # validator.allowable_values.each do |value|
      #   expect { instance.result_reason = value }.not_to raise_error
      # end
    end
  end

  describe "test attribute 'version'" do
    it "should work" do
      # assertion here. ref: https://crystal-lang.org/reference/guides/testing.html
      # validator = EnumValidator.new("String", ["1.0.2", "2.1.0", "2.2.0"])
      # validator.allowable_values.each do |value|
      #   expect { instance.version = value }.not_to raise_error
      # end
    end
  end
end
